{"version":3,"sources":["components/videos-container/pictures/videocam-dark.jpg","services/web-storage-service.js","components/spinner/spinner.js","components/item-list/item-list.js","components/header/header.js","components/file-drop-wrapper/file-drop-wrapper.jsx","components/picture-slider/picture-slider.js","components/drag-n-drop/editor-context.jsx","components/drag-n-drop/droppable-wrapper.jsx","components/drag-n-drop/draggable-item-wrapper.jsx","components/wrapper-card/wrapper-card.jsx","components/draggable-box/draggable-box.jsx","components/drag-n-drop/draggable-list-items.jsx","components/vertical-column/vertical-column.jsx","components/videoset-description/videoset-description.jsx","components/editor-bar/editor-bar.jsx","components/modal/modal.jsx","components/videos-container/videos-container.jsx","components/video-player/video-player.jsx","components/videoset-editor-page/videoset-editor-page.js","components/videoset-page/videoset-page.jsx","components/category-page/category-page.js","components/login-page/login-page.jsx","components/edit-users-page/edit-users-page.jsx","components/app/app.js","index.js"],"names":["module","exports","WebStorageService","_apiBase","getResourse","url","a","fetch","res","ok","Error","json","findVideosetsByName","name","videosets","map","_transformItem","error","getLast10Videosets","id","then","getAllSubcategories","subcategories","getAllUsers","token","localStorage","getItem","method","mode","headers","users","patchUserByMainAdmin","body","JSON","stringify","postCategory","data","isPublished","postSubcategory","categoryId","type","postVideoset","subcategoryId","postFormData","file","temp","itemId","_id","formData","FormData","append","newUrl","slice","indexOf","postPicture","source","postLogo","postVideo","postURLVideo","postSlider","videosetId","slider","postVideosContainer","videosContainer","deleteItem","deleteSlider","deleteVideosContainer","deleteVideoset","deleteCategory","deleteSubcategory","deleteLogo","patchVideosContainer","props","patchVideoset","deletePhoto","deleteVideo","getPicturesOfSlider","pictures","picture","signInByCredentials","email","password","statusText","registerByCredentials","nickname","result","checkDataForErrors","getUserProfile","errors","keys","Object","index","length","key","kind","getAllCategories","categories","getSubcategoriesOfCategory","getSubcategory","subcategory","getCategory","category","_addSubcategoriesToCategory","getVideosetsOfSubcategory","getVideoset","videoset","getVideosOfVideosContainer","videos","item","subItems","Spinner","className","ItemList","state","itemList","selected","componentDidUpdate","prevProps","maxNumber","updateList","setState","onItemSelected","this","renderItems","numberOfElements","currentItemList","itemViews","onClick","style","display","showMore","Component","Header","webStorageService","foundVideosets","search","onSignOutButtonClick","setItem","onUserUpdate","componentDidMount","user","profile","updateLocalStorage","findVideosets","searchInput","onChange","target","value","placeholder","FoundVideoset","history","useHistory","push","findedVideosetsViews","list","ViewAllUsersButton","userCard","status","to","FileDropWrapper","editable","children","onFilesAdded","extraClassName","useState","highlight","setHighlight","onDragEnter","e","preventDefault","stopPropagation","onDragOver","onDragLeave","onDrop","dataTransfer","PictureSlider","slides","slideIndex","initSlides","dataURLs","path","document","createElement","src","changeSlideIndex","number","newSlideIndex","onPrevButtonClick","onNextButtonClick","onDotClick","onPictureAdded","files","uploadingPicture","i","onPictureDeleted","slide","deletingPicture","addPictureButton","htmlFor","multiple","currentSlide","dots","element","isActive","addAndDeleteButtonGroup","SlideView","alt","DotView","EditorContext","onDragEnd","DroppableWrapper","droppableId","innerRef","droppableProps","droppablePlaceholder","ref","DraggableItemWrapper","draggableId","draggableProps","dragHandleProps","WrapperCard","header","DraggableBox","content","itemPosition","onItemDeleted","closeButton","data-dismiss","aria-label","aria-hidden","DraggableListItems","items","position","toBox","VerticalColumn","String","VideosetDescription","text","editableText","editableTitle","editStatus","onSaveClick","newText","saveDescription","onChangeClick","newStatus","split","titleText","mainText","title","rows","textField","changeButton","linesOfDescription","description","left","right","Row","EditorBar","isDropdownMenuOpened","videosetItems","Videos","isDropdownSubcategoryMenuOpened","onDropdownMenuClick","onDropdownItemClick","onVideosetElementAdded","onDropdownSubcategoryMenuClick","onSubcategoryItemClick","changeSubcategory","onSaveChangesButtonClick","saveChanges","onCancelButtonClick","cancelAction","onChangeTitleButtonClick","changeTitle","onDeleteVideosetClickButton","onChangeLogoButtonClick","console","log","changeLogo","hasLogo","onDeleteLogoButtonClick","dropdownMenuStyle","dropdownSubcategoryMenuStyle","SaveChangesButton","onThisClick","DeleteVideosetButton","dropdownElements","values","currentSubcategory","find","owner","subcategoriesViews","filter","deleteVideosetButton","data-toggle","role","aria-haspopup","aria-expanded","x-placement","Modal","onClose","show","footer","modalClassName","tabIndex","aria-labelledby","VideosContainer","editableName","showModal","inputFormURL","onVideoViewClick","currentVideo","video","onVideoClick","uploadingVideos","uploadingVideo","updateContainer","uploadingURLVideo","Url","hostname","queryString","query","queryParams","URLSearchParams","get","newURL","prompt","saveTitle","showVideoUploadingModalButton","addVideosButton","modal","textAlign","videosViews","videoLogo","deletingVideo","VideoPlayer","width","height","frameBorder","allowFullScreen","VideosetEditorPage","startData","columnId","counters","deleted","added","videoPlayer","showVideoUploadingModal","destination","movedPart","splice","initialAddingItems","order","addItemToColumn","saveVideosContainerTitle","updateSlider","pictureId","substring","indexOfElement","findIndex","newSlider","ReactComponent","counter","newItem","ReactComponentName","extraProps","newProps","itemList1","pop","videoURL","window","open","onVideosetItemDeleted","newTitle","logo","videosetData","subcategoryData","deleteVideoButton","videoPlayerModal","VideosetPage","initPage","pageItems","EditPageButton","userString","parse","endsWith","CategoryPage","selectedCategory","selectedSubcategory","numberOfVideosets","last10Videosets","updateCategories","onCategorySelected","updateSubcategories","onSubcategorySelected","updateVideosets","renderVideosets","videosetsCards","logoURL","renderList","onDeleteButtonClick","includes","addCategory","addSubcategory","addVideoset","showMoreVideosets","ColorButton","addCategoryButton","addSubcategoryButton","addVideosetButton","categoriesList","categoryDetails","videosetViews","renderSubcategoryTitle","renderLast10VideosetsTitle","VideosetCard","subcategoryName","descriptionItem","pathToVideoset","LoginPage","redirect","registerEmail","registerPassword","registerName","registerNickname","signInEmail","signInPassword","onSignInErrorMessage","onRegisterErrorMessage","onSignInButtonClick","onRegisterButtonClick","renderRedirect","registerCard","signInCard","EditUsersPage","admin","allUsers","numberOfUsers","updateUsers","updatedUsers","sort","user1","user2","changeUserStatus","changes","renderUserViews","usersCards","changeStatus","UserCard","ban","colorButton","makeAdminButton","banUserButton","unbanUserButton","makeMainAdminButton","makeUserButton","App","updateUser","component","exact","render","match","params","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3b51994e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/videocam-dark.c3847802.jpg\";","\nexport default class WebStorageService {\n       _apiBase = 'https://mike-test-heroku-node.herokuapp.com/api'\n    getResourse = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`)\n        if (!res.ok)\n            throw new Error(`Could not fetch ${url}`)\n\n        return await res.json()\n    }\n\n    findVideosetsByName = async (name) => {\n        try {\n            const videosets = await this.getResourse(`/findvideosets?name=${name}`)\n            \n            return videosets.map(this._transformItem)\n        }\n        catch (error) {\n            return { error: true }\n        }\n    }\n\n    getLast10Videosets = async (id) => {\n        return this.getResourse(`/videosets-last-10?categoryId=${id}`).then((videosets)=>videosets.map(this._transformItem))\n    }\n    getAllSubcategories = async () => {\n        const subcategories = await this.getResourse('/subcategoriesall')\n        return subcategories.map(this._transformItem)\n    }\n\n\n    getAllUsers = async () => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/usersall`, {\n            method: 'GET',\n            mode:'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n        })\n        \n\n        if(!res.ok){\n            return {error:true}\n        }\n\n        const users = await res.json()\n        return users.map(this._transformItem)\n    }\n\n    patchUserByMainAdmin = async (id,body) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/users?id=${id}`, {\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(body) // body data type must match \"Content-Type\" header\n        })\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    } \n\n    postCategory = async (name) => {\n        const data = {name, isPublished:true}\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/categories`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        if (!res.ok){\n            \n            return { error: true }\n        }\n\n        return await res.json()\n    }\n\n    postSubcategory = async (name, categoryId, type = \"text\") => {\n        const data = {name, type}\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/subcategories?categoryId=${categoryId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        if (!res.ok){\n            \n            return { error: true }\n        }\n\n        return await res.json()\n    }\n\n    postVideoset = async (name,subcategoryId) => {\n        const data = {name}\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/videoset?subcategoryId=${subcategoryId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        if (!res.ok){\n            \n            return { error: true }\n        }\n    }\n\n    postFormData = async(url,id,file,type,data) => {\n        const token = localStorage.getItem('token')\n        \n        const res = await fetch(`${this._apiBase}${url}${id}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        \n        if (!res.ok){\n            return { error: true }\n        }\n        const temp = await res.json();\n        const itemId = temp._id;\n        const formData = new FormData()\n        formData.append(type, file)\n\n        const newUrl = url.slice(0,url.indexOf('?'))\n        const uploading = await fetch(`${this._apiBase}${newUrl}/upload/${itemId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData // body data type must match \"Content-Type\" header,\n        })\n      \n        if (!uploading.ok)\n            return { error: true }\n\n        return { ok: true }\n    }\n\n    postPicture = async (id, file) => {\n        return await this.postFormData('/picture?pictureSliderId=', id, file, 'image', { source: 'local' })\n    }\n\n    postLogo = async (id, file) => {\n        return await this.postFormData('/logo?videosetId=', id, file, 'image', { source: 'local' })\n    }\n\n    postVideo = async (id, name, file) => {\n        return await this.postFormData('/video?videosContainerId=',id,file,'video',{source:'local', name})\n    }\n\n    postURLVideo = async (id, name, url) => {\n        const data = { source: 'external', name, file: url }\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/video?videosContainerId=${id}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        if(!res.ok)\n\n        return {error:true}\n\n        return await res.json()\n    }\n\n\n\n\n    postSlider = async (videosetId) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/picture-slider?videosetId=${videosetId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n            // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        if(!res.ok){\n            \n            return {error:true}\n        }\n\n\n        const slider = await res.json();\n        return this._transformItem(slider)\n    }\n\n    postVideosContainer = async (videosetId) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/videos-container?videosetId=${videosetId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n            // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        if(!res.ok){\n            \n            return {error:true}\n        }\n\n\n        const videosContainer = await res.json();\n        return this._transformItem(videosContainer)\n    }\n\n\n    deleteItem = async (url, id) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}${url}?id=${id}`, {\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n            // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    }\n\n    deleteSlider = async (id) => {\n        return await this.deleteItem('/picture-slider',id)\n    }\n\n    deleteVideosContainer = async (id) => {\n        return await this.deleteItem('/videos-container',id)\n    }\n\n    deleteVideoset = async (id) => {\n        return await this.deleteItem('/videoset',id)\n    }\n\n    deleteCategory = async (id) => {\n        return await this.deleteItem('/categories', id)\n    }\n\n    deleteSubcategory = async (id) => {\n        return await this.deleteItem('/subcategories', id)\n    }\n\n    deleteLogo = async (id) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/logo?videosetId=${id}`, {\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n            // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    }\n\n    patchVideosContainer = async (id, props) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/videos-container?id=${id}`, {\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(props) // body data type must match \"Content-Type\" header\n        })\n\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    }\n    \n\n\n    patchVideoset = async (id, props) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/videosets?videosetId=${id}`, {\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(props) // body data type must match \"Content-Type\" header\n        })\n\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    }\n\n    deletePhoto = async (id) => {\n        return await this.deleteItem('/picture',id)\n    }\n\n    deleteVideo = async (id) => {\n        return await this.deleteItem('/video',id)\n\n    }\n\n    getPicturesOfSlider = async (id) => {\n        const pictures = await this.getResourse(`/pictures?pictureSliderId=${id}`)\n        return pictures.map(picture => `${this._apiBase}/picture/${picture._id}`)\n    }\n\n    signInByCredentials = async (email, password) => {\n        const data = { email, password }\n        const url = '/users/login'\n        const res = await fetch(`${this._apiBase}${url}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        if (!res.ok)\n            return { ok: false, error: res.statusText }\n\n        return await res.json()\n\n    }\n\n    registerByCredentials = async (name, nickname, email, password) => {\n        const data = { name, nickname, email, password }\n        const url = '/users'\n        const res = await fetch(`${this._apiBase}${url}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        const result = await res.json()\n        if (!res.ok)\n            return this.checkDataForErrors(result)\n\n        return result\n    }\n\n    getUserProfile = async (token) => {\n        const url = '/users/me'\n        const res = await fetch(`${this._apiBase}${url}`, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n        })\n        if (!res.ok)\n            return { error: true }\n\n        return await res.json()\n    }\n\n\n    checkDataForErrors = (data) => {\n\n        if (data.name === \"ValidationError\") {\n            const { errors } = data\n            const keys = Object.keys(errors)\n            for (let index = 0; index < keys.length; index++) {\n                const key = keys[index]\n                if (errors[key].kind === \"required\")\n                    return { error: \"Please enter all information\" }\n\n                if (errors[key].kind === \"user defined\")\n                    return { error: `Invalid ${key}!` }\n\n                if (errors[key].kind === \"minlength\" && key === \"password\")\n                    return { error: \"Password should contain at least 7 characters!\" }\n\n            }\n        }\n\n        else if (data.name === \"MongoError\") {\n            return { error: \"This e-mail is already used, try another\" }\n        }\n\n    }\n\n\n\n\n    getAllCategories = async () => {\n        const categories = await this.getResourse('/categories')\n        return categories.map(this._transformItem)\n    }\n\n    getSubcategoriesOfCategory = async (categoryId) => {\n        const subcategories = await this.getResourse(`/subcategories?categoryId=${categoryId}`)\n        return subcategories.map(this._transformItem)\n    }\n\n    getSubcategory = async (id) => {\n        const subcategory = await this.getResourse(`/subcategories/${id}`)\n        return this._transformItem(subcategory)\n    }\n\n    getCategory = async (id) => {\n        const category = await this.getResourse(`/categories/${id}`)\n        return this._addSubcategoriesToCategory(this._transformItem(category))\n    }\n\n    getVideosetsOfSubcategory = async (subcategoryId) => {\n        const videosets = await this.getResourse(`/videosets?subcategoryId=${subcategoryId}`)\n        return videosets.map(this._transformItem)\n    }\n\n    getVideoset = async (id) => {\n        const videoset = await this.getResourse(`/videoset/${id}`)\n        return this._transformItem(videoset)\n    }\n\n\n    getVideosOfVideosContainer = async (id) => {\n        const videos = await this.getResourse(`/videos?videosContainerId=${id}`)\n        return videos.map(this._transformItem)\n    }\n\n    _transformItem = (item) => {\n        return {\n            ...item,\n            id: item._id,\n        }\n    }\n\n\n    _addSubcategoriesToCategory = async (category) => {\n        const subcategories = await this.getResourse(`/subcategories?categoryId=${category.id}`)\n        return {\n            ...category,\n            subItems: subcategories\n        }\n    }\n\n\n\n}","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css\">\n      <div className=\"lds-double-ring\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\n\nimport Spinner from '../spinner/spinner'\nimport './item-list.css';\n\nexport default class ItemList extends Component {\n\n  // swapiService = new SwapiService()\n\n  state = {\n    itemList: null,\n    selected: null\n  }\n\n  componentDidMount() {\n    this.updateList()\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.itemList !== this.props.itemList || this.props.maxNumber !== prevProps.maxNumber)\n      this.updateList()\n  }\n\n  updateList = () => {\n    const { itemList, maxNumber } = this.props\n    this.setState({ itemList, maxNumber, selected:null })\n  }\n\n  onItemSelected = (item, index) => { \n    this.setState({ selected: index })\n    this.props.onItemSelected(item) \n  }\n\n\n  render() {\n\n    const { itemList, maxNumber, selected } = this.state\n    const { renderItems } = this.props\n    if (!itemList)\n      return <Spinner />\n\n    const numberOfElements = maxNumber ? maxNumber : itemList.length\n\n    const currentItemList = itemList.slice(0,numberOfElements)\n    const itemViews = (!renderItems) ? currentItemList.map((item, index) => {\n      const { name, id } = item\n      return (\n        <li className={`list-group-item ${index === selected ? 'selected-list-group-item' : ''}`}\n          key={id}\n          onClick={() => this.onItemSelected(item, index)}>{name}\n        </li>\n      )\n    }):renderItems(currentItemList, selected, this.onItemSelected)\n  \n    return (\n      <div>\n        <ul className=\"item-list list-group\">\n          {itemViews}\n        </ul>\n        <div style={{display:'flex'}}>\n          {(maxNumber && maxNumber < itemList.length) ? (<button type=\"button\" className=\"show-more-button btn btn-lg btn-outline-success\" onClick={this.props.showMore}>Show more</button>) : null}\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport './header.css'\nimport WebStorageService from '../../services/web-storage-service';\nimport ItemList from '../item-list/item-list';\nclass Header extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        foundVideosets:null,\n        search:''\n    }\n\n    onSignOutButtonClick = () => {\n        localStorage.setItem('user', '')\n        localStorage.setItem('token', '')\n        this.props.onUserUpdate()\n    }\n\n    componentDidMount = async () => {\n        const token = localStorage.getItem('token'),\n        user = localStorage.getItem('user')\n\n        if (!token || !user)\n            return\n\n        const profile = await this.webStorageService.getUserProfile(token)\n        if (profile.error) {\n            return this.updateLocalStorage()\n        }\n        this.updateLocalStorage(JSON.stringify(profile),token)\n        \n    }\n\n    updateLocalStorage = (user, token) => {\n        localStorage.setItem('user', user)\n        localStorage.setItem('token', token)\n        this.props.onUserUpdate()\n    }\n\n    findVideosets = async (name) => {\n        this.setState({ search: name })\n        if(name === ''){\n            return this.setState({ foundVideosets: null })\n        }\n        const videosets = await this.webStorageService.findVideosetsByName(name)\n        if (!videosets.error)\n            this.setState({ foundVideosets: videosets, search: '' })\n    }\n\n\n    render() {\n        // localStorage.setItem('user','')\n        const { user } = this.props\n        const {foundVideosets} = this.state\n\n        const searchInput = (\n            <div className=\"search-input-form\">\n                <input onChange={({ target }) => this.findVideosets(target.value)} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n            </div>\n        )\n\n        \n\n        const FoundVideoset = ({id, name, onClick}) => {\n            const history = useHistory()\n\n            return (<li className=\"list-group-item\"\n                key={`Found${id}`}\n                onClick={() => {\n                    onClick()\n                    history.push('../')\n                    history.push(`/videosets/${id}`)\n\n                }}>{name}\n            </li>)\n        }\n\n        const renderFoundVideosets = (list) => {\n            return list.map(({ id, name }) => <FoundVideoset key={`Found${id}`} id={id} name={name} onClick={()=>this.setState({foundVideosets:null})} />)\n        }\n\n        const findedVideosetsViews = foundVideosets ? (\n            <ItemList itemList={foundVideosets} renderItems={renderFoundVideosets} />\n        ) : null\n\n\n        const ViewAllUsersButton = () => {\n            const history = useHistory()\n            const onClick = () => {\n                history.push('/users')\n            }\n            return (<button onClick={onClick} className=\"btn btn-primary\" type=\"submit\">View all users</button>)\n        }\n\n        const userCard = (user) ?\n            (<div className=\"user-card card\">\n                <h5 className=\"welcome-title\">Welcome back, {user.name}!</h5>\n                <div className=\"header-button-group\">\n                    <button className=\"btn btn-secondary header-button profile-button\" type=\"submit\">View profile</button>\n                    <button className=\"btn btn-secondary header-button signout-button\" type=\"submit\" onClick={this.onSignOutButtonClick}>Sign out</button>\n                </div>\n                <div className=\"btn-group\">\n                    {(user.status === 'main-admin') ? (<ViewAllUsersButton />) : null}\n                </div>\n            </div>)\n            :\n            (<h2 className=\"login-link\">\n                <Link to=\"/login\">Login</Link>\n            </h2>)\n\n        return (\n            <div className=\"header d-flex\">\n                <div className=\"web-storage-title\">\n                    <Link to=\"/\">Web Storage</Link>\n                </div>\n                <div className=\"flex header-card-box\">\n                    {userCard}\n                    {searchInput}\n                    <div className=\"found-videosets\">\n                        {findedVideosetsViews}\n                    </div>\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\nexport default Header","import React, {useState} from 'react';\nimport './file-drop-wrapper.css'\nconst FileDropWrapper = ({editable, children, onFilesAdded, extraClassName}) => {\n\n    const [highlight, setHighlight] = useState(false)\n    \n    \n    const onDragEnter = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        setHighlight(true)\n        \n    }\n    const onDragOver = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        setHighlight(true)\n    }\n    const onDragLeave = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        setHighlight(false)\n    }\n    const onDrop = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        setHighlight(false)\n        \n        onFilesAdded(e.dataTransfer)\n    }\n    const className = `card drop-area ${(extraClassName&&!highlight)?extraClassName:''} ${highlight?'highlight border-success':''}`\n    return (!editable) ? (<div>{children}</div>) : (\n        <div className={className} onDragEnter={onDragEnter} onDragOver={onDragOver} onDragLeave={onDragLeave} onDrop={onDrop}>\n            {children}\n        </div>\n    )\n}\n\nexport default FileDropWrapper","import React, { Component } from 'react';\n// import WebStorageService from '../../services/web-storage-service';\nimport './picture-slider.css'\nimport Spinner from '../spinner/spinner';\nimport FileDropWrapper from '../file-drop-wrapper/file-drop-wrapper';\nexport default class PictureSlider extends Component {\n\n    state = {\n        slides: null,\n        slideIndex: null,\n        editable: false\n    }\n\n\n    componentDidMount() {\n        // const { dataURLs, editable } = this.props\n        // const slides = (dataURLs)? dataURLs.map((path) => {\n        //     return (<SlideView key={path} path={path} />)\n        // }):null \n        // this.setState({ slides, slideIndex: 0, editable: (editable) ? editable : false })\n        this.initSlides()\n\n    }\n\n    initSlides = () => {\n        const { dataURLs, editable, slideIndex } = this.props\n\n\n        const slides = (dataURLs) ? dataURLs.map((path) => {\n            const img = document.createElement('img');\n            img.src = path;\n            return (<SlideView key={path} path={path} />)\n        }) : null\n        this.setState({ slides, slideIndex: (slideIndex && slideIndex >= 0) ? slideIndex : 0, editable: (editable) ? editable : false })\n    }\n\n    changeSlideIndex = (number) => {\n        const { slides, slideIndex } = this.state\n        const currentSlideIndex = slideIndex\n        let newSlideIndex = currentSlideIndex + number\n\n        if (newSlideIndex >= slides.length)\n            newSlideIndex -= slides.length\n\n        if (newSlideIndex < 0)\n            newSlideIndex += slides.length\n\n\n        this.setState({ slideIndex: newSlideIndex })\n    }\n\n    onPrevButtonClick = () => {\n        this.changeSlideIndex(-1)\n    }\n\n    onNextButtonClick = () => {\n        this.changeSlideIndex(1)\n    }\n\n    onDotClick = (index) => {\n        const { slideIndex } = this.state\n        this.changeSlideIndex(index - slideIndex)\n    }\n\n    onPictureAdded = async ({ files }) => {\n        const { uploadingPicture } = this.props\n        for (let i = 0; i < files.length; i++)\n            await uploadingPicture(this.props.id, this.state.slideIndex, files[i])\n    }\n\n    onPictureDeleted = () => {\n        const { slides, slideIndex } = this.state\n        const slide = slides[slideIndex]\n        this.props.deletingPicture(this.props.id, slideIndex, slide.props.path)\n\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.dataURLs !== this.props.dataURLs) {\n            this.initSlides()\n        }\n    }\n\n    render() {\n        const { slides, slideIndex, editable } = this.state\n\n        const addPictureButton = (editable) ? (\n            <div>\n                <label htmlFor=\"file-upload\" className=\"btn btn-outline-success custom-file\">\n                    Upload pictures\n                </label>\n                <input multiple=\"multiple\" onChange={({ target }) => this.onPictureAdded(target)} id=\"file-upload\" type=\"file\" className=\"custom-file-input\" />\n            </div>\n        ) : null\n        \n        if (!slides || slides.length === 0)\n            return (\n                <FileDropWrapper editable onFilesAdded={this.onPictureAdded}>\n                    <h3 className=\"error-message\">There's no content</h3>\n                    <div className=\"add-delete-btn-container\">\n                        <div className=\"add-delete-btn-group btn-group\">\n                            {addPictureButton}\n                        </div>\n                    </div>\n                </FileDropWrapper>);\n\n\n        if (!slides[slideIndex])\n            return <Spinner />\n\n        const currentSlide = slides[slideIndex];\n        const dots = slides.map((element, index) => {\n            const isActive = index === slideIndex\n            return <DotView isActive={isActive} id={index} onClick={this.onDotClick} key={\"dot\" + index} />\n        });\n\n        const addAndDeleteButtonGroup = (editable) ? (\n            <div className=\"add-delete-btn-container\">\n                <div className=\"add-delete-btn-group btn-group\">\n                    {addPictureButton}\n                    <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => this.onPictureDeleted()}>Delete picture</button>\n                </div>\n            </div>) : null\n\n\n\n\n        return (\n            <div className=\"content\">\n                <FileDropWrapper editable={editable} onFilesAdded={this.onPictureAdded}>\n                    <div className=\"slider\">\n                        <div className=\"wrap\">\n                            {currentSlide}\n                            <div className=\"prev\" onClick={this.onPrevButtonClick}>\n                                <div className=\"arrow-left\"></div>\n                            </div>\n                            <div className=\"next\" onClick={this.onNextButtonClick}>\n                                <div className=\"arrow-right\"></div>\n                            </div>\n                        </div>\n                        <div className=\"slider-dots\">\n                            {dots}\n                        </div>\n                        {addAndDeleteButtonGroup}\n\n                    </div>\n                </FileDropWrapper>\n            </div>\n        );\n    }\n}\n\nconst SlideView = ({ path }) => {\n\n    return (\n        <div className=\"slider-item\">\n            <img src={path} alt=\"slider\" />\n        </div>\n    )\n}\n\nconst DotView = ({ isActive, id, onClick }) => {\n    const className = \"dot\" + (isActive ? \" dot-active\" : \"\")\n    return (\n        <div className={className} onClick={() => onClick(id)}></div>\n    )\n}","import * as React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\n\nconst EditorContext = (props) =>\n  <div className=\"editor\">\n    <DragDropContext onDragEnd={props.onDragEnd} {...props} />\n  </div>\n\nexport default EditorContext","import * as React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst DroppableWrapper = ({droppableId,className,children}) =>\n{\n  return (\n  <Droppable droppableId={droppableId}>\n    {({innerRef,droppableProps,droppablePlaceholder}) => (\n       <div className={className}\n            ref={innerRef}\n            {...droppableProps}\n            {...droppablePlaceholder}>\n          {children}\n        </div>\n    )}\n  </Droppable>)\n}\n\nexport default DroppableWrapper","import * as React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\n\nconst DraggableItemWrapper = ({ draggableId, index, className, children }) =>\n  <Draggable draggableId={draggableId} index={index}>\n    {({innerRef,draggableProps,dragHandleProps}) => (\n      <div className={className} ref={innerRef} {...draggableProps} {...dragHandleProps}>\n        {children}\n      </div>\n    )}\n  </Draggable>\n\nexport default DraggableItemWrapper","import React from 'react';\nimport './wrapper-card.css'\n\nconst WrapperCard = ({children,header}) => {\n\n    return (\n        <div className=\"card wrapper-card\">\n            {(header) ? header : (<div className=\"mb-4\"></div>)}\n            <div className=\"wrapper-card-content\">\n                {children}\n            </div>\n        </div>)\n}\n\nexport default WrapperCard","import * as React from 'react';\nimport DraggableItemWrapper from '../drag-n-drop/draggable-item-wrapper';\nimport './draggable-box.css'\nimport WrapperCard from '../wrapper-card/wrapper-card';\n\nconst DraggableBox = ({content,value,itemPosition, onItemDeleted}) => {\n  const closeButton = (\n    <div className=\"delete-item-button\">\n      <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => onItemDeleted(value)}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>)\n  return (\n    <DraggableItemWrapper draggableId={value} index={itemPosition}>\n      \n      <div className=\"draggable-box\">\n        \n        <WrapperCard header={closeButton}>\n          \n          <div>{content}</div>\n        </WrapperCard>\n      </div>\n\n    </DraggableItemWrapper>\n  )\n}\n\nexport default DraggableBox","import * as React from 'react';\nimport DraggableBox from '../draggable-box/draggable-box';\n\n\nconst DraggableListItems = ({items,onItemDeleted}) =>{\n  \n  return <div> {items.map((item,position)=>toBox(item,position,onItemDeleted))} </div>\n}\n\nfunction toBox(item, position,onItemDeleted) {\n  \n  return <DraggableBox onItemDeleted={onItemDeleted} key={item.props.id} className=\"box\" itemPosition={position} value={item.props.id} content={item} />\n}\n\nexport default DraggableListItems","import * as React from 'react';\nimport DroppableWrapper from '../drag-n-drop/droppable-wrapper';\nimport DraggableListItems from '../drag-n-drop/draggable-list-items';\n\nconst VerticalColumn = ({id,items, onItemDeleted}) =>\n{\n  id = String(id)\n  return (\n  <DroppableWrapper droppableId={id} className=\"source\">\n    <DraggableListItems items={items} onItemDeleted={onItemDeleted}  />\n  </DroppableWrapper>)\n}\n\nexport default VerticalColumn","import React, { Component } from 'react';\nimport './videoset-description.css'\nclass VideosetDescription extends Component{\n\n    state = {\n        text:'',\n        editable:false,\n        editableText:'',\n        editableTitle:'',\n        editStatus:false\n    }\n\n    componentDidMount = () => {\n        const {text, editable} = this.props\n\n        this.setState({ text: (text) ? text : '&&&', editable: (editable) ? editable : false })\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if(this.props.text !== prevProps.text){\n            this.setState({text:this.props.text})\n        }\n    }\n\n    onSaveClick = () => {\n        const {editableText, editableTitle} = this.state\n        const newText = (editableTitle!=='' ? editableTitle : 'Description') + \"&&&\" + editableText\n        this.setState({ text: newText, editStatus: false })\n        this.props.saveDescription(this.props.id, newText)\n    }\n\n    onChangeClick = () => {\n        const {editStatus,text} = this.state\n        const newStatus = !editStatus\n        const [titleText, mainText] = text.split('&&&')\n        this.setState({ editStatus: newStatus, editableText: mainText, editableTitle: titleText })\n    }\n    render() {\n        const { editable, editableText, editStatus, text, editableTitle } = this.state\n        const [titleText, mainText] = text.split('&&&')\n        const title = !editStatus ? <h3 className=\"text-success\"> {titleText && titleText !== \"\" ? titleText : \"Description\"}: </h3>\n            : <textarea className=\"form-control edit-title-area\" rows=\"1\" onChange={({ target }) => { this.setState({ editableTitle: target.value }) }} value={editableTitle}></textarea>\n            \n        const textField = (\n            <div className=\"form-group text-field\">\n                <textarea className=\"form-control edit-text-area\" rows=\"3\" onChange={({ target }) => { this.setState({ editableText: target.value }) }} value={editableText}></textarea>\n                <div className=\"btn-group\">\n                    <button type=\"button\" className=\"btn btn-success save-btn\" onClick={() => { this.onSaveClick() }}>Save changes</button>\n                    <button type=\"button\" className=\"btn btn-secondary save-btn\" data-dismiss=\"modal\" onClick={() => this.setState({ editStatus: !this.state.editStatus })}>Close</button>\n                </div>\n            </div>)\n\n        const changeButton = (editable) ? (\n            <div className=\"change-btn\">\n                <button type=\"button\" className=\"btn btn-outline-success btn-lg\" onClick={() => { this.onChangeClick() }}>Change</button>\n            </div>) : null\n\n        const linesOfDescription = !mainText ? \"\" : mainText.split('\\n').map((item, index) => <h4 key={`description-line${index}`} className=\"description\">{item}</h4>);\n        \n        const description = (\n            <div className=\"card-body\">\n                {(editStatus)?textField:(linesOfDescription)}\n            </div>)\n\n\n        return (\n            <div className=\"videoset-description\">\n                <Row left={title} right={description} />\n                <div>\n                    {(!editStatus) ? changeButton : null}\n                </div>\n            </div>)\n    }\n}\nconst Row = ({ left, right }) => {\n    const width = `row-item`;\n    return (\n        <div className=\"row mb2\">\n            <div className={width}>\n                {left}\n            </div>\n            <div className=\"col-md-9\">\n                {right}\n            </div>\n        </div>\n    )\n}\n\nexport default VideosetDescription","import React, { Component } from 'react';\nimport './editor-bar.css'\nimport { useHistory } from 'react-router-dom';\nimport WebStorageService from '../../services/web-storage-service';\nclass EditorBar extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        isDropdownMenuOpened: false,\n        videosetItems: {\n            PictureSlider: 'Slider',\n            VideosetDescription: 'Description',\n            Videos: 'Videos'\n        },\n        isDropdownSubcategoryMenuOpened:false,\n        subcategories:[],\n        videoset:null\n    }\n\n    componentDidMount = async() => {\n        const {videoset} = this.props\n        const subcategories = await this.webStorageService.getAllSubcategories()\n        this.setState({subcategories,videoset})\n    }\n\n\n    onDropdownMenuClick = () => {\n        const { isDropdownMenuOpened } = this.state\n        const newStatus = !isDropdownMenuOpened;\n        this.setState({ isDropdownMenuOpened: newStatus })\n    }\n\n    onDropdownItemClick = (element) => {\n        this.props.onVideosetElementAdded(element)\n        this.onDropdownMenuClick()\n    }\n\n    onDropdownSubcategoryMenuClick = () => {\n        const { isDropdownSubcategoryMenuOpened } = this.state\n        const newStatus = !isDropdownSubcategoryMenuOpened;\n        this.setState({ isDropdownSubcategoryMenuOpened: newStatus })\n    }\n\n    onSubcategoryItemClick = async (id) => {\n        await this.props.changeSubcategory(id)\n        this.onDropdownSubcategoryMenuClick()\n    }\n\n    onSaveChangesButtonClick = async () => {\n        await this.props.saveChanges()\n    }\n    onCancelButtonClick = () => {\n        this.props.cancelAction()\n    }\n\n    onChangeTitleButtonClick = () => {\n        this.props.changeTitle()\n    }\n\n    onDeleteVideosetClickButton = async () => {\n        await this.props.deleteVideoset()\n    }\n\n    onChangeLogoButtonClick = async ({files}) => {\n        console.log('KU')\n        await this.props.changeLogo(files[0])\n        const { videoset } = this.state\n        videoset.hasLogo = true\n        this.setState({videoset})\n    }\n\n    onDeleteLogoButtonClick = async () => {\n        await this.webStorageService.deleteLogo(this.state.videoset.id)\n        const { videoset } = this.state\n        videoset.hasLogo = false\n        this.setState({videoset})\n    }\n\n    render() {\n\n        const { isDropdownMenuOpened, isDropdownSubcategoryMenuOpened, videosetItems, subcategories, videoset } = this.state\n        const dropdownMenuStyle = `dropdown-menu ${isDropdownMenuOpened ? 'show' : ''}`\n        const dropdownSubcategoryMenuStyle = `dropdown-menu ${isDropdownSubcategoryMenuOpened ? 'show' : ''}`\n        const SaveChangesButton = ({ id,onClick }) => {\n            const history = useHistory()\n            const onThisClick = async () => {\n                await onClick()\n                history.push(`/videosets/${id}`)\n            }\n            return (<button className=\"btn btn-outline-success\" onClick={onThisClick}>Save changes</button>)\n        }\n\n        const DeleteVideosetButton = ({onClick})=> {\n            const history = useHistory()\n            const onThisClick = async () => {\n                await onClick()\n                history.push(`/`)\n            }\n            return (<button className=\"change-title btn btn-danger\" onClick={onThisClick}>Delete videoset</button>)\n        }\n\n        const saveChanges = (<SaveChangesButton id={this.props.id} onClick={async()=>await this.onSaveChangesButtonClick()}/>)\n        const dropdownElements = Object.values(videosetItems).map((element) =>\n            (<div key={`add ${element}`}>\n                <span className={`dropdown-item`} onClick={() => this.onDropdownItemClick(element)}>{element}</span>\n            </div>))\n\n        const currentSubcategory = (subcategories) ? subcategories.find(({ id }) => videoset.owner === id) : 0\n        \n        const subcategoriesViews = (subcategories) ? subcategories.filter(subcategory => subcategory.owner === currentSubcategory.owner)\n        .map(({id, name})=> {\n            \n            return (<div key={`add ${id}`}>\n                <span className={`dropdown-item ${videoset.owner === id ? 'text-info' : ''}`} onClick={() => this.onSubcategoryItemClick(id)}>{name}</span>\n            </div>\n        )}):null\n        const changeTitle = <button type=\"button\" className=\"change-title btn btn-primary\" onClick={this.onChangeTitleButtonClick}>Change title</button>\n\n        const changeLogo = (\n            <div className=\"change-title\">\n                <label htmlFor=\"logo-upload\" className=\"btn btn-warning custom-file\">Upload logo</label>\n                <input onChange={({ target }) => this.onChangeLogoButtonClick(target)} id=\"logo-upload\" type=\"file\" className=\"custom-file-input\" />\n            </div>)\n\n        const deleteLogo = (<button type=\"button\" className=\"change-title btn btn-danger\" onClick={this.onDeleteLogoButtonClick}>Delete logo</button>)\n        const deleteVideosetButton = <DeleteVideosetButton id={this.props.id} onClick={async()=>await this.onDeleteVideosetClickButton()}/>\n        return (\n            <div className=\"editor-bar-container\">\n                <div className=\"card editor-bar\">\n                    <ul className=\"nav nav-pills\">\n                        <li className=\"nav-item dropdown add-dropdown\">\n                            <h4 className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                                onClick={() => this.onDropdownMenuClick()}>Add item</h4>\n                            <div className={dropdownMenuStyle} x-placement=\"bottom-start\">\n                                {dropdownElements}\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"btn-group\">\n                                {changeLogo}\n                                {(videoset && videoset.hasLogo)?deleteLogo:null}\n                                {changeTitle}\n                                {deleteVideosetButton}\n                            </div>\n                        </li>\n                        <li className=\"nav-item dropdown add-dropdown\">\n                            <h4 className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                                onClick={() => this.onDropdownSubcategoryMenuClick()}>Select subcategory</h4>\n                            <div className={dropdownSubcategoryMenuStyle} x-placement=\"bottom-start\">\n                                {subcategoriesViews}\n                            </div>\n                        </li>\n                        <li className=\"nav-item editor-bar-buttons\">\n                            <div className=\"btn-group\">\n                                {saveChanges}\n                                <button className=\"btn btn-outline-danger\" onClick={this.onCancelButtonClick}>Cancel</button>\n                            </div>\n                        </li>\n                        \n\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default EditorBar","import React from 'react';\nimport './modal.css'\nconst Modal = ({ onClose, show, title, children, footer }) => {\n\n    const modalClassName = `video-modal modal ${show?'in display-block':'display-none'}`\n    return (\n        <div className={modalClassName}  tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\">\n                <div className=\"modal-backdrop\" onClick={({target}) =>(target.className === \"modal-backdrop\")?onClose():''}>\n                <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\">{title}</h4>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" onClick={()=>onClose()}>&times;</button>\n\n                        </div>\n                        <div className=\"modal-body\">\n                            {children}\n                        </div>\n                        <div className=\"modal-footer\">\n                        {footer}\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={onClose}>Go back</button>\n                            \n                        </div>\n                    </div>\n                </div>\n                </div>\n        </div>\n    )\n}\n\nexport default Modal","import React, { Component } from 'react'\nimport FileDropWrapper from '../file-drop-wrapper/file-drop-wrapper'\nimport videoLogo from './pictures/videocam-dark.jpg'\nimport './videos-container.css'\nimport Modal from '../modal/modal'\nimport Url from 'url-parse'\nexport default class VideosContainer extends Component {\n\n    // webStorageService = new WebStorageService()\n    state = {\n        editable:false,\n        editableName:false,\n        videos:[],\n        showModal:false,\n        inputFormURL:null,\n        name:'' //TODO\n    }\n\n    componentDidMount = async () => {\n        const {videos, editable, name} = this.props\n        this.setState({ name: name ? name : \"\", videos, editable: (editable) ? editable : false })\n    }\n\n    onVideoViewClick = (id) => {\n        const {videos} = this.state\n        const currentVideo = videos.find((video)=>video.id === id)\n        this.props.onVideoClick(currentVideo)\n    }\n\n\n    uploadingVideos = async ({files}) => {\n        const {id,uploadingVideo, updateContainer} = this.props\n\n        for(let i=0;i<files.length;i++)\n            await uploadingVideo(id, files[i])\n\n        this.setState({showModal:false})\n        await updateContainer(id)\n\n    }\n\n    showModal = () => {\n        this.setState({ showModal: true })\n    }\n\n    uploadingURLVideo = async () => {\n        const {inputFormURL} = this.state\n\n        const url = new Url(inputFormURL)\n        const hostname = url.hostname\n        if(hostname === 'www.youtube.com'){\n            const queryString = url.query\n            const queryParams = new URLSearchParams(queryString.slice(1))\n\n            const value = queryParams.get('v')\n            const newURL = `https://www.youtube.com/embed/${value}`\n            const name = prompt('Input video name: ', 'Video')\n            await this.props.uploadingURLVideo(this.props.id,name, newURL)\n\n        }\n        else {\n            const name = prompt('Input video name: ', 'Video')\n            await this.props.uploadingURLVideo(this.props.id,name, inputFormURL)\n        }\n        this.setState({showModal:false})\n\n\n    }\n\n    saveTitle() {\n        const {name} = this.state\n        this.props.saveTitle(name, this.props.id)\n    }\n\n\n    render() {\n\n        const { videos, editable, showModal, name, editableName } = this.state\n        const { id } = this.props\n\n        const showVideoUploadingModalButton = (editable) ? (\n            <div>\n                <button type=\"button\" className=\"btn btn-outline-success\" onClick={this.showModal}>Upload more videos</button>\n            </div>\n        ) : null\n        const addVideosButton = (editable) ? (\n            <div className=\"add-videos-button\">\n                <label htmlFor=\"file-upload\" className=\"btn btn-outline-success custom-file\">\n                    Upload videos\n                </label>\n                <input multiple=\"multiple\" onChange={({ target }) => this.uploadingVideos(target)} id=\"file-upload\" type=\"file\" className=\"custom-file-input\" />\n            </div>\n        ) : null\n\n        const addAndDeleteButtonGroup = (editable) ? (\n            <div className=\"add-delete-btn-container\">\n                <div className=\"add-delete-btn-group btn-group\">\n                    {showVideoUploadingModalButton}\n                </div>\n            </div>) : null\n\n        const modal = (showModal) ? (\n            <Modal show={showModal} onClose={() => this.setState({ showModal: false })} title=\"Uploading video\">\n                <div className=\"d-flex list-group nav-pills\">\n                    <div className=\"video-modal-line\">\n                        <h2>Upload video from compatible services</h2>\n                        <h4>(YouTube, Google Drive, Yandex Disk)</h4>\n                    </div>\n\n                    <div className=\"video-modal-line input-group\">\n                        <input className=\"form-control form-control-lg\" onChange={({ target }) => this.setState({ inputFormURL: target.value })} />\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-primary\" type=\"button\" onClick={this.uploadingURLVideo}>Upload</button>\n                        </div>\n                    </div>\n\n                    <div className=\"video-modal-line\">\n                        <h2 style={{ textAlign: 'center' }}>OR</h2>\n                    </div>\n\n                    <div className=\"video-modal-line\">\n                        <h2>Upload your local videos</h2>\n                    </div>\n\n                    <div className=\"video-modal-line\">\n                        <FileDropWrapper extraClassName=\"border-light\" editable onFilesAdded={this.uploadingVideos}>\n                            <div>\n                                <div className=\"col-lg-12 video-uploading-modal-card\">\n                                    <div className=\"video-uploading-text card-body\">\n                                        <h4 className=\"\">Drop videos here</h4>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </FileDropWrapper>\n                        <div style={{ display: 'flex' }} className=\"btn-group\">\n                            {addVideosButton}\n                        </div>\n                    </div>\n                    {/* </li> */}\n                </div>\n            </Modal>\n        ) : null\n\n        if (!videos || videos.length === 0)\n            return (\n                <div>\n                {modal}\n                <FileDropWrapper editable={editable} key={id} onFilesAdded={this.uploadingVideos}>\n                    <h3 className=\"error-message\">There's no content</h3>\n                    {addAndDeleteButtonGroup}\n                </FileDropWrapper>\n                </div>\n                );\n\n        const closeButton = (video) => editable ? (\n            <button className=\"btn btn-outline-danger\" onClick={() => { this.props.deletingVideo(video) }}>\n                Delete video\n            </button>\n        ) : null\n\n        const videosViews = (videos.length === 0)\n        ? (<h4 className=\"no-content\">There's no content</h4>)\n            : videos.map(({ name, id, owner }, index) => (\n            <div className=\"flex video-card\" key={`video${index}`}>\n                <div  className=\"card\" onClick={(target ) => {\n                        console.log(target)\n                        if (target !== 'button.btn.btn-outline-danger')\n                            this.onVideoViewClick(id)\n                    }}>\n\n                        <div className=\"card-header\">\n                            <h5 >{name}</h5>\n                        </div>\n                        <div className=\"card-body\">\n                            <img src={videoLogo} alt=\"img\" />\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <div className=\"btn-group\">\n                            {closeButton({ id, owner })}\n                        </div>\n                    </div>\n                </div>\n            ))\n\n\n        const title = (\n            <div className=\"flex\">\n                <ul className=\"nav nav-pills\">\n                    <li>\n                        {!editable || !editableName\n                        ? <h2 className=\"videos-module-title\">{name ? name : 'Videos'}</h2>\n                        : <input className=\"form-control videos-container-title\" rows=\"1\" onChange={({ target }) => { this.setState({ name: target.value }) }} value={name}></input>}\n                    </li>\n                    {editable ? <li className=\"change-container-title btn-group\">\n                        {!editableName\n                        ? <button className=\"btn btn-success\" onClick={() => { this.setState({ editableName: true }) }}>Change title</button>\n                        : <button className=\"btn btn-success\" onClick={() => { this.saveTitle() }}>Save changes</button>}\n                    </li> : null}\n                </ul>\n            </div>)\n\n\n\n        return (\n            <div>\n                {modal}\n                <FileDropWrapper editable={editable} key={id} onFilesAdded={this.uploadingVideos}>\n                    {title}\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                {videosViews}\n                            </div>\n                        </div>\n                        {addAndDeleteButtonGroup}\n                    </div>\n                </FileDropWrapper>\n            </div>\n        )\n    }\n}\n\n\n\n","import React from 'react';\n\nconst VideoPlayer = ({ url }) => {\n    return (\n        <div className=\"video-player\">\n            <div className=\"card\">\n                <div className=\"thumb-wrap\">\n                    <iframe title={url} width=\"560\" height=\"315\" src={url} frameBorder=\"0\" allowFullScreen></iframe>\n                </div>\n            </div>\n            <div id=\"grey\"></div>\n        </div>)\n}\n\nexport default VideoPlayer","import React, { Component } from 'react';\nimport PictureSlider from '../picture-slider/picture-slider';\nimport WebStorageService from '../../services/web-storage-service';\nimport EditorContext from '../drag-n-drop/editor-context';\nimport VerticalColumn from '../vertical-column/vertical-column';\nimport VideosetDescription from '../videoset-description/videoset-description';\nimport EditorBar from '../editor-bar/editor-bar'\nimport VideosContainer from '../videos-container/videos-container';\nimport VideoPlayer from '../video-player/video-player'\nimport './videoset-editor-page.css'\nimport Modal from '../modal/modal'\nimport Url from 'url-parse'\n\nexport default class VideosetEditorPage extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        data: null,\n        startData: null,\n        columnId: 0,\n        itemList: [],\n        videosetId: null,\n        counters: {\n\n        },\n        deleted: [],\n        added: [],\n        videoPlayer: null,\n        showModal: false,\n        showVideoUploadingModal:false\n    }\n\n    onDragEnd = async (result) => {\n        const { destination, source } = result;\n\n        if (!destination) { return }\n\n        const { itemList } = this.state;\n        const movedPart = itemList.splice(source.index, 1)[0];\n        itemList.splice(destination.index, 0, movedPart)\n       \n        this.setState({ itemList })\n        \n\n    }\n\n    async componentDidMount() {\n        const { id } = this.props\n        const { getVideoset, getSubcategory } = this.webStorageService\n        const videosetData = await getVideoset(id)\n        const subcategoryData = await getSubcategory(videosetData.owner)\n        this.setState({ videosetId: id, data: videosetData, startData: videosetData, subcategoryData })    \n        \n        this.initialAddingItems()\n    }\n\n    initialAddingItems = async () => {\n\n        const { data } = this.state\n        const { order } = data\n        \n\n        for (let i = 0; i < order.length; i++) {\n            const element = order[i]\n            \n            if (element.type === 'VideosetDescription' && element.value !== null) {\n                this.addItemToColumn(VideosetDescription, { text: element.value, saveDescription:this.saveDescription, editable: true })\n            }\n            else if (element.type === 'PictureSlider' && element.value) {\n                const dataURLs = await this.webStorageService.getPicturesOfSlider(element.value)\n                \n                this.addItemToColumn(PictureSlider, { id: element.value, dataURLs, editable: true, uploadingPicture: this.uploadingPicture, deletingPicture: this.deletingPicture })\n            }\n\n            else if (element.type === 'VideosContainer' && element.value) {\n                const videos = await this.webStorageService.getVideosOfVideosContainer(element.value)\n                await this.addItemToColumn(VideosContainer, { name: element.name, id: element.value, videos,  saveTitle: this.saveVideosContainerTitle, deletingVideo:this.deletingVideo, uploadingURLVideo: this.uploadingURLVideo, updateContainer: this.updateContainer, editable: true, onVideoClick: this.onVideoClick, uploadingVideo: this.uploadingVideo })\n            }\n        }\n\n    }\n\n    uploadingPicture = async (id, slideIndex, picture) => {\n        const res = await this.webStorageService.postPicture(id, picture)\n        if (!res.ok) {\n            \n            return\n        }\n        // const dataURLs = await this.webStorageService.getPicturesOfSlider(this.props.id)\n        this.updateSlider(id, slideIndex)\n    }\n\n    deletingPicture = async (id, slideIndex, path) => {\n        let i = path.length - 1\n        while (path[i] !== '/') i--\n        const pictureId = path.substring(i + 1)\n\n        const res = await this.webStorageService.deletePhoto(pictureId)\n\n        if (res.error)\n            return\n\n        this.updateSlider(id, slideIndex)\n\n\n    }\n\n    deletingVideo = async ({ id, owner }) => {\n        const res = await this.webStorageService.deleteVideo(id)\n\n        if (res.error)\n            return\n\n        await this.updateContainer(owner)\n        this.setState({ showModal: false })\n\n\n    }\n\n    updateSlider = async (id, slideIndex) => {\n        const { itemList } = this.state\n        const dataURLs = await this.webStorageService.getPicturesOfSlider(id)\n\n        const indexOfElement = itemList.findIndex((item) => item.props.id === id);\n        const newSlider = <PictureSlider {...itemList[indexOfElement].props} dataURLs={dataURLs} slideIndex={(slideIndex > 0) ? slideIndex - 1 : null} />\n        itemList[indexOfElement] = newSlider\n\n        this.setState({ itemList })\n    }\n\n\n    addItemToColumn = (ReactComponent, props = {}) => {\n        const { itemList, counters } = this.state\n\n        if (!counters[ReactComponent.name])\n            counters[ReactComponent.name] = 0\n\n        const counter = counters[ReactComponent.name]\n\n        const newItem = <ReactComponent key={String(ReactComponent.name) + counter} id={String(ReactComponent.name) + counter} {...props} />\n        counters[ReactComponent.name] += 1\n        itemList.push(newItem)\n       \n        this.setState({\n            itemList,\n            counters\n        })\n    }\n\n    onVideosetElementAdded = async (element) => {\n        let ReactComponentName, props\n        switch (element) {\n            case 'Slider':\n                ReactComponentName = PictureSlider\n                const slider = await this.webStorageService.postSlider(this.props.id)\n                props = { id: slider.id, editable: true, uploadingPicture: this.uploadingPicture, deletingPicture: this.deletingPicture }\n                break\n\n            case 'Description':\n                ReactComponentName = VideosetDescription\n                props = { text: \"\", editable: true, saveDescription: this.saveDescription }\n                break\n\n            case 'Videos':\n                ReactComponentName = VideosContainer\n                const videosContainer = await this.webStorageService.postVideosContainer(this.props.id)\n                const videos = await this.webStorageService.getVideosOfVideosContainer(videosContainer.id)\n                props = { id: videosContainer.id, videos, saveTitle: this.saveVideosContainerTitle, updateContainer:this.updateContainer,uploadingURLVideo:this.uploadingURLVideo, uploadingVideo: this.uploadingVideo, onVideoClick: this.onVideoClick, editable: true }\n                break\n\n            default: return\n        }\n\n        this.addItemToColumn(ReactComponentName, props)\n        const { added, itemList } = this.state\n        added.push(itemList[itemList.length - 1])\n    }\n\n    uploadingVideo = async (id, video) => {\n        \n        const name = prompt(\"Input video name: \", \"Video\")\n        const res = await this.webStorageService.postVideo(id, name, video)\n        if (!res.ok) {\n            return\n        }\n    }\n\n    uploadingURLVideo =  (id,name, url) => {\n        this.webStorageService.postURLVideo(id,name, url).then(()=>{\n            this.updateContainer(id)\n        })\n    }\n\n\n    updateContainer = async (id, extraProps = {}) => {\n        \n        const {itemList} = this.state\n        const videos = await this.webStorageService.getVideosOfVideosContainer(id)\n        \n        const indexOfElement = itemList.findIndex((item) => item.props.id === id);\n        const newProps = {...itemList[indexOfElement].props,videos, ...extraProps}\n        itemList.splice(indexOfElement,1)\n        this.setState({itemList})\n\n        \n        \n        this.addItemToColumn(VideosContainer,newProps)\n        const {itemList:itemList1} = this.state\n        const newItem = itemList1.pop()\n        itemList1.splice(indexOfElement,0,newItem)\n        this.setState({itemList:itemList1})\n        \n    }\n\n    saveVideosContainerTitle = (name, id) => {\n        if (name) this.webStorageService.patchVideosContainer(id, { name })\n        this.updateContainer(id, {name})\n    }\n\n    onVideoClick = async (video) => {\n        let {videoPlayer, showModal} = video\n        const { source, id } = video\n\n        if (source === 'local') {\n            videoPlayer = <VideoPlayer video={video} url={`${this.webStorageService._apiBase}/video/${id}`} />\n            showModal=true\n        }\n        else {\n            const videoURL = new Url(video.file)\n            if(videoURL.hostname === 'www.youtube.com'){\n                console.log(videoURL.hostname)\n                videoPlayer = <VideoPlayer video={video} url={video.file} />\n                showModal=true\n            }\n            else {\n                window.open(video.file);\n                showModal=false\n            }\n        }\n        this.setState({ videoPlayer, showModal })\n        \n    }\n\n    onVideosetItemDeleted = async (id) => {\n        const { itemList, deleted } = this.state\n        const index = itemList.indexOf(itemList.find((item) => item.props.id === id))\n        deleted.push(itemList.splice(index, 1)[0])\n\n        this.setState({ itemList, deleted })\n        \n    }\n\n    saveDescription = (id, text) => {\n        const { itemList, counters } = this.state\n        const index = itemList.indexOf(itemList.find((item) => item.props.id === id))\n        const key = String(VideosetDescription.name) + counters[VideosetDescription.name]++\n        itemList[index] = <VideosetDescription editable key={key} id={key} text={text} saveDescription={this.saveDescription} />\n        this.setState({ itemList, counters })\n    }\n\n    saveChanges = async () => {\n        const { data, itemList, deleted } = this.state\n       \n        const order = []\n        for (let i = 0; i < itemList.length; i++) {\n            const item = itemList[i]\n            const newItem = {}\n            if (item.props.text) {\n                newItem.type = 'VideosetDescription'\n                newItem.value = item.props.text\n            }\n            else if (item.props.uploadingPicture) {\n                newItem.type = 'PictureSlider'\n                newItem.value = item.props.id\n            }\n            else if (item.props.onVideoClick) {\n                newItem.type = 'VideosContainer'\n                newItem.value = item.props.id\n                newItem.name = item.props.name\n            }\n            order.push(newItem)\n        }\n        data.order = order\n        await this.webStorageService.patchVideoset(this.props.id, { order, name:data.name, owner:data.owner })\n\n        \n        if (deleted.length !== 0) {\n            \n            for (let i = 0; i < deleted.length; i++) {\n                if (deleted[i].props.uploadingPicture) {\n                    await this.webStorageService.deleteSlider(deleted[i].props.id)\n                }\n                else if (deleted[i].props.onVideoClick) {\n                    await this.webStorageService.deleteVideosContainer(deleted[i].props.id)\n                }\n            }\n        }\n\n\n        this.setState({ data, deleted: [] })\n    }\n\n    cancelAction = async () => {\n        const { startData, added } = this.state\n        for (let i = 0; i < added.length; i++) {\n            if (added[i].type.name === 'PictureSlider') {\n                await this.webStorageService.deleteSlider(added[i].props.id)\n            }\n        }\n        this.setState({ data: startData, added: [], itemList: [] })\n        this.initialAddingItems()\n    }\n\n    changeTitle = () => {\n        const {data} = this.state\n        const newTitle = prompt(\"Input new title\", data.name)\n        if (newTitle && newTitle !== '') {\n            data.name = newTitle\n            this.setState(data)\n        }\n    }\n\n    changeLogo = async (logo) => {\n        await this.webStorageService.postLogo(this.state.data.id, logo)\n    }\n\n    changeSubcategory = (id) => {\n        const {data} = this.state\n        data.owner = id\n        this.setState({data})\n    }\n    \n    deleteVideoset = async () => {\n        await this.webStorageService.deleteVideoset(this.state.data.id)\n    }\n\n    render() {\n        const { data, columnId, itemList, videoPlayer, showModal } = this.state\n        // console.log(this.state)\n        if (!data)\n            return null\n        const { name } = data\n\n        const deleteVideoButton = (<button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => this.deletingVideo(videoPlayer.props.video)}>Delete video</button>)\n        const videoPlayerModal = (showModal) ? (\n            <Modal className=\"video-modal\" footer={deleteVideoButton} onClose={() => this.setState({ showModal: false })} show={showModal} title={videoPlayer.props.video.name}>\n                {videoPlayer}\n            </Modal>\n        ) : null\n\n        return (\n            <div className=\"videoset\">\n                {videoPlayerModal}\n\n                <h1 className=\" videoset-title\">\n                    {name}\n                </h1>\n\n                <EditorBar changeLogo={this.changeLogo} id={data.id} videoset={data} changeSubcategory={this.changeSubcategory} deleteVideoset={this.deleteVideoset} changeTitle={this.changeTitle} onVideosetElementAdded={this.onVideosetElementAdded} saveChanges={this.saveChanges} cancelAction={this.cancelAction} />\n                <EditorContext onDragEnd={this.onDragEnd}>\n                    <VerticalColumn id={columnId} items={itemList} onItemDeleted={this.onVideosetItemDeleted} />\n                </EditorContext>\n\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react';\nimport WebStorageService from '../../services/web-storage-service';\nimport VideosetDescription from '../videoset-description/videoset-description';\nimport VideosContainer from '../videos-container/videos-container'\nimport PictureSlider from '../picture-slider/picture-slider';\nimport WrapperCard from '../wrapper-card/wrapper-card'\nimport VideoPlayer from '../video-player/video-player';\nimport Modal from '../modal/modal';\nimport Url from 'url-parse'\nimport './videoset-page.css'\nimport { useHistory } from 'react-router-dom';\n\nexport default class VideosetPage extends Component {\n\n    webStorageService = new WebStorageService()\n    state = {\n        data:null,\n        showModal:false,\n        videoPlayer:null,\n        itemList:[],\n        counters:{\n\n        }\n    }\n\n    componentDidMount = async () => {\n        \n        await this.initPage()\n    }\n\n    initPage = async () => {\n        const { id } = this.props\n        const videoset = await this.webStorageService.getVideoset(id)\n\n        this.setState({ data: videoset })\n        this.initialAddingItems()\n    }\n\n    componentDidUpdate = async (prevProps) => {\n        if(prevProps.id !== this.props.id){\n            this.setState({data:null,itemList:[]})\n            await this.initPage()\n        }\n        \n    }\n\n    initialAddingItems = async () => {\n\n        const { data } = this.state\n        const { order } = data\n        // data.order = []\n        // this.setState({data})\n\n        for (let i = 0; i < order.length; i++) {\n            const element = order[i]\n            \n            if (element.type === 'VideosetDescription' && element.value !== null) {\n                await this.addItemToColumn(VideosetDescription, { text: element.value })\n            }\n            else if (element.type === 'PictureSlider' && element.value) {\n                const dataURLs = await this.webStorageService.getPicturesOfSlider(element.value)\n                await this.addItemToColumn(PictureSlider, { id: element.value, dataURLs})\n            }\n\n            else if (element.type === 'VideosContainer' && element.value) {\n                const videos = await this.webStorageService.getVideosOfVideosContainer(element.value)\n                await this.addItemToColumn(VideosContainer, { id: element.value, name: element.name, videos, onVideoClick: this.onVideoClick })\n            }\n        }\n\n    }\n\n    addItemToColumn = async (ReactComponent, props = {}) => {\n        const { itemList, counters } = this.state\n\n        if (!counters[ReactComponent.name])\n            counters[ReactComponent.name] = 0\n\n        const counter = counters[ReactComponent.name]\n\n        const newItem = <ReactComponent key={String(ReactComponent.name) + counter} id={String(ReactComponent.name) + counter} {...props} />\n        counters[ReactComponent.name] += 1\n        itemList.push(newItem)\n       \n        this.setState({\n            itemList,\n            counters\n        })\n\n    }\n\n    onVideoClick = async (video) => {\n        let {videoPlayer, showModal} = video\n        const { source, id } = video\n\n        if (source === 'local') {\n            videoPlayer = <VideoPlayer video={video} url={`${this.webStorageService._apiBase}/video/${id}`} />\n            showModal=true\n        }\n        else {\n            const videoURL = new Url(video.file)\n            if(videoURL.hostname === 'www.youtube.com'){\n                console.log(videoURL.hostname)\n                videoPlayer = <VideoPlayer video={video} url={video.file} />\n                showModal=true\n            }\n            else {\n                window.open(video.file);\n                showModal=false\n            }\n        }\n        this.setState({ videoPlayer, showModal })\n        \n    }\n\n\n\n\n    render() {\n        if(!this.state.data){\n        return <div></div>\n        }\n        const { data,itemList, showModal, videoPlayer } = this.state\n        const {name} = data\n        const pageItems =  itemList.map((item, index)=>\n                <WrapperCard key={item + '' + index}>\n                   {item}\n                </WrapperCard>)\n        const videoPlayerModal = (showModal) ? (\n            <Modal className=\"video-modal\" onClose={() => this.setState({ showModal: false })} show={showModal} title={videoPlayer.props.video.name}>\n                {videoPlayer}\n            </Modal>\n        ) : null\n\n        const EditPageButton = ({id}) => {\n            const history = useHistory()\n            const onClick = () => {\n                // history.goBack()\n                // history.goBack()\n                history.push(`/edit-videoset/${id}`)\n            }\n            return (\n                <div style={{ display: 'flex' }}>\n                    <button onClick={onClick} type=\"button\" className=\"edit-btn btn btn-lg btn-secondary\" data-dismiss=\"modal\" >Edit this page</button>\n                </div>\n            )\n        }\n        \n\n        const userString = localStorage.getItem('user')\n        const user = (userString && userString!=='undefined')?JSON.parse(userString):null;\n        return (\n            <div className=\"videoset\">\n                {videoPlayerModal}\n                {(user && user.status.endsWith('admin')) ? <EditPageButton id={data.id} /> : null}\n                <h1 className=\"videoset-title\">\n                    {name}\n                </h1>\n                {pageItems}\n            </div>)\n    }\n\n\n}\n\n","\nimport React, { Component } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport WebStorageService from '../../services/web-storage-service'\nimport ItemList from '../item-list/item-list'\nimport './category-page.css'\nexport default class CategoryPage extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        selectedCategory: null,\n        selectedSubcategory: null,\n        categories:null,\n        subcategories:null,\n        videosets:null,\n        numberOfVideosets:5,\n        last10Videosets:null,\n        user:null\n    }\n\n    componentDidMount = async () => {\n        \n        await this.updateCategories()\n    }\n\n    onCategorySelected = async (selectedCategory) => {\n        await this.updateSubcategories(selectedCategory)\n        this.webStorageService.getLast10Videosets(selectedCategory.id).then((last10Videosets)=>{\n            this.setState({last10Videosets})\n        })\n        \n    }\n\n    onSubcategorySelected = async (selectedSubcategory) => {\n        await this.updateVideosets(selectedSubcategory)\n    }\n\n    renderVideosets = (videosets) => {\n        const videosetsCards = videosets.map((props,index) => {\n            const key = `VideosetCard-${index}`\n            const logoURL = (props.hasLogo) ? `${this.webStorageService._apiBase}/logo?videosetId=${props.id}` : null\n            return (\n                <VideosetCard key={key} {...props} logoURL={logoURL}/>\n            )\n        })\n        return (\n            <div className=\"videosets-container container\">\n                {videosetsCards}\n            </div>\n        )\n    }\n\n    renderList = (onDeleteButtonClick) => (list, selected,onItemSelected) => {\n        const {user} = this.state\n        const itemViews = list.map((item, index) => {\n            const { name, id } = item\n            return (\n                <li className={`list-group-item d-flex ${index === selected ? 'selected-list-group-item' : ''}`}\n                    key={id}\n                    onClick={({ target }) => !target.className.includes('btn') ? onItemSelected(item, index) : null}>\n                    <div className=\"flex\">\n                        <h5 className=\"list-item-title\">{name}</h5>\n                    </div>\n                    {user && user.status === 'main-admin' ? <button className=\"btn btn-outline-danger list-delete-button\"\n                        onClick={() => onDeleteButtonClick(item)}>Delete</button> : null}\n                </li> \n            )\n          })\n          return (\n            <div>\n              <ul className=\"item-list list-group\">\n                {itemViews}\n              </ul>\n            </div>\n      \n          );\n    }\n\n    addCategory = async () => {\n        const name = prompt('Input name of category', '')\n        await this.webStorageService.postCategory(name)\n        await this.updateCategories()\n    }\n\n    addSubcategory = async () => {\n        const name = prompt('Input name of subcategory', '')\n        \n        await this.webStorageService.postSubcategory(name, this.state.selectedCategory.id)\n        await this.updateSubcategories(this.state.selectedCategory)\n    }\n\n    addVideoset = async () => {\n        const name = prompt('Input name of videoset', '')\n        await this.webStorageService.postVideoset(name, this.state.selectedSubcategory.id)\n        await this.updateVideosets(this.state.selectedSubcategory)\n    }\n\n    \n\n    deleteCategory = async (category) => {\n        this.setState({selectedCategory:null,selectedSubcategory:null})\n        await this.webStorageService.deleteCategory(category.id)\n        await this.updateCategories()\n    }\n    deleteSubcategory = async (subcategory) => {\n        await this.webStorageService.deleteSubcategory(subcategory.id)\n        this.setState({selectedSubcategory:null})\n        await this.updateSubcategories(this.state.selectedCategory)\n    }\n\n\n    updateCategories = async () => {\n        const userString = localStorage.getItem('user')\n        const user = (userString && userString!=='undefined') ? JSON.parse(userString) : null\n        const categories = await this.webStorageService.getAllCategories()\n        this.setState({user, categories})\n    }\n\n    updateSubcategories = async (selectedCategory) => {\n        // const {selectedCategory} = this.state\n\n        if (!selectedCategory)\n            return;\n\n        const subcategories = await this.webStorageService.getSubcategoriesOfCategory(selectedCategory.id)\n        this.setState({ subcategories, selectedCategory, selectedSubcategory: null })\n\n    }\n\n    updateVideosets = async (selectedSubcategory) => {\n        if (!selectedSubcategory)\n            return\n\n        const videosets = await this.webStorageService.getVideosetsOfSubcategory(selectedSubcategory.id)\n        this.setState({selectedSubcategory,videosets, numberOfVideosets:5})\n    }\n\n    showMoreVideosets = () => {\n        const {numberOfVideosets} = this.state\n        this.setState({numberOfVideosets:numberOfVideosets+5})\n    }\n\n    render () {\n        const { user, categories, subcategories, videosets, last10Videosets, selectedCategory, selectedSubcategory, numberOfVideosets } = this.state\n        \n        // const onNullText = <h4 className='select-message'>Select the category</h4>\n\n       \n        const ColorButton = ({className,children, onClick}) => (\n            // <div className=\"add-delete-btn-group btn-group\">\n                <button type=\"button\" className={`btn btn-outline-${className}`} onClick={onClick}>{children}</button>\n            // \n            )\n        const addCategoryButton = (user && user.status === 'main-admin')\n            ?<ColorButton className=\"success\" onClick={() => this.addCategory()}>Add category</ColorButton>:null\n\n        const addSubcategoryButton = (user && user.status === 'main-admin')\n            ?<ColorButton className=\"success\" onClick={() => this.addSubcategory()}>Add subcategory</ColorButton>:null\n\n        // const deleteCategoryButton = (user && user.status === 'main-admin')\n        //     ?<ColorButton className=\"danger\" onClick={() => this.deleteCategory()}>Delete this category</ColorButton>:null\n\n        const addVideosetButton = (user && user.status.endsWith('admin'))\n            ?<ColorButton className=\"success\" onClick={() => this.addVideoset()}>Add videoset</ColorButton>:null\n\n        // const deleteSubcategoryButton = (user && user.status.endsWith('admin'))\n        //     ?<ColorButton className=\"danger\" onClick={() => this.deleteSubcategory()}>Delete this subcategory</ColorButton>:null\n\n        \n        const categoriesList = (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h4 className=\"all-categories-title\">All Categories</h4>\n                    <ItemList onItemSelected={this.onCategorySelected} itemList={categories} renderItems={this.renderList(this.deleteCategory)} />\n                    {(!categories || categories.length === 0) ? <h3 className='no-content-message'>Oops, there's no content</h3> : null}\n                    {addCategoryButton}\n                </div>\n            </div>)\n\n        \n        const renderCategoryTitle = (name) => <h4 className=\"all-categories-title\">Subcategories of category \"{name}\"</h4>\n        const categoryDetails = (!this.state.selectedCategory) ? null : (\n            // <div>\n            //     <ItemDetails renderTitle={renderCategoryTitle} renderSubitems={this.renderSubcategories} onSubitemSelected={this.onSubcategorySelected} onNullText={onNullText} itemId={this.state.selectedCategory} getData={this.webStorageService.getCategory} getSubitems={this.webStorageService.getSubcategoriesOfCategory} />\n            // </div>)\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    {renderCategoryTitle(selectedCategory.name)}\n                    <ItemList onItemSelected={this.onSubcategorySelected} itemList={subcategories} renderItems={this.renderList(this.deleteSubcategory)} />\n                    {(!subcategories || subcategories.length === 0)?<h3 className='no-content-message'>Oops, there's no content</h3>:null}\n                    {/* <div className=\"category-details-buttons btn-group\"> */}\n                    {addSubcategoryButton}\n                    {/* </div> */}\n                </div>\n            </div>\n            )\n\n        const renderSubcategoryTitle = (name) => <h3 className=\"subcategory-title\">Videosets of subcategory \"{name}\"</h3>\n        const renderLast10VideosetsTitle = (name) => <h3 className=\"subcategory-title\">Last 10 videosets of category \"{name}\"</h3>\n        const videosetViews = (selectedSubcategory || selectedCategory) ? (\n            <div className=\"card\">\n                <div className=\"videoset-views card-body\">\n                    {(selectedSubcategory)?renderSubcategoryTitle(selectedSubcategory.name):renderLast10VideosetsTitle(selectedCategory.name)}\n                    { (selectedSubcategory)?(\n                    <div style={{display:'flex'}}>\n                        <div className=\"btn-group add-videoset-button\">\n                            {addVideosetButton}\n                            {/* {deleteSubcategoryButton} */}\n                        </div>\n                    </div>\n                    ):null}\n                    {(selectedSubcategory)?<ItemList showMore={()=>this.showMoreVideosets()} maxNumber={numberOfVideosets} itemList={videosets} renderItems={this.renderVideosets}/>\n                    :<ItemList itemList={last10Videosets} renderItems={this.renderVideosets}/>}\n                    \n                </div>\n            </div>) : null\n        return (\n            <div>\n\n                <div className=\"categories-row\">\n                    {/* <h3 className=\"categories-title\">Categories</h3> */}\n                    <Row  left={categoriesList} right={categoryDetails} />\n                </div>\n                <div className=\"videoset-views\">\n                    {videosetViews}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst Row = ({ left, right }) => {\n    const width = `row-item col-md-${(right) ? 6 : 12}`;\n    return (\n        <div className=\"row mb2\">\n            <div className={width}>\n                {left}\n            </div>\n            <div className=\"col-md-6\">\n                {right}\n            </div>\n        </div>\n    )\n}\n\nconst VideosetCard = ({ id, name, order, logoURL, subcategoryName }) => {\n    const descriptionItem = (order) ? order.find((item) => item.type === 'VideosetDescription') : null\n    let [title, description] = descriptionItem ? descriptionItem.value.split(\"&&&\"): ['Description','']\n    description = description.split('\\n')[0]\n    \n    if(description && description.length >= 300) \n        description = description.slice(0, 300) + \" ...\"\n    const pathToVideoset = `/videosets/${id}`\n    const logo = (logoURL)?<img className='logo' src={logoURL} alt=\"\"/>:null\n    const history = useHistory()\n    return (\n        <div key={id} className=\"videoset-card card border-success\"\n            onClick={() => {\n                history.push(pathToVideoset)\n            }} >\n            <div className=\"card-header\">\n                <div style={{display:'flex'}} className=\"row\">\n                    \n                    <h3 className=\"videoset-preview-title\">{name}</h3>\n                    \n                    {(subcategoryName)?<h4 className=\"videoset-preview-subcategory-title\">Subcategory: {subcategoryName}</h4>:null}\n                </div>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    {logo}\n                    \n                    <div className=\"videoset-card-description col-9\">\n                        <h4 className=\"card-title\">{title}:</h4>\n                        <p className=\"card-text\">{description ? description : 'No description'}</p>\n                    </div>\n                </div>\n            </div>\n        </div>)\n}","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport './login-page.css'\nimport WebStorageService from '../../services/web-storage-service';\nexport default class LoginPage extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        redirect:false,\n        registerEmail: '',\n        registerPassword: '',\n        registerName:'',\n        registerNickname:'',\n        signInEmail: '',\n        signInPassword: '',\n        onSignInErrorMessage:null,\n        onRegisterErrorMessage:null\n    }\n\n    onSignInButtonClick = async () => {\n        const { signInEmail, signInPassword } = this.state\n        const data = await this.webStorageService.signInByCredentials(signInEmail, signInPassword)\n        \n        if (!data.user) \n            return this.setState({onSignInErrorMessage:\"Incorrect e-mail or password!\"})\n        \n        this.setState({onRegisterErrorMessage:null})\n        const { user, token } = data\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n\n        this.setState({redirect:true})\n        this.props.onUserUpdate()\n        \n    }\n\n    onRegisterButtonClick = async () => {\n        const { registerName, registerNickname, registerEmail, registerPassword } = this.state\n\n        \n        const data = await this.webStorageService.registerByCredentials(registerName, registerNickname, registerEmail, registerPassword)\n        \n        if (data.error) {\n            return this.setState({onRegisterErrorMessage:data.error})\n        }\n        this.setState({onRegisterErrorMessage:null})\n        const { user, token } = data\n        \n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n\n        this.setState({redirect:true})\n        this.props.onUserUpdate()\n    }\n\n    renderRedirect = () => {\n        if(this.state.redirect)\n            return <Redirect to=\"/\" />\n    }\n\n    render() {\n\n        const {onRegisterErrorMessage, onSignInErrorMessage} = this.state\n        const registerCard = (<div className=\"login-card card\">\n            <div className=\"login\">\n            {this.renderRedirect()}\n                <h3 className=\"login-title\">Or if you don't</h3>\n                <h1 className=\"login-title-second\">Register</h1>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" aria-label=\"Name\" onChange={({target}) => this.setState({ registerName: target.value })} />\n                </div>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Nickname\" aria-label=\"Nickname\" onChange={({target}) => this.setState({ registerNickname: target.value })} />\n                </div>\n\n                <div className=\"input-group input-group-lg mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"E-mail\" aria-label=\"E-mail\" onChange={({target}) => this.setState({ registerEmail: target.value })} />\n                </div>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" onChange={({target}) => this.setState({ registerPassword: target.value })} />\n                </div>\n                <h4 className=\"error-message text-danger\">{onRegisterErrorMessage}</h4>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-secondary login-button\" type=\"submit\" onClick={this.onRegisterButtonClick}>Register</button>\n                </div>\n            </div>\n        </div>)\n\n        const signInCard = (\n            <div className=\"login-card card\">\n                <div className=\"login\">\n\n                    <h3 className=\"login-title\">If you have an account</h3>\n                    <h1 className=\"login-title-second\">Sign in</h1>\n                    <div>\n                        <div className=\"input-group input-group-lg mb-3\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"E-mail\" aria-label=\"Username\" onChange={({target}) => this.setState({ signInEmail: target.value })} />\n\n                        </div>\n                        <div className=\"input-group input-group-lg mb-3\">\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" onChange={({target}) => this.setState({ signInPassword: target.value })} />\n                        </div>\n                        <h4 className=\"error-message text-danger\">{onSignInErrorMessage}</h4>\n                        <div className=\"form-group\">\n                            <button className=\"btn btn-secondary login-button\" type=\"submit\" onClick={this.onSignInButtonClick}>Sign in</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n\n        return (\n            <div className=\"login-page\">\n                <Row left={signInCard} right={registerCard} />\n            </div>\n        )\n    }\n}\n\nconst Row = ({ left, right }) => {\n    const width = `row-item col-md-${(right) ? 6 : 12}`;\n    return (\n        <div className=\"row mb2\">\n            <div className={width}>\n                {left}\n            </div>\n\n            <div className=\"col-md-6\">\n                {right}\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport WebStorageService from '../../services/web-storage-service';\nimport './edit-users-page.css'\nimport ItemList from '../item-list/item-list';\nexport default class EditUsersPage extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        admin:null,\n        allUsers:null,\n        numberOfUsers:20\n    }\n\n    componentDidMount = async () =>{\n        this.updateUsers()\n        // await this.updateUsers()\n    }\n\n    updateUsers = async () => {\n        const userString = localStorage.getItem('user')\n        if(!userString || userString==='undefined')\n        return\n        \n\n        const user = JSON.parse(userString)\n        if(user.status !== 'main-admin')\n        return\n        \n        const allUsers = await this.webStorageService.getAllUsers()\n        const updatedUsers = allUsers.filter((item) => item.id !== user.id).sort((user1, user2) => user2.status.length - user1.status.length)\n        \n        this.setState({admin:user, allUsers:updatedUsers})\n    }\n\n    changeUserStatus = async (id, changes) => {\n        await this.webStorageService.patchUserByMainAdmin(id, changes)\n        \n        await this.updateUsers()\n    }\n\n    renderUserViews = (users) => {\n        const usersCards = users.map((user,index) => {\n            const key = `User-Card-${index}`\n            const extraClassName=(user.status === 'main-admin')?'border-warning':null\n            return <UserCard extraClassName={extraClassName} key={key} user={user} changeStatus={this.changeUserStatus} />\n        })\n        return (\n            <div className=\"videosets-container container\">\n                {usersCards}\n            </div>\n        ) \n    }\n\n    render(){\n        const {allUsers, numberOfUsers} = this.state\n        return (\n            <div>\n                <h1 className=\"all-users-title\">All registered users</h1>\n                <ItemList showMore={() => this.setState({ numberOfUsers: numberOfUsers + 3 })} maxNumber={numberOfUsers} itemList={allUsers} renderItems={this.renderUserViews} />\n            </div>\n        )\n    }\n}\n\n\n\nconst UserCard = ({ user, changeStatus, extraClassName }) => {\n    const { id, name, nickname, status, ban, email } = user\n    const makeAdmin = () => changeStatus(id, { status: 'admin' })\n    const banUser = () => changeStatus(id, { ban: true })\n    const unbanUser = () => changeStatus(id, { ban: false })\n    const makeMainAdmin = () => changeStatus(id, { status: 'main-admin' })\n    const makeUser = () => changeStatus(id, {status: 'user'})\n\n    const colorButton = (title, onClick, extraClassName) => <button className={`btn btn-${extraClassName?extraClassName:null}`} onClick={onClick}>{title}</button>\n    \n    const makeAdminButton = (status !== 'admin' && !ban) ? colorButton('Make admin',makeAdmin,'primary') : null\n    const banUserButton = (!ban) ? colorButton('Ban user',banUser, 'danger'):null\n    const unbanUserButton = (ban) ? colorButton('Unban user',unbanUser, 'success'): null\n    const makeMainAdminButton = (status==='admin' && !ban) ? colorButton('Make main-admin',makeMainAdmin, 'info'): null\n    const makeUserButton = (status!=='user' && !ban) ? colorButton('Make user', makeUser, 'warning'):null\n    return (\n        <div className={`card border-primary ${extraClassName}`}>\n            <div className=\"card-body row d-flex\" >\n                <h4 className=\"user-card-title\">{name} @{nickname} {email}</h4>\n                <div className=\"user-view-btn-group btn-group\">\n                    {makeMainAdminButton}\n                    {makeAdminButton}\n                    {makeUserButton}\n                    {banUserButton}\n                    {unbanUserButton}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from '../header/header'\nimport VideosetEditorPage from '../videoset-editor-page/videoset-editor-page'\nimport VideosetPage from '../videoset-page/videoset-page.jsx'\nimport CategoryPage from '../category-page/category-page'\nimport LoginPage from '../login-page/login-page';\nimport EditUsersPage from '../edit-users-page/edit-users-page';\n\nclass App extends Component {\n\n    state = {\n        user: null\n    }\n\n    componentDidMount = () => {\n        this.updateUser()\n    }\n\n    updateUser = () => {\n        try {\n            const user = JSON.parse(localStorage.getItem('user'))\n            this.setState({ user })\n        }\n        catch (error) {\n            this.setState({ user: null })\n        }\n    }\n\n\n    render() {\n        const { user } = this.state\n        return (\n            <div>\n                <Router>\n                    <Header user={user} onUserUpdate={()=>this.updateUser()}/>\n                    <Route path=\"/\" component={CategoryPage} exact={true} />\n                    <Route path=\"/users\" exact={true} component={EditUsersPage}/>\n                    <Route path=\"/login\"  exact={true} \n                    render={()=>{\n                        return <LoginPage onUserUpdate={()=>this.updateUser()}/>\n                    }}/>\n                    <Route path=\"/videosets/:id\"\n                        render={({ match }) => {\n\n                            return <VideosetPage id={match.params.id} /> //TODO\n                        }} />\n                    <Route path=\"/edit-videoset/:id\"\n                        render={({ match }) => {\n\n                            return <VideosetEditorPage id={match.params.id} /> //TODO\n                        }} />\n\n                </Router>\n            </div>\n        )\n    }\n\n\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport App from './components/app/app'\n\n// import WebStorageService from './services/web-storage-service'\n\n// const webStorageService = new WebStorageService()\n\n// webStorageService.getSubcategoriesOfCaterogy('5e6e267f778aa7368426d5b8')\n// .then((categories)=>console.log(categories))\n// .catch((error)=>console.log(error))\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n\n"],"sourceRoot":""}