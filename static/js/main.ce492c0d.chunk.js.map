{"version":3,"sources":["components/videos-container/pictures/videocam-dark.jpg","services/web-storage-service.js","components/header/header.js","components/spinner/spinner.js","components/file-drop-wrapper/file-drop-wrapper.jsx","components/picture-slider/picture-slider.js","components/drag-n-drop/editor-context.jsx","components/drag-n-drop/droppable-wrapper.jsx","components/drag-n-drop/draggable-item-wrapper.jsx","components/wrapper-card/wrapper-card.jsx","components/draggable-box/draggable-box.jsx","components/drag-n-drop/draggable-list-items.jsx","components/vertical-column/vertical-column.jsx","components/videoset-description/videoset-description.jsx","components/editor-bar/editor-bar.jsx","components/modal/modal.jsx","components/videos-container/videos-container.jsx","components/video-player/video-player.jsx","components/videoset-editor-page/videoset-editor-page.js","components/videoset-page/videoset-page.jsx","components/item-list/item-list.js","components/category-page/category-page.js","components/login-page/login-page.jsx","components/edit-users-page/edit-users-page.jsx","components/app/app.js","index.js"],"names":["module","exports","WebStorageService","_apiBase","getResourse","url","a","fetch","res","ok","Error","json","getLast10Videosets","id","then","videosets","map","_transformItem","getAllSubcategories","subcategories","getAllUsers","token","localStorage","getItem","method","mode","headers","error","users","patchUserByMainAdmin","body","JSON","stringify","postCategory","name","data","isPublished","postSubcategory","categoryId","type","postVideoset","subcategoryId","postFormData","file","temp","itemId","_id","formData","FormData","append","newUrl","slice","indexOf","postPicture","source","postLogo","postVideo","postURLVideo","postSlider","videosetId","slider","postVideosContainer","videosContainer","deleteItem","deleteSlider","deleteVideosContainer","deleteVideoset","deleteCategory","deleteSubcategory","deleteLogo","patchVideoset","props","deletePhoto","deleteVideo","getPicturesOfSlider","pictures","picture","signInByCredentials","email","password","statusText","registerByCredentials","nickname","result","checkDataForErrors","getUserProfile","errors","keys","Object","index","length","key","kind","getAllCategories","categories","getSubcategoriesOfCategory","getSubcategory","subcategory","getCategory","category","_addSubcategoriesToCategory","getVideosetsOfSubcategory","getVideoset","videoset","getVideosOfVideosContainer","videos","item","subItems","Header","webStorageService","onSignOutButtonClick","setItem","onUserUpdate","componentDidMount","user","profile","updateLocalStorage","this","ViewAllUsersButton","history","useHistory","onClick","push","className","userCard","status","to","Component","Spinner","FileDropWrapper","editable","children","onFilesAdded","extraClassName","useState","highlight","setHighlight","onDragEnter","e","preventDefault","stopPropagation","onDragOver","onDragLeave","onDrop","dataTransfer","PictureSlider","state","slides","slideIndex","initSlides","dataURLs","path","document","createElement","src","setState","changeSlideIndex","number","newSlideIndex","onPrevButtonClick","onNextButtonClick","onDotClick","onPictureAdded","files","uploadingPicture","i","onPictureDeleted","slide","deletingPicture","componentDidUpdate","prevProps","addPictureButton","htmlFor","multiple","onChange","target","currentSlide","dots","element","isActive","addAndDeleteButtonGroup","SlideView","alt","DotView","EditorContext","onDragEnd","DroppableWrapper","droppableId","innerRef","droppableProps","droppablePlaceholder","ref","DraggableItemWrapper","draggableId","draggableProps","dragHandleProps","WrapperCard","header","DraggableBox","content","value","itemPosition","onItemDeleted","closeButton","data-dismiss","aria-label","aria-hidden","DraggableListItems","items","position","toBox","VerticalColumn","String","VideosetDescription","text","editableText","editStatus","getText","onSaveClick","saveDescription","onChangeClick","newStatus","title","textField","rows","changeButton","linesOfDescription","split","description","left","right","Row","EditorBar","isDropdownMenuOpened","videosetItems","Videos","isDropdownSubcategoryMenuOpened","onDropdownMenuClick","onDropdownItemClick","onVideosetElementAdded","onDropdownSubcategoryMenuClick","onSubcategoryItemClick","changeSubcategory","onSaveChangesButtonClick","saveChanges","onCancelButtonClick","cancelAction","onChangeTitleButtonClick","changeTitle","onDeleteVideosetClickButton","onChangeLogoButtonClick","changeLogo","hasLogo","onDeleteLogoButtonClick","dropdownMenuStyle","dropdownSubcategoryMenuStyle","SaveChangesButton","onThisClick","DeleteVideosetButton","dropdownElements","values","subcategoriesViews","owner","deleteVideosetButton","data-toggle","role","aria-haspopup","aria-expanded","x-placement","Modal","onClose","show","footer","modalClassName","tabIndex","aria-labelledby","VideosContainer","showModal","inputFormURL","onVideoViewClick","currentVideo","find","video","onVideoClick","uploadingVideos","uploadingVideo","updateContainer","uploadingURLVideo","Url","hostname","queryString","query","queryParams","URLSearchParams","get","newURL","prompt","showVideoUploadingModalButton","addVideosButton","modal","style","textAlign","display","videosViews","videoLogo","VideoPlayer","width","height","frameBorder","allowFullScreen","VideosetEditorPage","startData","columnId","itemList","counters","deleted","added","videoPlayer","showVideoUploadingModal","destination","movedPart","splice","initialAddingItems","order","addItemToColumn","updateSlider","pictureId","substring","deletingVideo","indexOfElement","findIndex","newSlider","ReactComponent","counter","newItem","ReactComponentName","newProps","itemList1","pop","videoURL","console","log","window","open","onVideosetItemDeleted","newTitle","logo","videosetData","subcategoryData","deleteVideoButton","videoPlayerModal","VideosetPage","pageItems","EditPageButton","userString","parse","endsWith","ItemList","maxNumber","updateList","onItemSelected","renderItems","numberOfElements","currentItemList","itemViews","showMore","CategoryPage","selectedCategory","selectedSubcategory","numberOfVideosets","last10Videosets","updateCategories","onCategorySelected","updateSubcategories","onSubcategorySelected","updateVideosets","renderVideosets","videosetsCards","logoURL","addCategory","addSubcategory","addVideoset","showMoreVideosets","ColorButton","addCategoryButton","addSubcategoryButton","deleteCategoryButton","addVideosetButton","deleteSubcategoryButton","categoriesList","categoryDetails","videosetViews","renderSubcategoryTitle","renderLast10VideosetsTitle","VideosetCard","subcategoryName","descriptionItem","pathToVideoset","LoginPage","redirect","registerEmail","registerPassword","registerName","registerNickname","signInEmail","signInPassword","onSignInErrorMessage","onRegisterErrorMessage","onSignInButtonClick","onRegisterButtonClick","renderRedirect","registerCard","placeholder","signInCard","EditUsersPage","admin","allUsers","numberOfUsers","updateUsers","updatedUsers","filter","sort","user1","user2","changeUserStatus","changes","renderUserViews","usersCards","changeStatus","UserCard","ban","colorButton","makeAdminButton","banUserButton","unbanUserButton","makeMainAdminButton","makeUserButton","App","updateUser","component","exact","render","match","params","ReactDOM","getElementById"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,2C,gjBCCtBC,E,iDAEdC,SAAW,kD,KACdC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACQC,MAAM,GAAD,OAAI,EAAKJ,UAAT,OAAoBE,IADjC,WACJG,EADI,QAEDC,GAFC,sBAGA,IAAIC,MAAJ,0BAA6BL,IAH7B,uBAKGG,EAAIG,OALP,mF,2DAQdC,mB,uCAAqB,WAAOC,GAAP,SAAAP,EAAA,+EACV,EAAKF,YAAL,wCAAkDS,IAAMC,MAAK,SAACC,GAAD,OAAaA,EAAUC,IAAI,EAAKC,oBADnF,2C,2DAGrBC,oB,sBAAsB,4BAAAZ,EAAA,sEACU,EAAKF,YAAY,qBAD3B,cACZe,EADY,yBAEXA,EAAcH,IAAI,EAAKC,iBAFZ,2C,KAMtBG,Y,sBAAc,gCAAAd,EAAA,6DACJe,EAAQC,aAAaC,QAAQ,SADzB,SAEQhB,MAAM,GAAD,OAAI,EAAKJ,SAAT,aAA8B,CACjDqB,OAAQ,MACRC,KAAK,OACLC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,MAPxB,WAEJb,EAFI,QAaFC,GAbE,yCAcC,CAACkB,OAAM,IAdR,uBAiBUnB,EAAIG,OAjBd,cAiBJiB,EAjBI,yBAkBHA,EAAMZ,IAAI,EAAKC,iBAlBZ,4C,KAqBdY,qB,uCAAuB,WAAOhB,EAAGiB,GAAV,iBAAAxB,EAAA,6DACbe,EAAQC,aAAaC,QAAQ,SADhB,SAEDhB,MAAM,GAAD,OAAI,EAAKJ,SAAT,qBAA8BU,GAAM,CACvDW,OAAQ,QACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,IAG9BS,KAAMC,KAAKC,UAAUF,KAVN,WAEbtB,EAFa,QAaXC,GAbW,yCAcZ,CAACkB,OAAM,IAdK,uBAgBNnB,EAAIG,OAhBE,mF,6DAmBvBsB,a,uCAAe,WAAOC,GAAP,mBAAA5B,EAAA,6DACL6B,EAAO,CAACD,OAAME,aAAY,GAC1Bf,EAAQC,aAAaC,QAAQ,SAFxB,SAGOhB,MAAM,GAAD,OAAI,EAAKJ,SAAT,eAAgC,CACnDqB,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,IAG9BS,KAAMC,KAAKC,UAAUG,KAXd,WAGL3B,EAHK,QAaFC,GAbE,yCAeA,CAAEkB,OAAO,IAfT,uBAkBEnB,EAAIG,OAlBN,oF,2DAqBf0B,gB,uCAAkB,WAAOH,EAAMI,GAAb,iCAAAhC,EAAA,6DAAyBiC,EAAzB,+BAAgC,OACxCJ,EAAO,CAACD,OAAMK,QACdlB,EAAQC,aAAaC,QAAQ,SAFrB,SAGIhB,MAAM,GAAD,OAAI,EAAKJ,SAAT,qCAA8CmC,GAAc,CAC/Ed,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,IAG9BS,KAAMC,KAAKC,UAAUG,KAXX,WAGR3B,EAHQ,QAaLC,GAbK,yCAeH,CAAEkB,OAAO,IAfN,wBAkBDnB,EAAIG,OAlBH,qF,6DAqBlB6B,a,uCAAe,WAAON,EAAKO,GAAZ,iBAAAnC,EAAA,6DACL6B,EAAO,CAACD,QACRb,EAAQC,aAAaC,QAAQ,SAFxB,SAGOhB,MAAM,GAAD,OAAI,EAAKJ,SAAT,mCAA4CsC,GAAiB,CAChFjB,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,IAG9BS,KAAMC,KAAKC,UAAUG,KAXd,iBAaF1B,GAbE,yCAeA,CAAEkB,OAAO,IAfT,2C,6DAmBfe,a,uCAAe,WAAMrC,EAAIQ,EAAG8B,EAAKJ,EAAKJ,GAAvB,yBAAA7B,EAAA,6DACLe,EAAQC,aAAaC,QAAQ,SADxB,SAGOhB,MAAM,GAAD,OAAI,EAAKJ,UAAT,OAAoBE,GAApB,OAA0BQ,GAAM,CACnDW,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,IAG9BS,KAAMC,KAAKC,UAAUG,KAXd,WAGL3B,EAHK,QAcFC,GAdE,yCAeA,CAAEkB,OAAO,IAfT,uBAiBQnB,EAAIG,OAjBZ,cAiBLiC,EAjBK,OAkBLC,EAASD,EAAKE,KACdC,EAAW,IAAIC,UACZC,OAAOV,EAAMI,GAEhBO,EAAS7C,EAAI8C,MAAM,EAAE9C,EAAI+C,QAAQ,MAtB5B,UAuBa7C,MAAM,GAAD,OAAI,EAAKJ,UAAT,OAAoB+C,EAApB,mBAAqCL,GAAU,CACxErB,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,cAAgB,UAAhB,OAA0BL,IAG9BS,KAAMiB,IA9BC,kBAiCItC,GAjCJ,0CAkCA,CAAEkB,OAAO,IAlCT,iCAoCJ,CAAElB,IAAI,IApCF,4C,mEAuCf4C,Y,uCAAc,WAAOxC,EAAI8B,GAAX,SAAArC,EAAA,sEACG,EAAKoC,aAAa,4BAA6B7B,EAAI8B,EAAM,QAAS,CAAEW,OAAQ,UAD/E,mF,6DAIdC,S,uCAAW,WAAO1C,EAAI8B,GAAX,SAAArC,EAAA,sEACM,EAAKoC,aAAa,oBAAqB7B,EAAI8B,EAAM,QAAS,CAAEW,OAAQ,UAD1E,mF,6DAIXE,U,uCAAY,WAAO3C,EAAIqB,EAAMS,GAAjB,SAAArC,EAAA,sEACK,EAAKoC,aAAa,4BAA4B7B,EAAG8B,EAAK,QAAQ,CAACW,OAAO,QAASpB,SADpF,mF,+DAIZuB,a,uCAAe,WAAO5C,EAAIqB,EAAM7B,GAAjB,mBAAAC,EAAA,6DACL6B,EAAO,CAAEmB,OAAQ,WAAYpB,OAAMS,KAAMtC,GACzCgB,EAAQC,aAAaC,QAAQ,SAFxB,SAGOhB,MAAM,GAAD,OAAI,EAAKJ,SAAT,oCAA6CU,GAAM,CACtEW,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,IAG9BS,KAAMC,KAAKC,UAAUG,KAXd,WAGL3B,EAHK,QAcHC,GAdG,yCAgBJ,CAACkB,OAAM,IAhBH,uBAkBEnB,EAAIG,OAlBN,oF,+DAwBf+C,W,uCAAa,WAAOC,GAAP,mBAAArD,EAAA,6DACHe,EAAQC,aAAaC,QAAQ,SAD1B,SAEShB,MAAM,GAAD,OAAI,EAAKJ,SAAT,sCAA+CwD,GAAc,CAChFnC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,MAPzB,WAEHb,EAFG,QAaDC,GAbC,yCAeE,CAACkB,OAAM,IAfT,uBAmBYnB,EAAIG,OAnBhB,cAmBHiD,EAnBG,yBAoBF,EAAK3C,eAAe2C,IApBlB,4C,2DAuBbC,oB,uCAAsB,WAAOF,GAAP,mBAAArD,EAAA,6DACZe,EAAQC,aAAaC,QAAQ,SADjB,SAEAhB,MAAM,GAAD,OAAI,EAAKJ,SAAT,wCAAiDwD,GAAc,CAClFnC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,MAPhB,WAEZb,EAFY,QAaVC,GAbU,yCAeP,CAACkB,OAAM,IAfA,uBAmBYnB,EAAIG,OAnBhB,cAmBZmD,EAnBY,yBAoBX,EAAK7C,eAAe6C,IApBT,4C,2DAwBtBC,W,uCAAa,WAAO1D,EAAKQ,GAAZ,iBAAAP,EAAA,6DACHe,EAAQC,aAAaC,QAAQ,SAD1B,SAEShB,MAAM,GAAD,OAAI,EAAKJ,UAAT,OAAoBE,EAApB,eAA8BQ,GAAM,CACvDW,OAAQ,SACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,MAPzB,WAEHb,EAFG,QAaDC,GAbC,yCAcF,CAACkB,OAAM,IAdL,uBAgBInB,EAAIG,OAhBR,mF,6DAmBbqD,a,uCAAe,WAAOnD,GAAP,SAAAP,EAAA,sEACE,EAAKyD,WAAW,kBAAkBlD,GADpC,mF,2DAIfoD,sB,uCAAwB,WAAOpD,GAAP,SAAAP,EAAA,sEACP,EAAKyD,WAAW,oBAAoBlD,GAD7B,mF,2DAIxBqD,e,uCAAiB,WAAOrD,GAAP,SAAAP,EAAA,sEACA,EAAKyD,WAAW,YAAYlD,GAD5B,mF,2DAIjBsD,e,uCAAiB,WAAOtD,GAAP,SAAAP,EAAA,sEACA,EAAKyD,WAAW,cAAelD,GAD/B,mF,2DAIjBuD,kB,uCAAoB,WAAOvD,GAAP,SAAAP,EAAA,sEACH,EAAKyD,WAAW,iBAAkBlD,GAD/B,mF,2DAIpBwD,W,uCAAa,WAAOxD,GAAP,iBAAAP,EAAA,6DACHe,EAAQC,aAAaC,QAAQ,SAD1B,SAEShB,MAAM,GAAD,OAAI,EAAKJ,SAAT,4BAAqCU,GAAM,CAC9DW,OAAQ,SACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,MAPzB,WAEHb,EAFG,QAaDC,GAbC,yCAcF,CAACkB,OAAM,IAdL,uBAgBInB,EAAIG,OAhBR,mF,2DAmBb2D,c,uCAAgB,WAAOzD,EAAI0D,GAAX,iBAAAjE,EAAA,6DACNe,EAAQC,aAAaC,QAAQ,SADvB,SAEMhB,MAAM,GAAD,OAAI,EAAKJ,SAAT,iCAA0CU,GAAM,CACnEW,OAAQ,QACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA0BL,IAG9BS,KAAMC,KAAKC,UAAUuC,KAVb,WAEN/D,EAFM,QAcJC,GAdI,yCAeL,CAACkB,OAAM,IAfF,uBAiBCnB,EAAIG,OAjBL,mF,6DAoBhB6D,Y,uCAAc,WAAO3D,GAAP,SAAAP,EAAA,sEACG,EAAKyD,WAAW,WAAWlD,GAD9B,mF,2DAId4D,Y,uCAAc,WAAO5D,GAAP,SAAAP,EAAA,sEACG,EAAKyD,WAAW,SAASlD,GAD5B,mF,2DAKd6D,oB,uCAAsB,WAAO7D,GAAP,eAAAP,EAAA,sEACK,EAAKF,YAAL,oCAA8CS,IADnD,cACZ8D,EADY,yBAEXA,EAAS3D,KAAI,SAAA4D,GAAO,gBAAO,EAAKzE,SAAZ,oBAAgCyE,EAAQ9B,SAFjD,2C,2DAKtB+B,oB,uCAAsB,WAAOC,EAAOC,GAAd,iBAAAzE,EAAA,6DACZ6B,EAAO,CAAE2C,QAAOC,YACV,eAFM,SAGAxE,MAAM,GAAD,OAAI,EAAKJ,UAAT,OADX,gBACsC,CAC9CqB,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,oBAGpBI,KAAMC,KAAKC,UAAUG,KAVP,WAGZ3B,EAHY,QAaTC,GAbS,yCAcP,CAAEA,IAAI,EAAOkB,MAAOnB,EAAIwE,aAdjB,uBAgBLxE,EAAIG,OAhBC,oF,6DAoBtBsE,sB,uCAAwB,WAAO/C,EAAMgD,EAAUJ,EAAOC,GAA9B,mBAAAzE,EAAA,6DACd6B,EAAO,CAAED,OAAMgD,WAAUJ,QAAOC,YAC1B,SAFQ,SAGFxE,MAAM,GAAD,OAAI,EAAKJ,UAAT,OADX,UACsC,CAC9CqB,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,oBAGpBI,KAAMC,KAAKC,UAAUG,KAVL,cAGd3B,EAHc,gBAaCA,EAAIG,OAbL,UAadwE,EAbc,OAcf3E,EAAIC,GAdW,0CAeT,EAAK2E,mBAAmBD,IAff,iCAiBbA,GAjBa,4C,iEAoBxBE,e,uCAAiB,WAAOhE,GAAP,eAAAf,EAAA,4DACD,YADC,SAEKC,MAAM,GAAD,OAAI,EAAKJ,UAAT,OADX,aACsC,CAC9CqB,OAAQ,MACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BL,MAPtB,WAEPb,EAFO,QAWJC,GAXI,yCAYF,CAAEkB,OAAO,IAZP,uBAcAnB,EAAIG,OAdJ,mF,2DAkBjByE,mBAAqB,SAACjD,GAElB,GAAkB,oBAAdA,EAAKD,KAGL,IAHkC,IAC1BoD,EAAWnD,EAAXmD,OACFC,EAAOC,OAAOD,KAAKD,GAChBG,EAAQ,EAAGA,EAAQF,EAAKG,OAAQD,IAAS,CAC9C,IAAME,EAAMJ,EAAKE,GACjB,GAAyB,aAArBH,EAAOK,GAAKC,KACZ,MAAO,CAAEjE,MAAO,gCAEpB,GAAyB,iBAArB2D,EAAOK,GAAKC,KACZ,MAAO,CAAEjE,MAAM,WAAD,OAAagE,EAAb,MAElB,GAAyB,cAArBL,EAAOK,GAAKC,MAAgC,aAARD,EACpC,MAAO,CAAEhE,MAAO,uDAKvB,GAAkB,eAAdQ,EAAKD,KACV,MAAO,CAAEP,MAAO,6C,KAQxBkE,iB,sBAAmB,4BAAAvF,EAAA,sEACU,EAAKF,YAAY,eAD3B,cACT0F,EADS,yBAERA,EAAW9E,IAAI,EAAKC,iBAFZ,2C,KAKnB8E,2B,uCAA6B,WAAOzD,GAAP,eAAAhC,EAAA,sEACG,EAAKF,YAAL,oCAA8CkC,IADjD,cACnBnB,EADmB,yBAElBA,EAAcH,IAAI,EAAKC,iBAFL,2C,2DAK7B+E,e,uCAAiB,WAAOnF,GAAP,eAAAP,EAAA,sEACa,EAAKF,YAAL,yBAAmCS,IADhD,cACPoF,EADO,yBAEN,EAAKhF,eAAegF,IAFd,2C,2DAKjBC,Y,uCAAc,WAAOrF,GAAP,eAAAP,EAAA,sEACa,EAAKF,YAAL,sBAAgCS,IAD7C,cACJsF,EADI,yBAEH,EAAKC,4BAA4B,EAAKnF,eAAekF,KAFlD,2C,2DAKdE,0B,uCAA4B,WAAO5D,GAAP,eAAAnC,EAAA,sEACA,EAAKF,YAAL,mCAA6CqC,IAD7C,cAClB1B,EADkB,yBAEjBA,EAAUC,IAAI,EAAKC,iBAFF,2C,2DAK5BqF,Y,uCAAc,WAAOzF,GAAP,eAAAP,EAAA,sEACa,EAAKF,YAAL,oBAA8BS,IAD3C,cACJ0F,EADI,yBAEH,EAAKtF,eAAesF,IAFjB,2C,2DAMdC,2B,uCAA6B,WAAO3F,GAAP,eAAAP,EAAA,sEACJ,EAAKF,YAAL,oCAA8CS,IAD1C,cACnB4F,EADmB,yBAElBA,EAAOzF,IAAI,EAAKC,iBAFE,2C,2DAK7BA,eAAiB,SAACyF,GACd,OAAO,eACAA,EADP,CAEI7F,GAAI6F,EAAK5D,O,KAKjBsD,4B,uCAA8B,WAAOD,GAAP,eAAA7F,EAAA,sEACE,EAAKF,YAAL,oCAA8C+F,EAAStF,KADzD,cACpBM,EADoB,wCAGnBgF,EAHmB,CAItBQ,SAAUxF,KAJY,2C,uDCvYnByF,E,4MArEXC,kBAAoB,IAAI3G,E,EACxB4G,qBAAuB,WACnBxF,aAAayF,QAAQ,OAAQ,IAC7BzF,aAAayF,QAAQ,QAAS,IAC9B,EAAKxC,MAAMyC,gB,EAGfC,kB,sBAAoB,gCAAA3G,EAAA,yDACVe,EAAQC,aAAaC,QAAQ,SACnC2F,EAAO5F,aAAaC,QAAQ,QAEvBF,GAAU6F,EAJC,iEAOM,EAAKL,kBAAkBxB,eAAehE,GAP5C,YAOV8F,EAPU,QAQJxF,MARI,yCASL,EAAKyF,sBATA,OAWhB,EAAKA,mBAAmBrF,KAAKC,UAAUmF,GAAS9F,GAXhC,2C,EAepB+F,mBAAqB,SAACF,EAAM7F,GACxBC,aAAayF,QAAQ,OAAQG,GAC7B5F,aAAayF,QAAQ,QAAS1F,GAC9B,EAAKkD,MAAMyC,gB,uDAGN,IAEGE,EAASG,KAAK9C,MAAd2C,KAGFI,EAAqB,WACvB,IAAMC,EAAUC,cAIhB,OAAQ,4BAAQC,QAHA,WACZF,EAAQG,KAAK,WAEiBC,UAAU,kBAAkBpF,KAAK,UAA3D,mBAGNqF,EAAYV,EACb,yBAAKS,UAAU,kBACZ,wBAAIA,UAAU,iBAAd,iBAA6CT,EAAKhF,KAAlD,KACA,yBAAKyF,UAAU,uBACX,4BAAQA,UAAU,iDAAiDpF,KAAK,UAAxE,gBACA,4BAAQoF,UAAU,iDAAiDpF,KAAK,SAASkF,QAASJ,KAAKP,sBAA/F,aAEJ,yBAAKa,UAAU,aACO,eAAhBT,EAAKW,OAA4B,kBAACP,EAAD,MAA0B,OAIpE,wBAAIK,UAAU,cACX,kBAAC,IAAD,CAAMG,GAAG,UAAT,UAGR,OACI,yBAAKH,UAAU,iBACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CAAMG,GAAG,KAAT,gBAEHF,O,GAhEIG,aCUNC,G,YAXC,WACd,OACE,yBAAKL,UAAU,WACb,yBAAKA,UAAU,mBACb,8BACA,kC,QC8BOM,G,MApCS,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,eAAoB,EAE1CC,oBAAS,GAFiC,mBAErEC,EAFqE,KAE1DC,EAF0D,KA4BtEb,EAAS,yBAAsBU,IAAiBE,EAAWF,EAAe,GAAjE,YAAuEE,EAAU,2BAA2B,IAC3H,OAASL,EACL,yBAAKP,UAAWA,EAAWc,YAzBX,SAACC,GACjBA,EAAEC,iBACFD,EAAEE,kBACFJ,GAAa,IAsBwCK,WAnBtC,SAACH,GAChBA,EAAEC,iBACFD,EAAEE,kBACFJ,GAAa,IAgBgEM,YAd7D,SAACJ,GACjBA,EAAEC,iBACFD,EAAEE,kBACFJ,GAAa,IAW0FO,OAT5F,SAACL,GACZA,EAAEC,iBACFD,EAAEE,kBACFJ,GAAa,GAEbJ,EAAaM,EAAEM,gBAKVb,GAFa,6BAAMA,KC1BXc,E,4MAEjBC,MAAQ,CACJC,OAAQ,KACRC,WAAY,KACZlB,UAAU,G,EAcdmB,WAAa,WAAO,IAAD,EAC4B,EAAK9E,MAAxC+E,EADO,EACPA,SAAUpB,EADH,EACGA,SAAUkB,EADb,EACaA,WAGtBD,EAAUG,EAAYA,EAAStI,KAAI,SAACuI,GAGtC,OAFYC,SAASC,cAAc,OAC/BC,IAAMH,EACF,kBAAC,EAAD,CAAW5D,IAAK4D,EAAMA,KAAMA,OACnC,KACL,EAAKI,SAAS,CAAER,SAAQC,WAAaA,GAAcA,GAAc,EAAKA,EAAa,EAAGlB,SAAWA,IAAuB,K,EAG5H0B,iBAAmB,SAACC,GAAY,IAAD,EACI,EAAKX,MAA5BC,EADmB,EACnBA,OAEJW,EAHuB,EACXV,WAEwBS,EAEpCC,GAAiBX,EAAOzD,SACxBoE,GAAiBX,EAAOzD,QAExBoE,EAAgB,IAChBA,GAAiBX,EAAOzD,QAG5B,EAAKiE,SAAS,CAAEP,WAAYU,K,EAGhCC,kBAAoB,WAChB,EAAKH,kBAAkB,I,EAG3BI,kBAAoB,WAChB,EAAKJ,iBAAiB,I,EAG1BK,WAAa,SAACxE,GAAW,IACb2D,EAAe,EAAKF,MAApBE,WACR,EAAKQ,iBAAiBnE,EAAQ2D,I,EAGlCc,e,uCAAiB,iCAAA5J,EAAA,sDAAS6J,EAAT,EAASA,MACdC,EAAqB,EAAK7F,MAA1B6F,iBACCC,EAAI,EAFA,YAEGA,EAAIF,EAAMzE,QAFb,gCAGH0E,EAAiB,EAAK7F,MAAM1D,GAAI,EAAKqI,MAAME,WAAYe,EAAME,IAH1D,OAEqBA,IAFrB,0D,wDAMjBC,iBAAmB,WAAO,IAAD,EACU,EAAKpB,MAA5BC,EADa,EACbA,OAAQC,EADK,EACLA,WACVmB,EAAQpB,EAAOC,GACrB,EAAK7E,MAAMiG,gBAAgB,EAAKjG,MAAM1D,GAAIuI,EAAYmB,EAAMhG,MAAMgF,O,EAItEkB,mBAAqB,SAACC,GACdA,EAAUpB,WAAa,EAAK/E,MAAM+E,UAClC,EAAKD,c,kEA3DThC,KAAKgC,e,+BA+DC,IAAD,SACoChC,KAAK6B,MAAtCC,EADH,EACGA,OAAQC,EADX,EACWA,WAAYlB,EADvB,EACuBA,SAEtByC,EAAoBzC,EACtB,6BACI,2BAAO0C,QAAQ,cAAcjD,UAAU,uCAAvC,mBAGA,2BAAOkD,SAAS,WAAWC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB,EAAKb,eAAea,IAASlK,GAAG,cAAc0B,KAAK,OAAOoF,UAAU,uBAE7H,KAEJ,IAAKwB,GAA4B,IAAlBA,EAAOzD,OAClB,OACI,kBAAC,EAAD,CAAiBwC,UAAQ,EAACE,aAAcf,KAAK6C,gBACzC,wBAAIvC,UAAU,iBAAd,sBACA,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,kCACVgD,KAMrB,IAAKxB,EAAOC,GACR,OAAO,kBAAC,EAAD,MAEX,IAAM4B,EAAe7B,EAAOC,GACtB6B,EAAO9B,EAAOnI,KAAI,SAACkK,EAASzF,GAC9B,IAAM0F,EAAW1F,IAAU2D,EAC3B,OAAO,kBAAC,EAAD,CAAS+B,SAAUA,EAAUtK,GAAI4E,EAAOgC,QAAS,EAAKwC,WAAYtE,IAAK,MAAQF,OAGpF2F,EAA2BlD,EAC7B,yBAAKP,UAAU,4BACX,yBAAKA,UAAU,kCACVgD,EACD,4BAAQpI,KAAK,SAASoF,UAAU,yBAAyBF,QAAS,kBAAM,EAAK6C,qBAA7E,oBAEE,KAKd,OACI,yBAAK3C,UAAU,WACX,kBAAC,EAAD,CAAiBO,SAAUA,EAAUE,aAAcf,KAAK6C,gBACpD,yBAAKvC,UAAU,UACX,yBAAKA,UAAU,QACVqD,EACD,yBAAKrD,UAAU,OAAOF,QAASJ,KAAK0C,mBAChC,yBAAKpC,UAAU,gBAEnB,yBAAKA,UAAU,OAAOF,QAASJ,KAAK2C,mBAChC,yBAAKrC,UAAU,kBAGvB,yBAAKA,UAAU,eACVsD,GAEJG,S,GA1IkBrD,aAmJrCsD,EAAY,SAAC,GAAc,IAAZ9B,EAAW,EAAXA,KAEjB,OACI,yBAAK5B,UAAU,eACX,yBAAK+B,IAAKH,EAAM+B,IAAI,aAK1BC,EAAU,SAAC,GAA+B,IAA7BJ,EAA4B,EAA5BA,SAAUtK,EAAkB,EAAlBA,GAAI4G,EAAc,EAAdA,QACvBE,EAAY,OAASwD,EAAW,cAAgB,IACtD,OACI,yBAAKxD,UAAWA,EAAWF,QAAS,kBAAMA,EAAQ5G,O,QC3J3C2K,EALO,SAACjH,GAAD,OACpB,uBAAKoD,UAAU,UACb,gBAAC,IAAD,eAAiB8D,UAAWlH,EAAMkH,WAAelH,MCYtCmH,EAfU,SAAC,GACzB,IAD0BC,EAC3B,EAD2BA,YAAYhE,EACvC,EADuCA,UAAUQ,EACjD,EADiDA,SAE/C,OACA,gBAAC,IAAD,CAAWwD,YAAaA,IACrB,gBAAEC,EAAF,EAAEA,SAASC,EAAX,EAAWA,eAAeC,EAA1B,EAA0BA,qBAA1B,OACE,qCAAKnE,UAAWA,EACXoE,IAAKH,GACDC,EACAC,GACL3D,OCCI6D,EATc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaxG,EAAhB,EAAgBA,MAAOkC,EAAvB,EAAuBA,UAAWQ,EAAlC,EAAkCA,SAAlC,OAC3B,gBAAC,IAAD,CAAW8D,YAAaA,EAAaxG,MAAOA,IACzC,gBAAEmG,EAAF,EAAEA,SAASM,EAAX,EAAWA,eAAeC,EAA1B,EAA0BA,gBAA1B,OACC,qCAAKxE,UAAWA,EAAWoE,IAAKH,GAAcM,EAAoBC,GAC/DhE,OCMMiE,G,YAXK,SAAC,GAAuB,IAAtBjE,EAAqB,EAArBA,SAASkE,EAAY,EAAZA,OAE3B,OACI,yBAAK1E,UAAU,qBACT0E,GAAoB,yBAAK1E,UAAU,SACrC,yBAAKA,UAAU,wBACVQ,MCkBFmE,EAtBM,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,QAAQC,EAAuC,EAAvCA,MAAMC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,cAC3CC,EACJ,uBAAKhF,UAAU,sBACb,0BAAQA,UAAU,QAAQpF,KAAK,SAASqK,eAAa,QAAQC,aAAW,QAAQpF,QAAS,kBAAMiF,EAAcF,KAC3G,wBAAMM,cAAY,QAAlB,UAGN,OACE,gBAAC,EAAD,CAAsBb,YAAaO,EAAO/G,MAAOgH,GAE/C,uBAAK9E,UAAU,iBAEb,gBAAC,EAAD,CAAa0E,OAAQM,GAEnB,2BAAMJ,OCLDQ,MAVY,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAMN,EAAkB,EAAlBA,cAEjC,OAAO,+BAAOM,EAAMhM,KAAI,SAAC0F,EAAKuG,GAAN,OAG1B,SAAevG,EAAMuG,EAASP,GAE5B,OAAO,gBAAC,EAAD,CAAcA,cAAeA,EAAe/G,IAAKe,EAAKnC,MAAM1D,GAAI8G,UAAU,MAAM8E,aAAcQ,EAAUT,MAAO9F,EAAKnC,MAAM1D,GAAI0L,QAAS7F,IALrGwG,CAAMxG,EAAKuG,EAASP,MAAtD,MCOMS,EATQ,SAAC,GACvB,IADwBtM,EACzB,EADyBA,GAAGmM,EAC5B,EAD4BA,MAAON,EACnC,EADmCA,cAGjC,OADA7L,EAAKuM,OAAOvM,GAEZ,gBAAC,EAAD,CAAkB8K,YAAa9K,EAAI8G,UAAU,UAC3C,gBAAC,EAAD,CAAoBqF,MAAOA,EAAON,cAAeA,MCP/CW,G,kNAEFnE,MAAQ,CACJoE,KAAK,GACLpF,UAAS,EACTqF,aAAa,GACbC,YAAW,G,EAGfC,QAAU,WACN,OAAO,EAAKvE,MAAMoE,M,EAGtBrG,kBAAoB,WAAO,IAAD,EACG,EAAK1C,MAAvB+I,EADe,EACfA,KAAMpF,EADS,EACTA,SAEb,EAAKyB,SAAS,CAAC2D,KAAMA,GAAW,GAAGpF,SAAUA,IAAmB,K,EAGpEuC,mBAAqB,SAACC,GACf,EAAKnG,MAAM+I,OAAS5C,EAAU4C,MAC7B,EAAK3D,SAAS,CAAC2D,KAAK,EAAK/I,MAAM+I,Q,EAIvCI,YAAc,WAAO,IACVH,EAAgB,EAAKrE,MAArBqE,aACP,EAAK5D,SAAS,CAAC2D,KAAKC,EAAaC,YAAW,IAC5C,EAAKjJ,MAAMoJ,gBAAgB,EAAKpJ,MAAM1D,GAAI0M,I,EAG9CK,cAAgB,WAAO,IAAD,EACQ,EAAK1E,MAAxBsE,EADW,EACXA,WAAWF,EADA,EACAA,KACZO,GAAaL,EACnB,EAAK7D,SAAS,CAAC6D,WAAWK,EAAWN,aAAaD,K,uDAE5C,IAAD,SACgDjG,KAAK6B,MAAlDhB,EADH,EACGA,SAAUqF,EADb,EACaA,aAAcC,EAD3B,EAC2BA,WAAYF,EADvC,EACuCA,KACtCQ,EAAQ,wBAAInG,UAAU,gBAAd,kBACRoG,EACN,yBAAKpG,UAAU,cACP,8BAAUA,UAAU,8BAA8BqG,KAAK,IAAIlD,SAAU,YAAa,IAAXC,EAAU,EAAVA,OAAW,EAAKpB,SAAS,CAAC4D,aAAaxC,EAAOyB,SAAUA,MAAOe,IACtI,yBAAK5F,UAAU,aACX,4BAAQpF,KAAK,SAASoF,UAAU,2BAA2BF,QAAS,WAAK,EAAKiG,gBAA9E,gBACA,4BAAQnL,KAAK,SAASoF,UAAU,6BAA6BiF,eAAa,QAAQnF,QAAS,kBAAI,EAAKkC,SAAS,CAAC6D,YAAY,EAAKtE,MAAMsE,eAArI,WAINS,EAAgB/F,EAClB,yBAAKP,UAAU,cACX,4BAAQpF,KAAK,SAASoF,UAAU,iCAAiCF,QAAS,WAAQ,EAAKmG,kBAAvF,WACM,KAERM,EAAqBZ,EAAKa,MAAM,MAAMnN,KAAI,SAAC0F,EAAKjB,GAAN,OAAc,wBAAIE,IAAG,0BAAqBF,GAASkC,UAAU,eAAejB,MAEtH0H,EACF,yBAAKzG,UAAU,aACT6F,EAAYO,EAAWG,GAIjC,OACI,yBAAKvG,UAAU,wBACX,kBAAC,EAAD,CAAK0G,KAAMP,EAAOQ,MAAOF,IACzB,6BACGZ,EAAyB,KAAbS,Q,GAjEGlG,cAsE5BwG,EAAM,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAEjB,OACI,yBAAK3G,UAAU,WACX,yBAAKA,UAHF,YAIE0G,GAEL,yBAAK1G,UAAU,YACV2G,KAMFjB,IC+EAmB,G,kNA/JX3H,kBAAoB,IAAI3G,E,EAExBgJ,MAAQ,CACJuF,sBAAsB,EACtBC,cAAe,CACXzF,cAAe,SACfoE,oBAAqB,cACrBsB,OAAQ,UAEZC,iCAAgC,EAChCzN,cAAc,GACdoF,SAAS,M,EAGbU,kB,sBAAoB,8BAAA3G,EAAA,6DACTiG,EAAY,EAAKhC,MAAjBgC,SADS,SAEY,EAAKM,kBAAkB3F,sBAFnC,OAEVC,EAFU,OAGhB,EAAKwI,SAAS,CAACxI,gBAAcoF,aAHb,2C,EAOpBsI,oBAAsB,WAAO,IAEnBhB,GAD2B,EAAK3E,MAA9BuF,qBAER,EAAK9E,SAAS,CAAE8E,qBAAsBZ,K,EAG1CiB,oBAAsB,SAAC5D,GACnB,EAAK3G,MAAMwK,uBAAuB7D,GAClC,EAAK2D,uB,EAGTG,+BAAiC,WAAO,IAE9BnB,GADsC,EAAK3E,MAAzC0F,gCAER,EAAKjF,SAAS,CAAEiF,gCAAiCf,K,EAGrDoB,uB,uCAAyB,WAAOpO,GAAP,SAAAP,EAAA,sEACf,EAAKiE,MAAM2K,kBAAkBrO,GADd,OAErB,EAAKmO,iCAFgB,2C,wDAKzBG,yB,sBAA2B,sBAAA7O,EAAA,sEACjB,EAAKiE,MAAM6K,cADM,2C,EAG3BC,oBAAsB,WAClB,EAAK9K,MAAM+K,gB,EAGfC,yBAA2B,WACvB,EAAKhL,MAAMiL,e,EAGfC,4B,sBAA8B,sBAAAnP,EAAA,sEACpB,EAAKiE,MAAML,iBADS,2C,EAI9BwL,wB,uCAA0B,+BAAApP,EAAA,6DAAQ6J,EAAR,EAAQA,MAAR,SAChB,EAAK5F,MAAMoL,WAAWxF,EAAM,IADZ,QAEd5D,EAAa,EAAK2C,MAAlB3C,UACCqJ,SAAU,EACnB,EAAKjG,SAAS,CAACpD,aAJO,2C,wDAO1BsJ,wB,sBAA0B,4BAAAvP,EAAA,sEAChB,EAAKuG,kBAAkBxC,WAAW,EAAK6E,MAAM3C,SAAS1F,IADtC,QAEd0F,EAAa,EAAK2C,MAAlB3C,UACCqJ,SAAU,EACnB,EAAKjG,SAAS,CAACpD,aAJO,2C,uDAOhB,IAAD,SAEqGc,KAAK6B,MAAvGuF,EAFH,EAEGA,qBAAsBG,EAFzB,EAEyBA,gCAAiCF,EAF1D,EAE0DA,cAAevN,EAFzE,EAEyEA,cAAeoF,EAFxF,EAEwFA,SACvFuJ,EAAiB,wBAAoBrB,EAAuB,OAAS,IACrEsB,EAA4B,wBAAoBnB,EAAkC,OAAS,IAC3FoB,EAAoB,SAAC,GAAoB,IAAlBnP,EAAiB,EAAjBA,GAAG4G,EAAc,EAAdA,QACtBF,EAAUC,cACVyI,EAAW,uCAAG,sBAAA3P,EAAA,sEACVmH,IADU,OAEhBF,EAAQG,KAAR,qBAA2B7G,IAFX,2CAAH,qDAIjB,OAAQ,4BAAQ8G,UAAU,0BAA0BF,QAASwI,GAArD,iBAGNC,EAAuB,SAAC,GAAc,IAAbzI,EAAY,EAAZA,QACrBF,EAAUC,cACVyI,EAAW,uCAAG,sBAAA3P,EAAA,sEACVmH,IADU,OAEhBF,EAAQG,KAAR,KAFgB,2CAAH,qDAIjB,OAAQ,4BAAQC,UAAU,8BAA8BF,QAASwI,GAAzD,oBAGNb,EAAe,kBAACY,EAAD,CAAmBnP,GAAIwG,KAAK9C,MAAM1D,GAAI4G,QAAO,sBAAE,sBAAAnH,EAAA,sEAAe,EAAK6O,2BAApB,qFAC9DgB,EAAmB3K,OAAO4K,OAAO1B,GAAe1N,KAAI,SAACkK,GAAD,OACrD,yBAAKvF,IAAG,cAASuF,IACd,0BAAMvD,UAAS,gBAAmBF,QAAS,kBAAM,EAAKqH,oBAAoB5D,KAAWA,OAGvFmF,EAAsBlP,EAAeA,EAAcH,KAAI,gBAAEH,EAAF,EAAEA,GAAIqB,EAAN,EAAMA,KAAN,OACxD,yBAAKyD,IAAG,cAAS9E,IACd,0BAAM8G,UAAS,wBAAmB,EAAKuB,MAAM3C,SAAS+J,QAAUzP,EAAK,YAAc,IAAM4G,QAAS,kBAAM,EAAKwH,uBAAuBpO,KAAMqB,OAE/I,KACGsN,EAAc,4BAAQjN,KAAK,SAASoF,UAAU,+BAA+BF,QAASJ,KAAKkI,0BAA7E,gBAEdI,EACF,yBAAKhI,UAAU,gBACX,2BAAOiD,QAAQ,cAAcjD,UAAU,+BAAvC,eACA,2BAAOmD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB,EAAK2E,wBAAwB3E,IAASlK,GAAG,cAAc0B,KAAK,OAAOoF,UAAU,uBAGhHtD,EAAc,4BAAQ9B,KAAK,SAASoF,UAAU,8BAA8BF,QAASJ,KAAKwI,yBAA5E,eACdU,EAAuB,kBAACL,EAAD,CAAsBrP,GAAIwG,KAAK9C,MAAM1D,GAAI4G,QAAO,sBAAE,sBAAAnH,EAAA,sEAAe,EAAKmP,8BAApB,qFAC/E,OACI,yBAAK9H,UAAU,wBACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,iBACV,wBAAIA,UAAU,kCACV,wBAAIA,UAAU,2BAA2B6I,cAAY,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAC7GlJ,QAAS,kBAAM,EAAKoH,wBADxB,YAEA,yBAAKlH,UAAWmI,EAAmBc,cAAY,gBAC1CT,IAGT,4BACI,yBAAKxI,UAAU,aACVgI,EACCpJ,GAAYA,EAASqJ,QAASvL,EAAW,KAC1CmL,EACAe,IAGT,wBAAI5I,UAAU,kCACV,wBAAIA,UAAU,2BAA2B6I,cAAY,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAC7GlJ,QAAS,kBAAM,EAAKuH,mCADxB,sBAEA,yBAAKrH,UAAWoI,EAA8Ba,cAAY,gBACrDP,IAGT,wBAAI1I,UAAU,+BACV,yBAAKA,UAAU,aACVyH,EACD,4BAAQzH,UAAU,yBAAyBF,QAASJ,KAAKgI,qBAAzD,mB,GAnJRtH,c,iBC0BT8I,G,YA5BD,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMjD,EAA8B,EAA9BA,MAAO3F,EAAuB,EAAvBA,SAAU6I,EAAa,EAAbA,OAEvCC,EAAc,4BAAwBF,EAAK,mBAAmB,gBACpE,OACI,yBAAKpJ,UAAWsJ,EAAiBC,SAAS,KAAKT,KAAK,SAASU,kBAAgB,qBACrE,yBAAKxJ,UAAU,iBAAiBF,QAAS,kBAAmC,mBAAnC,EAAEsD,OAAmBpD,UAAgCmJ,IAAU,KACxG,yBAAKnJ,UAAU,+CACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAemG,GAC7B,4BAAQvL,KAAK,SAASoF,UAAU,QAAQiF,eAAa,QAAQE,cAAY,OAAOrF,QAAS,kBAAIqJ,MAA7F,SAGJ,yBAAKnJ,UAAU,cACVQ,GAEL,yBAAKR,UAAU,gBACdqJ,EACG,4BAAQzO,KAAK,SAASoF,UAAU,oBAAoBiF,eAAa,QAAQnF,QAASqJ,GAAlF,kB,iBCdPM,E,4MAGjBlI,MAAQ,CACJhB,UAAS,EACTzB,OAAO,GACP4K,WAAU,EACVC,aAAa,M,EAGjBrK,kB,sBAAoB,gCAAA3G,EAAA,wDACW,EAAKiE,MAAzBkC,EADS,EACTA,OAAQyB,EADC,EACDA,SAEf,EAAKyB,SAAS,CAAElD,SAAQyB,SAAWA,IAAuB,IAH1C,2C,EAMpBqJ,iBAAmB,SAAC1Q,GAAQ,IAElB2Q,EADW,EAAKtI,MAAfzC,OACqBgL,MAAK,SAACC,GAAD,OAASA,EAAM7Q,KAAOA,KACvD,EAAK0D,MAAMoN,aAAaH,I,EAI5BI,gB,uCAAkB,uCAAAtR,EAAA,sDAAQ6J,EAAR,EAAQA,MAAR,EAC+B,EAAK5F,MAA3C1D,EADO,EACPA,GAAGgR,EADI,EACJA,eAAgBC,EADZ,EACYA,gBAElBzH,EAAE,EAHI,YAGFA,EAAEF,EAAMzE,QAHN,gCAIJmM,EAAehR,EAAIsJ,EAAME,IAJrB,OAGaA,IAHb,6BAMd,EAAKV,SAAS,CAAC0H,WAAU,IANX,UAORS,EAAgBjR,GAPR,4C,wDAWlBwQ,UAAY,WACR,EAAK1H,SAAS,CAAE0H,WAAW,K,EAG/BU,kB,sBAAoB,0CAAAzR,EAAA,yDACTgR,EAAgB,EAAKpI,MAArBoI,aAEDjR,EAAM,IAAI2R,IAAIV,GAEJ,oBADCjR,EAAI4R,SAJL,wBAMNC,EAAc7R,EAAI8R,MAClBC,EAAc,IAAIC,gBAAgBH,EAAY/O,MAAM,IAEpDqJ,EAAQ4F,EAAYE,IAAI,KACxBC,EAVM,wCAUoC/F,GAC1CtK,EAAOsQ,OAAO,qBAAsB,SAX9B,UAYN,EAAKjO,MAAMwN,kBAAkB,EAAKxN,MAAM1D,GAAGqB,EAAMqQ,GAZ3C,uCAgBNrQ,EAAOsQ,OAAO,qBAAsB,SAhB9B,UAiBN,EAAKjO,MAAMwN,kBAAkB,EAAKxN,MAAM1D,GAAGqB,EAAMoP,GAjB3C,QAmBhB,EAAK3H,SAAS,CAAC0H,WAAU,IAnBT,4C,uDAwBV,IAAD,SAEmChK,KAAK6B,MAArCzC,EAFH,EAEGA,OAAQyB,EAFX,EAEWA,SAAUmJ,EAFrB,EAEqBA,UAClBxQ,EAAOwG,KAAK9C,MAAZ1D,GAEF4R,EAAiCvK,EACnC,6BACI,4BAAQ3F,KAAK,SAASoF,UAAU,0BAA0BF,QAASJ,KAAKgK,WAAxE,uBAEJ,KACEqB,EAAmBxK,EACrB,yBAAKP,UAAU,qBACX,2BAAOiD,QAAQ,cAAcjD,UAAU,uCAAvC,iBAGA,2BAAOkD,SAAS,WAAWC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB,EAAK6G,gBAAgB7G,IAASlK,GAAG,cAAc0B,KAAK,OAAOoF,UAAU,uBAE9H,KAEEyD,EAA2BlD,EAC7B,yBAAKP,UAAU,4BACX,yBAAKA,UAAU,kCACV8K,IAEC,KAERE,EAAStB,EACX,kBAAC,EAAD,CAAON,KAAMM,EAAWP,QAAS,kBAAM,EAAKnH,SAAS,CAAE0H,WAAW,KAAUvD,MAAM,mBAC9E,yBAAKnG,UAAU,+BACX,yBAAKA,UAAU,oBACX,sEAGJ,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,+BAA+BmD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB,EAAKpB,SAAS,CAAE2H,aAAcvG,EAAOyB,WAC/G,yBAAK7E,UAAU,sBACX,4BAAQA,UAAU,kBAAkBpF,KAAK,SAASkF,QAASJ,KAAK0K,mBAAhE,YAIR,yBAAKpK,UAAU,oBACX,wBAAIiL,MAAO,CAAEC,UAAW,WAAxB,OAGJ,yBAAKlL,UAAU,oBACX,yDAGJ,yBAAKA,UAAU,oBACX,kBAAC,EAAD,CAAiBU,eAAe,eAAeH,UAAQ,EAACE,aAAcf,KAAKuK,iBACvE,6BACI,yBAAKjK,UAAU,wCACX,yBAAKA,UAAU,kCACX,wBAAIA,UAAU,IAAd,wBAMhB,yBAAKiL,MAAO,CAAEE,QAAS,QAAUnL,UAAU,aACtC+K,MAMjB,KAEJ,IAAKjM,GAA4B,IAAlBA,EAAOf,OAClB,OACI,6BACCiN,EACD,kBAAC,EAAD,CAAiBzK,SAAUA,EAAUvC,IAAK9E,EAAIuH,aAAcf,KAAKuK,iBAC7D,wBAAIjK,UAAU,iBAAd,sBACCyD,IAKb,IAAM2H,EAAiC,IAAlBtM,EAAOf,OAAe,wBAAIiC,UAAU,cAAd,sBAAoDlB,EAAOzF,KAAI,WAAayE,GAAb,IAAEvD,EAAF,EAAEA,KAAMrB,EAAR,EAAQA,GAAR,OACtG,yBAAK8E,IAAG,eAAUF,GAASkC,UAAU,kBAAkBF,QAAS,kBAAI,EAAK8J,iBAAiB1Q,KACtF,wBAAI8G,UAAU,eAAezF,GAC7B,yBAAKyF,UAAU,aACX,yBAAK+B,IAAKsJ,IAAW1H,IAAI,aAQrC,OACI,6BACKqH,EACD,kBAAC,EAAD,CAAiBzK,SAAUA,EAAUvC,IAAK9E,EAAIuH,aAAcf,KAAKuK,iBAC7D,wBAAIjK,UAAU,uBAAd,UACA,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACVoL,IAGJ3H,S,GApKoBrD,aCQ9BkL,EAZK,SAAC,GAAa,IAAX5S,EAAU,EAAVA,IACnB,OACI,yBAAKsH,UAAU,gBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACX,4BAAQmG,MAAOzN,EAAK6S,MAAM,MAAMC,OAAO,MAAMzJ,IAAKrJ,EAAK+S,YAAY,IAAIC,iBAAe,MAG9F,yBAAKxS,GAAG,WCGCyS,G,kNAEjBzM,kBAAoB,IAAI3G,E,EAExBgJ,MAAQ,CACJ/G,KAAM,KACNoR,UAAW,KACXC,SAAU,EACVC,SAAU,GACV9P,WAAY,KACZ+P,SAAU,GAGVC,QAAS,GACTC,MAAO,GACPC,YAAa,KACbxC,WAAW,EACXyC,yBAAwB,G,EAG5BrI,U,uCAAY,WAAOtG,GAAP,qBAAA7E,EAAA,yDACAyT,EAAwB5O,EAAxB4O,YAAazQ,EAAW6B,EAAX7B,OAEhByQ,EAHG,iDAKAN,EAAa,EAAKvK,MAAlBuK,SACFO,EAAYP,EAASQ,OAAO3Q,EAAOmC,MAAO,GAAG,GACnDgO,EAASQ,OAAOF,EAAYtO,MAAO,EAAGuO,GAEtC,EAAKrK,SAAS,CAAE8J,aATR,2C,wDAwBZS,mB,sBAAqB,sCAAA5T,EAAA,sDAET6B,EAAS,EAAK+G,MAAd/G,KACAgS,EAAUhS,EAAVgS,MAGC9J,EAAI,EANI,YAMDA,EAAI8J,EAAMzO,QANT,oBASQ,yBAFfwF,EAAUiJ,EAAM9J,IAEV9H,MAAoD,OAAlB2I,EAAQsB,MATzC,gBAUT,EAAK4H,gBAAgB/G,EAAqB,CAAEC,KAAMpC,EAAQsB,MAAOmB,gBAAgB,EAAKA,gBAAiBzF,UAAU,IAVxG,0BAYa,kBAAjBgD,EAAQ3I,OAA4B2I,EAAQsB,MAZxC,kCAac,EAAK3F,kBAAkBnC,oBAAoBwG,EAAQsB,OAbjE,QAaHlD,EAbG,OAeT,EAAK8K,gBAAgBnL,EAAe,CAAEpI,GAAIqK,EAAQsB,MAAOlD,WAAUpB,UAAU,EAAMkC,iBAAkB,EAAKA,iBAAkBI,gBAAiB,EAAKA,kBAfzI,2BAkBa,oBAAjBU,EAAQ3I,OAA8B2I,EAAQsB,MAlB1C,kCAmBY,EAAK3F,kBAAkBL,2BAA2B0E,EAAQsB,OAnBtE,eAmBH/F,EAnBG,iBAoBH,EAAK2N,gBAAgBhD,EAAiB,CAAEvQ,GAAIqK,EAAQsB,MAAO/F,SAAQsL,kBAAmB,EAAKA,kBAAmBD,gBAAiB,EAAKA,gBAAiB5J,UAAU,EAAMyJ,aAAc,EAAKA,aAAcE,eAAgB,EAAKA,iBApBxN,QAMiBxH,IANjB,2D,EA0BrBD,iB,uCAAmB,WAAOvJ,EAAIuI,EAAYxE,GAAvB,SAAAtE,EAAA,sEACG,EAAKuG,kBAAkBxD,YAAYxC,EAAI+D,GAD1C,iBAENnE,GAFM,iDAOf,EAAK4T,aAAaxT,EAAIuI,GAPP,2C,4DAUnBoB,gB,uCAAkB,WAAO3J,EAAIuI,EAAYG,GAAvB,iBAAAjJ,EAAA,sDAEd,IADI+J,EAAId,EAAK7D,OAAS,EACH,MAAZ6D,EAAKc,IAAYA,IAFV,OAGRiK,EAAY/K,EAAKgL,UAAUlK,EAAI,GAHvB,SAKI,EAAKxD,kBAAkBrC,YAAY8P,GALvC,kBAON3S,MAPM,iDAUd,EAAK0S,aAAaxT,EAAIuI,GAVR,2C,4DAelBoL,c,uCAAgB,+BAAAlU,EAAA,6DAASO,EAAT,EAASA,GAAIyP,EAAb,EAAaA,MAAb,SACM,EAAKzJ,kBAAkBpC,YAAY5D,GADzC,kBAGJc,MAHI,iEAMN,EAAKmQ,gBAAgBxB,GANf,OAOZ,EAAK3G,SAAS,CAAE0H,WAAW,IAPf,2C,wDAYhBgD,a,uCAAe,WAAOxT,EAAIuI,GAAX,qBAAA9I,EAAA,6DACHmT,EAAa,EAAKvK,MAAlBuK,SADG,SAEY,EAAK5M,kBAAkBnC,oBAAoB7D,GAFvD,OAELyI,EAFK,OAILmL,EAAiBhB,EAASiB,WAAU,SAAChO,GAAD,OAAUA,EAAKnC,MAAM1D,KAAOA,KAChE8T,EAAY,kBAAC,EAAD,iBAAmBlB,EAASgB,GAAgBlQ,MAA5C,CAAmD+E,SAAUA,EAAUF,WAAaA,EAAa,EAAKA,EAAa,EAAI,QACzIqK,EAASgB,GAAkBE,EAE3B,EAAKhL,SAAS,CAAE8J,aARL,2C,0DAYfW,gBAAkB,SAACQ,GAAgC,IAAhBrQ,EAAe,uDAAP,GAAO,EACf,EAAK2E,MAA5BuK,EADsC,EACtCA,SAAUC,EAD4B,EAC5BA,SAEbA,EAASkB,EAAe1S,QACzBwR,EAASkB,EAAe1S,MAAQ,GAEpC,IAAM2S,EAAUnB,EAASkB,EAAe1S,MAElC4S,EAAU,kBAACF,EAAD,eAAgBjP,IAAKyH,OAAOwH,EAAe1S,MAAQ2S,EAAShU,GAAIuM,OAAOwH,EAAe1S,MAAQ2S,GAAatQ,IAC3HmP,EAASkB,EAAe1S,OAAS,EACjCuR,EAAS/L,KAAKoN,GAEd,EAAKnL,SAAS,CACV8J,WACAC,c,EAIR3E,uB,uCAAyB,WAAO7D,GAAP,6BAAA5K,EAAA,2DAEb4K,EAFa,OAGZ,WAHY,OASZ,gBATY,OAcZ,WAdY,+BAIb6J,EAAqB9L,EAJR,SAKQ,EAAKpC,kBAAkBnD,WAAW,EAAKa,MAAM1D,IALrD,cAKP+C,EALO,OAMbW,EAAQ,CAAE1D,GAAI+C,EAAO/C,GAAIqH,UAAU,EAAMkC,iBAAkB,EAAKA,iBAAkBI,gBAAiB,EAAKA,iBAN3F,mCAUbuK,EAAqB1H,EACrB9I,EAAQ,CAAE+I,KAAM,GAAIpF,UAAU,EAAMyF,gBAAiB,EAAKA,iBAX7C,oCAeboH,EAAqB3D,EAfR,UAgBiB,EAAKvK,kBAAkBhD,oBAAoB,EAAKU,MAAM1D,IAhBvE,eAgBPiD,EAhBO,iBAiBQ,EAAK+C,kBAAkBL,2BAA2B1C,EAAgBjD,IAjB1E,eAiBP4F,EAjBO,OAkBblC,EAAQ,CAAE1D,GAAIiD,EAAgBjD,GAAI4F,SAAQqL,gBAAgB,EAAKA,gBAAgBC,kBAAkB,EAAKA,kBAAmBF,eAAgB,EAAKA,eAAgBF,aAAc,EAAKA,aAAczJ,UAAU,GAlB5L,+DAwBrB,EAAKkM,gBAAgBW,EAAoBxQ,GAxBpB,EAyBO,EAAK2E,MAAzB0K,EAzBa,EAyBbA,MAAOH,EAzBM,EAyBNA,SACfG,EAAMlM,KAAK+L,EAASA,EAAS/N,OAAS,IA1BjB,4C,wDA6BzBmM,e,uCAAiB,WAAOhR,EAAI6Q,GAAX,eAAApR,EAAA,6DAEP4B,EAAOsQ,OAAO,qBAAsB,SAF7B,SAGK,EAAK3L,kBAAkBrD,UAAU3C,EAAIqB,EAAMwP,GAHhD,iBAIJjR,GAJI,qF,0DASjBsR,kBAAqB,SAAClR,EAAGqB,EAAM7B,GAC3B,EAAKwG,kBAAkBpD,aAAa5C,EAAGqB,EAAM7B,GAAKS,MAAK,WACnD,EAAKgR,gBAAgBjR,O,EAK7BiR,gB,uCAAkB,WAAOjR,GAAP,yBAAAP,EAAA,6DAEPmT,EAAY,EAAKvK,MAAjBuK,SAFO,SAGO,EAAK5M,kBAAkBL,2BAA2B3F,GAHzD,OAGR4F,EAHQ,OAKRgO,EAAiBhB,EAASiB,WAAU,SAAChO,GAAD,OAAUA,EAAKnC,MAAM1D,KAAOA,KAChEmU,EANQ,eAMOvB,EAASgB,GAAgBlQ,MANhC,CAMsCkC,WACpDgN,EAASQ,OAAOQ,EAAe,GAC/B,EAAK9K,SAAS,CAAC8J,aAIf,EAAKW,gBAAgBhD,EAAgB4D,GACrBC,EAAa,EAAK/L,MAA3BuK,SACDqB,EAAUG,EAAUC,MAC1BD,EAAUhB,OAAOQ,EAAe,EAAEK,GAClC,EAAKnL,SAAS,CAAC8J,SAASwB,IAhBV,4C,wDAmBlBtD,a,uCAAe,WAAOD,GAAP,uBAAApR,EAAA,sDACNuT,EAA0BnC,EAA1BmC,YAAaxC,EAAaK,EAAbL,UACV/N,EAAeoO,EAAfpO,OAAQzC,EAAO6Q,EAAP7Q,GAED,UAAXyC,GACAuQ,EAAc,kBAAC,EAAD,CAAanC,MAAOA,EAAOrR,IAAG,UAAK,EAAKwG,kBAAkB1G,SAA5B,kBAA8CU,KAC1FwQ,GAAU,GAIe,qBADnB8D,EAAW,IAAInD,IAAIN,EAAM/O,OACnBsP,UACRmD,QAAQC,IAAIF,EAASlD,UACrB4B,EAAc,kBAAC,EAAD,CAAanC,MAAOA,EAAOrR,IAAKqR,EAAM/O,OACpD0O,GAAU,IAGViE,OAAOC,KAAK7D,EAAM/O,MAClB0O,GAAU,GAGlB,EAAK1H,SAAS,CAAEkK,cAAaxC,cApBlB,2C,wDAwBfmE,sB,uCAAwB,WAAO3U,GAAP,qBAAAP,EAAA,wDACU,EAAK4I,MAA3BuK,EADY,EACZA,SAAUE,EADE,EACFA,QACZlO,EAAQgO,EAASrQ,QAAQqQ,EAAShC,MAAK,SAAC/K,GAAD,OAAUA,EAAKnC,MAAM1D,KAAOA,MACzE8S,EAAQjM,KAAK+L,EAASQ,OAAOxO,EAAO,GAAG,IAEvC,EAAKkE,SAAS,CAAE8J,WAAUE,YALN,2C,wDASxBhG,gBAAkB,SAAC9M,EAAIyM,GAAU,IAAD,EACG,EAAKpE,MAA5BuK,EADoB,EACpBA,SAAUC,EADU,EACVA,SACZjO,EAAQgO,EAASrQ,QAAQqQ,EAAShC,MAAK,SAAC/K,GAAD,OAAUA,EAAKnC,MAAM1D,KAAOA,MACnE8E,EAAMyH,OAAOC,EAAoBnL,MAAQwR,EAASrG,EAAoBnL,QAC5EuR,EAAShO,GAAS,kBAAC,EAAD,CAAqByC,UAAQ,EAACvC,IAAKA,EAAK9E,GAAI8E,EAAK2H,KAAMA,EAAMK,gBAAiB,EAAKA,kBACrG,EAAKhE,SAAS,CAAE8J,WAAUC,c,EAG9BtE,Y,sBAAc,4CAAA9O,EAAA,wDAC0B,EAAK4I,MAAjC/G,EADE,EACFA,KAAMsR,EADJ,EACIA,SAAUE,EADd,EACcA,QAElBQ,EAAQ,GACdiB,QAAQC,IAAI5B,GACJpJ,EAAE,EALA,YAKEA,EAAEoJ,EAAS/N,QALb,iBAMAgB,EAAO+M,EAASpJ,GAChByK,EAAU,CAAEvS,KAAMmE,EAAKnE,KAAKL,MAP5B,KAQEwE,EAAKnE,KAAKL,KARZ,OASG,kBATH,MAUG,oBAVH,QAcG,wBAdH,gCAWE4S,EAAQtI,MAAQ9F,EAAKnC,MAAM1D,GAX7B,oCAeEiU,EAAQtI,MAAQ9F,EAAKnC,MAAM+I,KAf7B,+DAoBN6G,EAAMzM,KAAKoN,GApBL,QAKoBzK,IALpB,8BAsBVlI,EAAKgS,MAAQA,EACbiB,QAAQC,IAAIlB,GAvBF,UAwBJ,EAAKtN,kBAAkBvC,cAAc,EAAKC,MAAM1D,GAAI,CAAEsT,QAAOjS,KAAKC,EAAKD,KAAMoO,MAAMnO,EAAKmO,QAxBpF,WA2Ba,IAAnBqD,EAAQjO,OA3BF,iBA6BG2E,EAAI,EA7BP,aA6BUA,EAAIsJ,EAAQjO,QA7BtB,oBA8B2B,kBAAzBiO,EAAQtJ,GAAG9H,KAAKL,KA9BlB,kCA+BQ,EAAK2E,kBAAkB7C,aAAa2P,EAAQtJ,GAAG9F,MAAM1D,IA/B7D,mCAiCgC,oBAAzB8S,EAAQtJ,GAAG9H,KAAKL,KAjCvB,kCAkCQ,EAAK2E,kBAAkB5C,sBAAsB0P,EAAQtJ,GAAG9F,MAAM1D,IAlCtE,QA6B8BwJ,IA7B9B,wBAwCV,EAAKV,SAAS,CAAExH,OAAMwR,QAAS,KAxCrB,4C,EA2CdrE,a,sBAAe,kCAAAhP,EAAA,wDACkB,EAAK4I,MAA1BqK,EADG,EACHA,UAAWK,EADR,EACQA,MACVvJ,EAAI,EAFF,YAEKA,EAAIuJ,EAAMlO,QAFf,mBAGoB,kBAAvBkO,EAAMvJ,GAAG9H,KAAKL,KAHX,gCAIG,EAAK2E,kBAAkB7C,aAAa4P,EAAMvJ,GAAG9F,MAAM1D,IAJtD,OAEuBwJ,IAFvB,sBAOX,EAAKV,SAAS,CAAExH,KAAMoR,EAAWK,MAAO,GAAIH,SAAU,KACtD,EAAKS,qBARM,4C,EAWf1E,YAAc,WAAO,IACVrN,EAAQ,EAAK+G,MAAb/G,KACDsT,EAAWjD,OAAO,kBAAmBrQ,EAAKD,MAC5CuT,GAAyB,KAAbA,IACZtT,EAAKD,KAAOuT,EACZ,EAAK9L,SAASxH,K,EAItBwN,W,uCAAa,WAAO+F,GAAP,SAAApV,EAAA,sEACH,EAAKuG,kBAAkBtD,SAAS,EAAK2F,MAAM/G,KAAKtB,GAAI6U,GADjD,2C,wDAIbxG,kBAAoB,SAACrO,GAAQ,IAClBsB,EAAQ,EAAK+G,MAAb/G,KACPA,EAAKmO,MAAQzP,EACb,EAAK8I,SAAS,CAACxH,U,EAGnB+B,e,sBAAiB,sBAAA5D,EAAA,sEACP,EAAKuG,kBAAkB3C,eAAe,EAAKgF,MAAM/G,KAAKtB,IAD/C,2C,mMAxRLA,EAAOwG,KAAK9C,MAAZ1D,G,EACgCwG,KAAKR,kBAArCP,E,EAAAA,YAAaN,E,EAAAA,e,SACMM,EAAYzF,G,cAAjC8U,E,gBACwB3P,EAAe2P,EAAarF,O,OAApDsF,E,OACNvO,KAAKsC,SAAS,CAAEhG,WAAY9C,EAAIsB,KAAMwT,EAAcpC,UAAWoC,EAAcC,oBAE7EvO,KAAK6M,qB,sIAsRC,IAAD,SACwD7M,KAAK6B,MAA1D/G,EADH,EACGA,KAAMqR,EADT,EACSA,SAAUC,EADnB,EACmBA,SAAUI,EAD7B,EAC6BA,YAAaxC,EAD1C,EAC0CA,UAE/C,IAAKlP,EACD,OAAO,KAJN,IAKGD,EAASC,EAATD,KAEF2T,EAAqB,4BAAQtT,KAAK,SAASoF,UAAU,yBAAyBF,QAAS,kBAAM,EAAK+M,cAAcX,EAAYtP,MAAMmN,SAA7G,gBACrBoE,EAAoBzE,EACtB,kBAAC,EAAD,CAAO1J,UAAU,cAAcqJ,OAAQ6E,EAAmB/E,QAAS,kBAAM,EAAKnH,SAAS,CAAE0H,WAAW,KAAUN,KAAMM,EAAWvD,MAAO+F,EAAYtP,MAAMmN,MAAMxP,MACzJ2R,GAEL,KAEJ,OACI,yBAAKlM,UAAU,YACVmO,EAED,wBAAInO,UAAU,mBACTzF,GAGL,kBAAC,EAAD,CAAWyN,WAAYtI,KAAKsI,WAAY9O,GAAIsB,EAAKtB,GAAI0F,SAAUpE,EAAM+M,kBAAmB7H,KAAK6H,kBAAmBhL,eAAgBmD,KAAKnD,eAAgBsL,YAAanI,KAAKmI,YAAaT,uBAAwB1H,KAAK0H,uBAAwBK,YAAa/H,KAAK+H,YAAaE,aAAcjI,KAAKiI,eAC3R,kBAAC,EAAD,CAAe7D,UAAWpE,KAAKoE,WAC3B,kBAAC,EAAD,CAAgB5K,GAAI2S,EAAUxG,MAAOyG,EAAU/G,cAAerF,KAAKmO,8B,GAvVvCzN,cCD3BgO,G,kNAEjBlP,kBAAoB,IAAI3G,E,EACxBgJ,MAAQ,CACJ/G,KAAK,KACLkP,WAAU,EACVwC,YAAY,KACZJ,SAAS,GACTC,SAAS,I,EAKbzM,kB,sBAAoB,8BAAA3G,EAAA,6DACRO,EAAO,EAAK0D,MAAZ1D,GADQ,SAEO,EAAKgG,kBAAkBP,YAAYzF,GAF1C,OAEV0F,EAFU,OAIhB,EAAKoD,SAAS,CAAExH,KAAMoE,IACtB,EAAK2N,qBALW,2C,EAQpBA,mB,sBAAqB,sCAAA5T,EAAA,sDAET6B,EAAS,EAAK+G,MAAd/G,KACAgS,EAAUhS,EAAVgS,MAIC9J,EAAI,EAPI,YAODA,EAAI8J,EAAMzO,QAPT,oBAUQ,yBAFfwF,EAAUiJ,EAAM9J,IAEV9H,MAAoD,OAAlB2I,EAAQsB,MAVzC,iCAWH,EAAK4H,gBAAgB/G,EAAqB,CAAEC,KAAMpC,EAAQsB,QAXvD,kCAaa,kBAAjBtB,EAAQ3I,OAA4B2I,EAAQsB,MAbxC,kCAcc,EAAK3F,kBAAkBnC,oBAAoBwG,EAAQsB,OAdjE,eAcHlD,EAdG,iBAeH,EAAK8K,gBAAgBnL,EAAe,CAAEpI,GAAIqK,EAAQsB,MAAOlD,aAftD,mCAkBa,oBAAjB4B,EAAQ3I,OAA8B2I,EAAQsB,MAlB1C,kCAmBY,EAAK3F,kBAAkBL,2BAA2B0E,EAAQsB,OAnBtE,eAmBH/F,EAnBG,iBAoBH,EAAK2N,gBAAgBhD,EAAiB,CAAEvQ,GAAIqK,EAAQsB,MAAO/F,SAAOkL,aAAc,EAAKA,eApBlF,QAOiBtH,IAPjB,2D,EA0BrB+J,gB,uCAAkB,WAAOQ,GAAP,qCAAAtU,EAAA,sDAAuBiE,EAAvB,+BAA+B,GAA/B,EACiB,EAAK2E,MAA5BuK,EADM,EACNA,UAAUC,EADJ,EACIA,UAEJkB,EAAe1S,QACzBwR,EAASkB,EAAe1S,MAAQ,GAE9B2S,EAAUnB,EAASkB,EAAe1S,MAElC4S,EAAU,kBAACF,EAAD,eAAgBjP,IAAKyH,OAAOwH,EAAe1S,MAAQ2S,EAAShU,GAAIuM,OAAOwH,EAAe1S,MAAQ2S,GAAatQ,IAC3HmP,EAASkB,EAAe1S,OAAS,EACjCuR,EAAS/L,KAAKoN,GAEd,EAAKnL,SAAS,CACV8J,WACAC,aAdU,2C,wDAmBlB/B,a,uCAAe,WAAOD,GAAP,uBAAApR,EAAA,sDACNuT,EAA0BnC,EAA1BmC,YAAaxC,EAAaK,EAAbL,UACV/N,EAAeoO,EAAfpO,OAAQzC,EAAO6Q,EAAP7Q,GAED,UAAXyC,GACAuQ,EAAc,kBAAC,EAAD,CAAanC,MAAOA,EAAOrR,IAAG,UAAK,EAAKwG,kBAAkB1G,SAA5B,kBAA8CU,KAC1FwQ,GAAU,GAIe,qBADnB8D,EAAW,IAAInD,IAAIN,EAAM/O,OACnBsP,UACRmD,QAAQC,IAAIF,EAASlD,UACrB4B,EAAc,kBAAC,EAAD,CAAanC,MAAOA,EAAOrR,IAAKqR,EAAM/O,OACpD0O,GAAU,IAGViE,OAAOC,KAAK7D,EAAM/O,MAClB0O,GAAU,GAGlB,EAAK1H,SAAS,CAAEkK,cAAaxC,cApBlB,2C,6GA2BL,IAAD,OACL,IAAIhK,KAAK6B,MAAM/G,KACf,OAAO,8BAFF,MAI6CkF,KAAK6B,MAA/C/G,EAJH,EAIGA,KAAKsR,EAJR,EAIQA,SAAUpC,EAJlB,EAIkBA,UAAWwC,EAJ7B,EAI6BA,YAC3B3R,EAAQC,EAARD,KACD8T,EAAavC,EAASzS,KAAI,SAAC0F,EAAMjB,GAAP,OACxB,kBAAC,EAAD,CAAaE,IAAKe,EAAO,GAAKjB,GAC1BiB,MAENoP,EAAoBzE,EACtB,kBAAC,EAAD,CAAO1J,UAAU,cAAcmJ,QAAS,kBAAM,EAAKnH,SAAS,CAAE0H,WAAW,KAAUN,KAAMM,EAAWvD,MAAO+F,EAAYtP,MAAMmN,MAAMxP,MAC9H2R,GAEL,KAEEoC,EAAiB,SAAC,GAAU,IAATpV,EAAQ,EAARA,GACf0G,EAAUC,cAMhB,OACI,yBAAKoL,MAAO,CAAEE,QAAS,SACnB,4BAAQrL,QAPA,WAGZF,EAAQG,KAAR,yBAA+B7G,KAID0B,KAAK,SAASoF,UAAU,oCAAoCiF,eAAa,SAAnG,oBAMNsJ,EAAa5U,aAAaC,QAAQ,QAClC2F,EAAQgP,GAA2B,cAAbA,EAA0BnU,KAAKoU,MAAMD,GAAY,KAC7E,OACI,yBAAKvO,UAAU,YACVmO,EACC5O,GAAQA,EAAKW,OAAOuO,SAAS,SAAY,kBAACH,EAAD,CAAgBpV,GAAIsB,EAAKtB,KAAS,KAC7E,wBAAI8G,UAAU,kBACTzF,GAEJ8T,O,GArIyBjO,cCPrBsO,G,kNAInBnN,MAAQ,CACNuK,SAAU,M,EAOZhJ,mBAAqB,SAACC,GAChBA,EAAU+I,WAAa,EAAKlP,MAAMkP,UAAY,EAAKlP,MAAM+R,YAAc5L,EAAU4L,WACnF,EAAKC,c,EAGTA,WAAa,WAAO,IAAD,EACe,EAAKhS,MAA7BkP,EADS,EACTA,SAAU6C,EADD,EACCA,UAClB,EAAK3M,SAAS,CAAE8J,WAAU6C,e,EAG5BE,eAAiB,SAAC9P,GAAD,OAAU,EAAKnC,MAAMiS,eAAe9P,I,kEAbnDW,KAAKkP,e,+BAgBG,IAAD,EAEyBlP,KAAK6B,MAA7BuK,EAFD,EAECA,SAAU6C,EAFX,EAEWA,UAFX,EAG6CjP,KAAK9C,MAAjDkS,EAHD,EAGCA,YAHD,IAGcD,sBAHd,MAG+B,aAH/B,EAIP,IAAK/C,EACH,OAAO,kBAAC,EAAD,MAET,IAAMiD,EAAmBJ,GAAwB7C,EAAS/N,OAEpDiR,EAAkBlD,EAAStQ,MAAM,EAAEuT,GACnCE,EAAcH,EASjBA,EAAYE,GATmBA,EAAgB3V,KAAI,SAAC0F,GAAU,IACvDxE,EAAawE,EAAbxE,KAAMrB,EAAO6F,EAAP7F,GAEd,OACE,wBAAI8G,UAAU,kBACZhC,IAAK9E,EACL4G,QAAS,kBAAM+O,EAAe9P,KAAQxE,MAI5C,OACE,6BACE,wBAAIyF,UAAU,wBACXiP,GAEH,yBAAKhE,MAAO,CAACE,QAAQ,SACjBwD,GAAaA,EAAY7C,EAAS/N,OAAW,4BAAQnD,KAAK,SAASoF,UAAU,kDAAkDF,QAASJ,KAAK9C,MAAMsS,UAAtG,aAAsI,W,GAnDzJ9O,cCCjB+O,G,kNAEjBjQ,kBAAoB,IAAI3G,E,EAExBgJ,MAAQ,CACJ6N,iBAAkB,KAClBC,oBAAqB,KACrBlR,WAAW,KACX3E,cAAc,KACdJ,UAAU,KACVkW,kBAAkB,EAClBC,gBAAgB,M,EAGpBjQ,kB,sBAAoB,sBAAA3G,EAAA,sEACV,EAAK6W,mBADK,2C,EAIpBC,mB,uCAAqB,WAAOL,GAAP,SAAAzW,EAAA,sEACX,EAAK+W,oBAAoBN,GADd,OAEjB,EAAKlQ,kBAAkBjG,mBAAmBmW,EAAiBlW,IAAIC,MAAK,SAACoW,GACjE,EAAKvN,SAAS,CAACuN,uBAHF,2C,wDAQrBI,sB,uCAAwB,WAAON,GAAP,SAAA1W,EAAA,sEACd,EAAKiX,gBAAgBP,GADP,2C,wDAIxBQ,gBAAkB,SAACzW,GACf,IAAM0W,EAAiB1W,EAAUC,KAAI,SAACuD,EAAMkB,GACxC,IAAME,EAAG,uBAAmBF,GACtBiS,EAAWnT,EAAMqL,QAAP,UAAqB,EAAK/I,kBAAkB1G,SAA5C,4BAAwEoE,EAAM1D,IAAO,KACrG,OACI,kBAAC,EAAD,eAAc8E,IAAKA,GAASpB,EAA5B,CAAmCmT,QAASA,QAGpD,OACI,yBAAK/P,UAAU,iCACV8P,I,EAKbE,Y,sBAAc,4BAAArX,EAAA,6DACJ4B,EAAOsQ,OAAO,yBAA0B,IADpC,SAEJ,EAAK3L,kBAAkB5E,aAAaC,GAFhC,uBAGJ,EAAKiV,mBAHD,2C,EAMdS,e,sBAAiB,4BAAAtX,EAAA,6DACP4B,EAAOsQ,OAAO,4BAA6B,IADpC,SAGP,EAAK3L,kBAAkBxE,gBAAgBH,EAAM,EAAKgH,MAAM6N,iBAAiBlW,IAHlE,uBAIP,EAAKwW,oBAAoB,EAAKnO,MAAM6N,kBAJ7B,2C,EAOjBc,Y,sBAAc,4BAAAvX,EAAA,6DACJ4B,EAAOsQ,OAAO,yBAA0B,IADpC,SAEJ,EAAK3L,kBAAkBrE,aAAaN,EAAM,EAAKgH,MAAM8N,oBAAoBnW,IAFrE,uBAGJ,EAAK0W,gBAAgB,EAAKrO,MAAM8N,qBAH5B,2C,EAQd7S,e,sBAAiB,sBAAA7D,EAAA,sEACP,EAAKuG,kBAAkB1C,eAAe,EAAK+E,MAAM6N,iBAAiBlW,IAD3D,cAEb,EAAK8I,SAAS,CAACoN,iBAAiB,KAAKC,oBAAoB,OAF5C,SAGP,EAAKG,mBAHE,2C,EAKjB/S,kB,sBAAoB,sBAAA9D,EAAA,sEACV,EAAKuG,kBAAkBzC,kBAAkB,EAAK8E,MAAM8N,oBAAoBnW,IAD9D,uBAEV,EAAKwW,oBAAoB,EAAKnO,MAAM6N,kBAF1B,2C,EAMpBI,iB,sBAAmB,4BAAA7W,EAAA,sEACU,EAAKuG,kBAAkBhB,mBADjC,OACTC,EADS,OAEf,EAAK6D,SAAS,CAAC7D,eAFA,2C,EAKnBuR,oB,uCAAsB,WAAON,GAAP,eAAAzW,EAAA,yDAGbyW,EAHa,iEAMU,EAAKlQ,kBAAkBd,2BAA2BgR,EAAiBlW,IAN7E,OAMZM,EANY,OAOlB,EAAKwI,SAAS,CAAExI,gBAAe4V,mBAAkBC,oBAAqB,OAPpD,2C,wDAWtBO,gB,uCAAkB,WAAOP,GAAP,eAAA1W,EAAA,yDACT0W,EADS,iEAIU,EAAKnQ,kBAAkBR,0BAA0B2Q,EAAoBnW,IAJ/E,OAIRE,EAJQ,OAKd,EAAK4I,SAAS,CAACqN,sBAAoBjW,YAAWkW,kBAAkB,IALlD,2C,wDAQlBa,kBAAoB,WAAO,IAChBb,EAAqB,EAAK/N,MAA1B+N,kBACP,EAAKtN,SAAS,CAACsN,kBAAkBA,EAAkB,K,uDAG5C,IA0CsB/U,EA1CvB,SACsHmF,KAAK6B,MAAzHpD,EADF,EACEA,WAAY3E,EADd,EACcA,cAAeJ,EAD7B,EAC6BA,UAAWmW,EADxC,EACwCA,gBAAiBH,EADzD,EACyDA,iBAAkBC,EAD3E,EAC2EA,oBAAqBC,EADhG,EACgGA,kBAIhGf,EAAa5U,aAAaC,QAAQ,QAIlC2F,EAAQgP,GAA2B,cAAbA,EAA4BnU,KAAKoU,MAAMD,GAAc,KAC3E6B,EAAc,SAAC,GAAD,IAAEpQ,EAAF,EAAEA,UAAUQ,EAAZ,EAAYA,SAAUV,EAAtB,EAAsBA,QAAtB,OAEZ,4BAAQlF,KAAK,SAASoF,UAAS,0BAAqBA,GAAaF,QAASA,GAAUU,IAGtF6P,EAAqB9Q,GAAwB,eAAhBA,EAAKW,OACnC,kBAACkQ,EAAD,CAAapQ,UAAU,UAAUF,QAAS,kBAAM,EAAKkQ,gBAArD,gBAA+F,KAE9FM,EAAwB/Q,GAAwB,eAAhBA,EAAKW,OACtC,kBAACkQ,EAAD,CAAapQ,UAAU,UAAUF,QAAS,kBAAM,EAAKmQ,mBAArD,mBAAqG,KAEpGM,EAAwBhR,GAAwB,eAAhBA,EAAKW,OACtC,kBAACkQ,EAAD,CAAapQ,UAAU,SAASF,QAAS,kBAAM,EAAKtD,mBAApD,wBAAyG,KAExGgU,EAAqBjR,GAAQA,EAAKW,OAAOuO,SAAS,SACnD,kBAAC2B,EAAD,CAAapQ,UAAU,UAAUF,QAAS,kBAAM,EAAKoQ,gBAArD,gBAA+F,KAE9FO,EAA2BlR,GAAQA,EAAKW,OAAOuO,SAAS,SACzD,kBAAC2B,EAAD,CAAapQ,UAAU,SAASF,QAAS,kBAAM,EAAKrD,sBAApD,2BAA+G,KAG9GiU,EACF,yBAAK1Q,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,wBAAd,kBACA,kBAAC,EAAD,CAAU6O,eAAgBnP,KAAK+P,mBAAoB3D,SAAU3N,IAC1DA,GAAoC,IAAtBA,EAAWJ,OAA+E,KAAjE,wBAAIiC,UAAU,sBAAd,4BACzCqQ,IAMPM,EAAoBjR,KAAK6B,MAAM6N,iBAIjC,yBAAKpP,UAAU,QACX,yBAAKA,UAAU,cANMzF,EAOI6U,EAAiB7U,KAPZ,wBAAIyF,UAAU,wBAAd,8BAAiEzF,EAAjE,MAQ1B,kBAAC,EAAD,CAAUsU,eAAgBnP,KAAKiQ,sBAAuB7D,SAAUtS,IAC7DA,GAA0C,IAAzBA,EAAcuE,OAA+E,KAAjE,wBAAIiC,UAAU,sBAAd,4BAChD,yBAAKA,UAAU,sCACdsQ,EACAC,KAX4C,KAmBnDK,EAAiBvB,GAAuBD,EAC1C,yBAAKpP,UAAU,QACX,yBAAKA,UAAU,4BACTqP,EALiB,SAAC9U,GAAD,OAAU,wBAAIyF,UAAU,qBAAd,6BAA6DzF,EAA7D,KAKNsW,CAAuBxB,EAAoB9U,MAJ3C,SAACA,GAAD,OAAU,wBAAIyF,UAAU,qBAAd,kCAAkEzF,EAAlE,KAIuCuW,CAA2B1B,EAAiB7U,MACjH8U,EACH,yBAAKpE,MAAO,CAACE,QAAQ,SACjB,yBAAKnL,UAAU,iCACVwQ,EACAC,IAGP,KACApB,EAAqB,kBAAC,EAAD,CAAUH,SAAU,kBAAI,EAAKiB,qBAAqBxB,UAAWW,EAAmBxD,SAAU1S,EAAW0V,YAAapP,KAAKmQ,kBAC7I,kBAAC,EAAD,CAAU/D,SAAUyD,EAAiBT,YAAapP,KAAKmQ,oBAGtD,KACd,OACI,6BAEI,6BACI,wBAAI7P,UAAU,oBAAd,cACA,kBAAC,EAAD,CAAK0G,KAAMgK,EAAgB/J,MAAOgK,KAEtC,yBAAK3Q,UAAU,kBACV4Q,Q,GAjMqBxQ,cAwMpCwG,EAAM,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACX4E,EAAK,0BAAuB5E,EAAS,EAAI,IAC/C,OACI,yBAAK3G,UAAU,WACX,yBAAKA,UAAWuL,GACX7E,GAEL,yBAAK1G,UAAU,YACV2G,KAMXoK,EAAe,SAAC,GAAmD,IAAjD7X,EAAgD,EAAhDA,GAAIqB,EAA4C,EAA5CA,KAAMiS,EAAsC,EAAtCA,MAAOuD,EAA+B,EAA/BA,QAASiB,EAAsB,EAAtBA,gBACxCC,EAAmBzE,EAAOA,EAAM1C,MAAK,SAAC/K,GAAD,MAAwB,wBAAdA,EAAKnE,QAAgC,KACpF6L,EAAcwK,EAAkBA,EAAgBpM,MAAM2B,MAAM,MAAM,GAAK,KACvE0K,EAAc,qBAAiBhY,GAC/B6U,EAAQgC,EAAS,yBAAK/P,UAAU,OAAO+B,IAAKgO,EAASpM,IAAI,KAAK,KAC9D/D,EAAUC,cAChB,OACI,yBAAK7B,IAAK9E,EAAI8G,UAAU,oCACpBF,QAAS,WACLF,EAAQG,KAAKmR,KAEjB,yBAAKlR,UAAU,eACX,yBAAKiL,MAAO,CAACE,QAAQ,QAASnL,UAAU,OACpC,wBAAIA,UAAU,0BACV,kBAAC,IAAD,CAAMG,GAAI+Q,GAAiB3W,IAE7ByW,EAAiB,wBAAIhR,UAAU,sCAAd,gBAAiEgR,GAAsB,OAGlH,yBAAKhR,UAAU,aACX,yBAAKA,UAAU,OACV+N,EAED,yBAAK/N,UAAU,mCACX,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,aAAayG,GAA4B,uBCjPzD0K,G,kNAEjBjS,kBAAoB,IAAI3G,E,EAExBgJ,MAAQ,CACJ6P,UAAS,EACTC,cAAe,GACfC,iBAAkB,GAClBC,aAAa,GACbC,iBAAiB,GACjBC,YAAa,GACbC,eAAgB,GAChBC,qBAAqB,KACrBC,uBAAuB,M,EAG3BC,oB,sBAAsB,sCAAAlZ,EAAA,+DACsB,EAAK4I,MAArCkQ,EADU,EACVA,YAAaC,EADH,EACGA,eADH,SAEC,EAAKxS,kBAAkBhC,oBAAoBuU,EAAaC,GAFzD,WAEZlX,EAFY,QAIR+E,KAJQ,yCAKP,EAAKyC,SAAS,CAAC2P,qBAAqB,mCAL7B,OAOlB,EAAK3P,SAAS,CAAC4P,uBAAuB,OAC9BrS,EAAgB/E,EAAhB+E,KAAM7F,EAAUc,EAAVd,MACdC,aAAayF,QAAQ,OAAQhF,KAAKC,UAAUkF,IAC5C5F,aAAayF,QAAQ,QAAS1F,GAE9B,EAAKsI,SAAS,CAACoP,UAAS,IACxB,EAAKxU,MAAMyC,eAbO,4C,EAiBtByS,sB,sBAAwB,0CAAAnZ,EAAA,+DACwD,EAAK4I,MAAzEgQ,EADY,EACZA,aAAcC,EADF,EACEA,iBAAkBH,EADpB,EACoBA,cAAeC,EADnC,EACmCA,iBADnC,SAID,EAAKpS,kBAAkB5B,sBAAsBiU,EAAcC,EAAkBH,EAAeC,GAJ3F,YAId9W,EAJc,QAMXR,MANW,yCAOT,EAAKgI,SAAS,CAAC4P,uBAAuBpX,EAAKR,SAPlC,OASpB,EAAKgI,SAAS,CAAC4P,uBAAuB,OAC9BrS,EAAgB/E,EAAhB+E,KAAM7F,EAAUc,EAAVd,MAEdC,aAAayF,QAAQ,OAAQhF,KAAKC,UAAUkF,IAC5C5F,aAAayF,QAAQ,QAAS1F,GAE9B,EAAKsI,SAAS,CAACoP,UAAS,IACxB,EAAKxU,MAAMyC,eAhBS,4C,EAmBxB0S,eAAiB,WACb,GAAG,EAAKxQ,MAAM6P,SACV,OAAO,kBAAC,IAAD,CAAUjR,GAAG,O,uDAGlB,IAAD,SAEkDT,KAAK6B,MAArDqQ,EAFF,EAEEA,uBAAwBD,EAF1B,EAE0BA,qBACzBK,EAAgB,yBAAKhS,UAAU,mBACjC,yBAAKA,UAAU,SACdN,KAAKqS,iBACF,wBAAI/R,UAAU,eAAd,mBACA,wBAAIA,UAAU,sBAAd,YACA,yBAAKA,UAAU,mCACX,2BAAOpF,KAAK,OAAOoF,UAAU,eAAeiS,YAAY,OAAO/M,aAAW,OAAO/B,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc,EAAKpB,SAAS,CAAEuP,aAAcnO,EAAOyB,YAElJ,yBAAK7E,UAAU,mCACX,2BAAOpF,KAAK,OAAOoF,UAAU,eAAeiS,YAAY,WAAW/M,aAAW,WAAW/B,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc,EAAKpB,SAAS,CAAEwP,iBAAkBpO,EAAOyB,YAG9J,yBAAK7E,UAAU,mCACX,2BAAOpF,KAAK,OAAOoF,UAAU,eAAeiS,YAAY,SAAS/M,aAAW,SAAS/B,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc,EAAKpB,SAAS,CAAEqP,cAAejO,EAAOyB,YAEvJ,yBAAK7E,UAAU,mCACX,2BAAOpF,KAAK,WAAWoF,UAAU,eAAeiS,YAAY,WAAW/M,aAAW,WAAW/B,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc,EAAKpB,SAAS,CAAEsP,iBAAkBlO,EAAOyB,YAElK,wBAAI7E,UAAU,6BAA6B4R,GAC3C,yBAAK5R,UAAU,cACX,4BAAQA,UAAU,iCAAiCpF,KAAK,SAASkF,QAASJ,KAAKoS,uBAA/E,eAKNI,EACF,yBAAKlS,UAAU,mBACX,yBAAKA,UAAU,SAEX,wBAAIA,UAAU,eAAd,0BACA,wBAAIA,UAAU,sBAAd,WACA,6BACI,yBAAKA,UAAU,mCACX,2BAAOpF,KAAK,OAAOoF,UAAU,eAAeiS,YAAY,SAAS/M,aAAW,WAAW/B,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc,EAAKpB,SAAS,CAAEyP,YAAarO,EAAOyB,YAGvJ,yBAAK7E,UAAU,mCACX,2BAAOpF,KAAK,WAAWoF,UAAU,eAAeiS,YAAY,WAAW/M,aAAW,WAAW/B,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc,EAAKpB,SAAS,CAAE0P,eAAgBtO,EAAOyB,YAEhK,wBAAI7E,UAAU,6BAA6B2R,GAC3C,yBAAK3R,UAAU,cACX,4BAAQA,UAAU,iCAAiCpF,KAAK,SAASkF,QAASJ,KAAKmS,qBAA/E,eAQpB,OACI,yBAAK7R,UAAU,cACX,kBAAC,EAAD,CAAK0G,KAAMwL,EAAYvL,MAAOqL,S,GA/GP5R,cAqHjCwG,EAAM,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACX4E,EAAK,0BAAuB5E,EAAS,EAAI,IAC/C,OACI,yBAAK3G,UAAU,WACX,yBAAKA,UAAWuL,GACX7E,GAGL,yBAAK1G,UAAU,YACV2G,KC9HIwL,G,kNAEjBjT,kBAAoB,IAAI3G,E,EAExBgJ,MAAQ,CACJ6Q,MAAM,KACNC,SAAS,KACTC,cAAc,I,EAGlBhT,kB,sBAAoB,sBAAA3G,EAAA,sDAChB,EAAK4Z,cADW,2C,EAKpBA,Y,sBAAc,kCAAA5Z,EAAA,0DACJ4V,EAAa5U,aAAaC,QAAQ,UACT,cAAb2U,EAFR,oDAOS,gBADbhP,EAAOnF,KAAKoU,MAAMD,IAChBrO,OAPE,iEAUa,EAAKhB,kBAAkBzF,cAVpC,OAUJ4Y,EAVI,OAWJG,EAAeH,EAASI,QAAO,SAAC1T,GAAD,OAAUA,EAAK7F,KAAOqG,EAAKrG,MAAIwZ,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAM1S,OAAOnC,OAAS4U,EAAMzS,OAAOnC,UAE9H,EAAKiE,SAAS,CAACoQ,MAAM7S,EAAM8S,SAASG,IAb1B,4C,EAgBdK,iB,uCAAmB,WAAO3Z,EAAI4Z,GAAX,SAAAna,EAAA,sEACT,EAAKuG,kBAAkBhF,qBAAqBhB,EAAI4Z,GADvC,uBAGT,EAAKP,cAHI,2C,0DAMnBQ,gBAAkB,SAAC9Y,GACf,IAAM+Y,EAAa/Y,EAAMZ,KAAI,SAACkG,EAAKzB,GAC/B,IAAME,EAAG,oBAAgBF,GACnB4C,EAAgC,eAAhBnB,EAAKW,OAAyB,iBAAiB,KACrE,OAAO,kBAAC,EAAD,CAAUQ,eAAgBA,EAAgB1C,IAAKA,EAAKuB,KAAMA,EAAM0T,aAAc,EAAKJ,sBAE9F,OACI,yBAAK7S,UAAU,iCACVgT,I,uDAKJ,IAAD,SAC8BtT,KAAK6B,MAAhC8Q,EADH,EACGA,SAAUC,EADb,EACaA,cACjB,OACI,6BACI,wBAAItS,UAAU,mBAAd,wBACA,kBAAC,EAAD,CAAUkP,SAAU,kBAAM,EAAKlN,SAAS,CAAEsQ,cAAeA,EAAgB,KAAM3D,UAAW2D,EAAexG,SAAUuG,EAAUvD,YAAapP,KAAKqT,uB,GAvDpH3S,cA+DrC8S,EAAW,SAAC,GAA4C,IAA1C3T,EAAyC,EAAzCA,KAAM0T,EAAmC,EAAnCA,aAAcvS,EAAqB,EAArBA,eAC5BxH,EAA2CqG,EAA3CrG,GAAIqB,EAAuCgF,EAAvChF,KAAMgD,EAAiCgC,EAAjChC,SAAU2C,EAAuBX,EAAvBW,OAAQiT,EAAe5T,EAAf4T,IAAKhW,EAAUoC,EAAVpC,MAOnCiW,EAAc,SAACjN,EAAOrG,EAASY,GAAjB,OAAoC,4BAAQV,UAAS,kBAAaU,GAA8B,MAAQZ,QAASA,GAAUqG,IAEzIkN,EAA8B,UAAXnT,GAAuBiT,EAAuD,KAAhDC,EAAY,cARjD,kBAAMH,EAAa/Z,EAAI,CAAEgH,OAAQ,YAQuC,WACpFoT,EAAkBH,EAAiD,KAA1CC,EAAY,YAR3B,kBAAMH,EAAa/Z,EAAI,CAAEia,KAAK,MAQiB,UACzDI,EAAmBJ,EAAOC,EAAY,cAR1B,kBAAMH,EAAa/Z,EAAI,CAAEia,KAAK,MAQoB,WAAY,KAC1EK,EAAgC,UAATtT,GAAqBiT,EAA6D,KAAtDC,EAAY,mBAR/C,kBAAMH,EAAa/Z,EAAI,CAAEgH,OAAQ,iBAQ+C,QAChGuT,EAA2B,SAATvT,GAAoBiT,EAAqD,KAA9CC,EAAY,aAR9C,kBAAMH,EAAa/Z,EAAI,CAACgH,OAAQ,WAQqC,WACtF,OACI,yBAAKF,UAAS,8BAAyBU,IACnC,yBAAKV,UAAU,wBACX,wBAAIA,UAAU,mBAAmBzF,EAAjC,KAAyCgD,EAAzC,IAAoDJ,GACpD,yBAAK6C,UAAU,iCACVwT,EACAH,EACAI,EACAH,EACAC,MC/BNG,G,4MAjDXnS,MAAQ,CACJhC,KAAM,M,EAGVD,kBAAoB,WAChB,EAAKqU,c,EAGTA,WAAa,WACT,IACI,IAAMpU,EAAOnF,KAAKoU,MAAM7U,aAAaC,QAAQ,SAC7C,EAAKoI,SAAS,CAAEzC,SAEpB,MAAOvF,GACH,EAAKgI,SAAS,CAAEzC,KAAM,S,uDAKpB,IAAD,OACGA,EAASG,KAAK6B,MAAdhC,KACR,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAQA,KAAMA,EAAMF,aAAc,kBAAI,EAAKsU,gBAC3C,kBAAC,IAAD,CAAO/R,KAAK,IAAIgS,UAAWzE,EAAc0E,OAAO,IAChD,kBAAC,IAAD,CAAOjS,KAAK,SAASiS,OAAO,EAAMD,UAAWzB,IAC7C,kBAAC,IAAD,CAAOvQ,KAAK,SAAUiS,OAAO,EAC7BC,OAAQ,WACJ,OAAO,kBAAC,EAAD,CAAWzU,aAAc,kBAAI,EAAKsU,mBAE7C,kBAAC,IAAD,CAAO/R,KAAK,iBACRkS,OAAQ,YAAgB,IAAbC,EAAY,EAAZA,MAEP,OAAO,kBAAC,EAAD,CAAc7a,GAAI6a,EAAMC,OAAO9a,QAE9C,kBAAC,IAAD,CAAO0I,KAAK,qBACRkS,OAAQ,YAAgB,IAAbC,EAAY,EAAZA,MAEP,OAAO,kBAAC,EAAD,CAAoB7a,GAAI6a,EAAMC,OAAO9a,c,GAzCtDkH,aCIlB6T,IAASH,OAAO,kBAAC,GAAD,MAAUjS,SAASqS,eAAe,W","file":"static/js/main.ce492c0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/videocam-dark.c3847802.jpg\";","\nexport default class WebStorageService {\n    // _apiBase = 'http://localhost:3001/api'\n       _apiBase = 'https://mike-test-heroku-node.herokuapp.com/api'\n    getResourse = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`)\n        if (!res.ok)\n            throw new Error(`Could not fetch ${url}`)\n\n        return await res.json()\n    }\n\n    getLast10Videosets = async (id) => {\n        return this.getResourse(`/videosets-last-10?categoryId=${id}`).then((videosets)=>videosets.map(this._transformItem))\n    }\n    getAllSubcategories = async () => {\n        const subcategories = await this.getResourse('/subcategoriesall')\n        return subcategories.map(this._transformItem)\n    }\n\n\n    getAllUsers = async () => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/usersall`, {\n            method: 'GET',\n            mode:'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n        })\n        \n\n        if(!res.ok){\n            return {error:true}\n        }\n\n        const users = await res.json()\n        return users.map(this._transformItem)\n    }\n\n    patchUserByMainAdmin = async (id,body) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/users?id=${id}`, {\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(body) // body data type must match \"Content-Type\" header\n        })\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    } \n\n    postCategory = async (name) => {\n        const data = {name, isPublished:true}\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/categories`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        if (!res.ok){\n            \n            return { error: true }\n        }\n\n        return await res.json()\n    }\n\n    postSubcategory = async (name, categoryId, type = \"text\") => {\n        const data = {name, type}\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/subcategories?categoryId=${categoryId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        if (!res.ok){\n            \n            return { error: true }\n        }\n\n        return await res.json()\n    }\n\n    postVideoset = async (name,subcategoryId) => {\n        const data = {name}\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/videoset?subcategoryId=${subcategoryId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        if (!res.ok){\n            \n            return { error: true }\n        }\n    }\n\n    postFormData = async(url,id,file,type,data) => {\n        const token = localStorage.getItem('token')\n        \n        const res = await fetch(`${this._apiBase}${url}${id}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        \n        if (!res.ok){\n            return { error: true }\n        }\n        const temp = await res.json();\n        const itemId = temp._id;\n        const formData = new FormData()\n        formData.append(type, file)\n\n        const newUrl = url.slice(0,url.indexOf('?'))\n        const uploading = await fetch(`${this._apiBase}${newUrl}/upload/${itemId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData // body data type must match \"Content-Type\" header,\n        })\n      \n        if (!uploading.ok)\n            return { error: true }\n\n        return { ok: true }\n    }\n\n    postPicture = async (id, file) => {\n        return await this.postFormData('/picture?pictureSliderId=', id, file, 'image', { source: 'local' })\n    }\n\n    postLogo = async (id, file) => {\n        return await this.postFormData('/logo?videosetId=', id, file, 'image', { source: 'local' })\n    }\n\n    postVideo = async (id, name, file) => {\n        return await this.postFormData('/video?videosContainerId=',id,file,'video',{source:'local', name})\n    }\n\n    postURLVideo = async (id, name, url) => {\n        const data = { source: 'external', name, file: url }\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/video?videosContainerId=${id}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        if(!res.ok)\n\n        return {error:true}\n\n        return await res.json()\n    }\n\n\n\n\n    postSlider = async (videosetId) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/picture-slider?videosetId=${videosetId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n            // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        if(!res.ok){\n            \n            return {error:true}\n        }\n\n\n        const slider = await res.json();\n        return this._transformItem(slider)\n    }\n\n    postVideosContainer = async (videosetId) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/videos-container?videosetId=${videosetId}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n            // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        if(!res.ok){\n            \n            return {error:true}\n        }\n\n\n        const videosContainer = await res.json();\n        return this._transformItem(videosContainer)\n    }\n\n\n    deleteItem = async (url, id) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}${url}?id=${id}`, {\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n            // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    }\n\n    deleteSlider = async (id) => {\n        return await this.deleteItem('/picture-slider',id)\n    }\n\n    deleteVideosContainer = async (id) => {\n        return await this.deleteItem('/videos-container',id)\n    }\n\n    deleteVideoset = async (id) => {\n        return await this.deleteItem('/videoset',id)\n    }\n\n    deleteCategory = async (id) => {\n        return await this.deleteItem('/categories', id)\n    }\n\n    deleteSubcategory = async (id) => {\n        return await this.deleteItem('/subcategories', id)\n    }\n\n    deleteLogo = async (id) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/logo?videosetId=${id}`, {\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n            // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    }\n\n    patchVideoset = async (id, props) => {\n        const token = localStorage.getItem('token')\n        const res = await fetch(`${this._apiBase}/videosets?videosetId=${id}`, {\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(props) // body data type must match \"Content-Type\" header\n        })\n\n        \n        if(!res.ok)\n        return {error:true}\n\n        return await res.json()\n    }\n\n    deletePhoto = async (id) => {\n        return await this.deleteItem('/picture',id)\n    }\n\n    deleteVideo = async (id) => {\n        return await this.deleteItem('/video',id)\n\n    }\n\n    getPicturesOfSlider = async (id) => {\n        const pictures = await this.getResourse(`/pictures?pictureSliderId=${id}`)\n        return pictures.map(picture => `${this._apiBase}/picture/${picture._id}`)\n    }\n\n    signInByCredentials = async (email, password) => {\n        const data = { email, password }\n        const url = '/users/login'\n        const res = await fetch(`${this._apiBase}${url}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        if (!res.ok)\n            return { ok: false, error: res.statusText }\n\n        return await res.json()\n\n    }\n\n    registerByCredentials = async (name, nickname, email, password) => {\n        const data = { name, nickname, email, password }\n        const url = '/users'\n        const res = await fetch(`${this._apiBase}${url}`, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n\n        const result = await res.json()\n        if (!res.ok)\n            return this.checkDataForErrors(result)\n\n        return result\n    }\n\n    getUserProfile = async (token) => {\n        const url = '/users/me'\n        const res = await fetch(`${this._apiBase}${url}`, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            }\n        })\n        if (!res.ok)\n            return { error: true }\n\n        return await res.json()\n    }\n\n\n    checkDataForErrors = (data) => {\n\n        if (data.name === \"ValidationError\") {\n            const { errors } = data\n            const keys = Object.keys(errors)\n            for (let index = 0; index < keys.length; index++) {\n                const key = keys[index]\n                if (errors[key].kind === \"required\")\n                    return { error: \"Please enter all information\" }\n\n                if (errors[key].kind === \"user defined\")\n                    return { error: `Invalid ${key}!` }\n\n                if (errors[key].kind === \"minlength\" && key === \"password\")\n                    return { error: \"Password should contain at least 7 characters!\" }\n\n            }\n        }\n\n        else if (data.name === \"MongoError\") {\n            return { error: \"This e-mail is already used, try another\" }\n        }\n\n    }\n\n\n\n\n    getAllCategories = async () => {\n        const categories = await this.getResourse('/categories')\n        return categories.map(this._transformItem)\n    }\n\n    getSubcategoriesOfCategory = async (categoryId) => {\n        const subcategories = await this.getResourse(`/subcategories?categoryId=${categoryId}`)\n        return subcategories.map(this._transformItem)\n    }\n\n    getSubcategory = async (id) => {\n        const subcategory = await this.getResourse(`/subcategories/${id}`)\n        return this._transformItem(subcategory)\n    }\n\n    getCategory = async (id) => {\n        const category = await this.getResourse(`/categories/${id}`)\n        return this._addSubcategoriesToCategory(this._transformItem(category))\n    }\n\n    getVideosetsOfSubcategory = async (subcategoryId) => {\n        const videosets = await this.getResourse(`/videosets?subcategoryId=${subcategoryId}`)\n        return videosets.map(this._transformItem)\n    }\n\n    getVideoset = async (id) => {\n        const videoset = await this.getResourse(`/videoset/${id}`)\n        return this._transformItem(videoset)\n    }\n\n\n    getVideosOfVideosContainer = async (id) => {\n        const videos = await this.getResourse(`/videos?videosContainerId=${id}`)\n        return videos.map(this._transformItem)\n    }\n\n    _transformItem = (item) => {\n        return {\n            ...item,\n            id: item._id,\n        }\n    }\n\n\n    _addSubcategoriesToCategory = async (category) => {\n        const subcategories = await this.getResourse(`/subcategories?categoryId=${category.id}`)\n        return {\n            ...category,\n            subItems: subcategories\n        }\n    }\n\n\n\n}","import React, { Component } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport './header.css'\nimport WebStorageService from '../../services/web-storage-service';\nclass Header extends Component {\n\n    webStorageService = new WebStorageService()\n    onSignOutButtonClick = () => {\n        localStorage.setItem('user', '')\n        localStorage.setItem('token', '')\n        this.props.onUserUpdate()\n    }\n\n    componentDidMount = async () => {\n        const token = localStorage.getItem('token'),\n        user = localStorage.getItem('user')\n\n        if (!token || !user)\n            return\n\n        const profile = await this.webStorageService.getUserProfile(token)\n        if (profile.error) {\n            return this.updateLocalStorage()\n        }\n        this.updateLocalStorage(JSON.stringify(profile),token)\n        \n    }\n\n    updateLocalStorage = (user, token) => {\n        localStorage.setItem('user', user)\n        localStorage.setItem('token', token)\n        this.props.onUserUpdate()\n    }\n\n    render() {\n        // localStorage.setItem('user','')\n        const { user } = this.props\n\n\n        const ViewAllUsersButton = () => {\n            const history = useHistory()\n            const onClick = () => {\n                history.push('/users')\n            }\n            return (<button onClick={onClick} className=\"btn btn-primary\" type=\"submit\">View all users</button>)\n        }\n\n        const userCard = (user) ?\n            (<div className=\"user-card card\">\n                <h5 className=\"welcome-title\">Welcome back, {user.name}!</h5>\n                <div className=\"header-button-group\">\n                    <button className=\"btn btn-secondary header-button profile-button\" type=\"submit\">View profile</button>\n                    <button className=\"btn btn-secondary header-button signout-button\" type=\"submit\" onClick={this.onSignOutButtonClick}>Sign out</button>\n                </div>\n                <div className=\"btn-group\">\n                    {(user.status === 'main-admin') ? (<ViewAllUsersButton />) : null}\n                </div>\n            </div>)\n            :\n            (<h2 className=\"login-link\">\n                <Link to=\"/login\">Login</Link>\n            </h2>)\n\n        return (\n            <div className=\"header d-flex\">\n                <div className=\"web-storage-title\">\n                    <Link to=\"/\">Web Storage</Link>\n                </div>\n                {userCard}\n\n            </div>\n        )\n    }\n}\n\nexport default Header","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css\">\n      <div className=\"lds-double-ring\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, {useState} from 'react';\nimport './file-drop-wrapper.css'\nconst FileDropWrapper = ({editable, children, onFilesAdded, extraClassName}) => {\n\n    const [highlight, setHighlight] = useState(false)\n    \n    \n    const onDragEnter = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        setHighlight(true)\n        \n    }\n    const onDragOver = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        setHighlight(true)\n    }\n    const onDragLeave = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        setHighlight(false)\n    }\n    const onDrop = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        setHighlight(false)\n        \n        onFilesAdded(e.dataTransfer)\n    }\n    const className = `card drop-area ${(extraClassName&&!highlight)?extraClassName:''} ${highlight?'highlight border-success':''}`\n    return (!editable) ? (<div>{children}</div>) : (\n        <div className={className} onDragEnter={onDragEnter} onDragOver={onDragOver} onDragLeave={onDragLeave} onDrop={onDrop}>\n            {children}\n        </div>\n    )\n}\n\nexport default FileDropWrapper","import React, { Component } from 'react';\n// import WebStorageService from '../../services/web-storage-service';\nimport './picture-slider.css'\nimport Spinner from '../spinner/spinner';\nimport FileDropWrapper from '../file-drop-wrapper/file-drop-wrapper';\nexport default class PictureSlider extends Component {\n\n    state = {\n        slides: null,\n        slideIndex: null,\n        editable: false\n    }\n\n\n    componentDidMount() {\n        // const { dataURLs, editable } = this.props\n        // const slides = (dataURLs)? dataURLs.map((path) => {\n        //     return (<SlideView key={path} path={path} />)\n        // }):null \n        // this.setState({ slides, slideIndex: 0, editable: (editable) ? editable : false })\n        this.initSlides()\n\n    }\n\n    initSlides = () => {\n        const { dataURLs, editable, slideIndex } = this.props\n\n\n        const slides = (dataURLs) ? dataURLs.map((path) => {\n            const img = document.createElement('img');\n            img.src = path;\n            return (<SlideView key={path} path={path} />)\n        }) : null\n        this.setState({ slides, slideIndex: (slideIndex && slideIndex >= 0) ? slideIndex : 0, editable: (editable) ? editable : false })\n    }\n\n    changeSlideIndex = (number) => {\n        const { slides, slideIndex } = this.state\n        const currentSlideIndex = slideIndex\n        let newSlideIndex = currentSlideIndex + number\n\n        if (newSlideIndex >= slides.length)\n            newSlideIndex -= slides.length\n\n        if (newSlideIndex < 0)\n            newSlideIndex += slides.length\n\n\n        this.setState({ slideIndex: newSlideIndex })\n    }\n\n    onPrevButtonClick = () => {\n        this.changeSlideIndex(-1)\n    }\n\n    onNextButtonClick = () => {\n        this.changeSlideIndex(1)\n    }\n\n    onDotClick = (index) => {\n        const { slideIndex } = this.state\n        this.changeSlideIndex(index - slideIndex)\n    }\n\n    onPictureAdded = async ({ files }) => {\n        const { uploadingPicture } = this.props\n        for (let i = 0; i < files.length; i++)\n            await uploadingPicture(this.props.id, this.state.slideIndex, files[i])\n    }\n\n    onPictureDeleted = () => {\n        const { slides, slideIndex } = this.state\n        const slide = slides[slideIndex]\n        this.props.deletingPicture(this.props.id, slideIndex, slide.props.path)\n\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.dataURLs !== this.props.dataURLs) {\n            this.initSlides()\n        }\n    }\n\n    render() {\n        const { slides, slideIndex, editable } = this.state\n\n        const addPictureButton = (editable) ? (\n            <div>\n                <label htmlFor=\"file-upload\" className=\"btn btn-outline-success custom-file\">\n                    Upload pictures\n                </label>\n                <input multiple=\"multiple\" onChange={({ target }) => this.onPictureAdded(target)} id=\"file-upload\" type=\"file\" className=\"custom-file-input\" />\n            </div>\n        ) : null\n        \n        if (!slides || slides.length === 0)\n            return (\n                <FileDropWrapper editable onFilesAdded={this.onPictureAdded}>\n                    <h3 className=\"error-message\">There's no content</h3>\n                    <div className=\"add-delete-btn-container\">\n                        <div className=\"add-delete-btn-group btn-group\">\n                            {addPictureButton}\n                        </div>\n                    </div>\n                </FileDropWrapper>);\n\n\n        if (!slides[slideIndex])\n            return <Spinner />\n\n        const currentSlide = slides[slideIndex];\n        const dots = slides.map((element, index) => {\n            const isActive = index === slideIndex\n            return <DotView isActive={isActive} id={index} onClick={this.onDotClick} key={\"dot\" + index} />\n        });\n\n        const addAndDeleteButtonGroup = (editable) ? (\n            <div className=\"add-delete-btn-container\">\n                <div className=\"add-delete-btn-group btn-group\">\n                    {addPictureButton}\n                    <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => this.onPictureDeleted()}>Delete picture</button>\n                </div>\n            </div>) : null\n\n\n\n\n        return (\n            <div className=\"content\">\n                <FileDropWrapper editable={editable} onFilesAdded={this.onPictureAdded}>\n                    <div className=\"slider\">\n                        <div className=\"wrap\">\n                            {currentSlide}\n                            <div className=\"prev\" onClick={this.onPrevButtonClick}>\n                                <div className=\"arrow-left\"></div>\n                            </div>\n                            <div className=\"next\" onClick={this.onNextButtonClick}>\n                                <div className=\"arrow-right\"></div>\n                            </div>\n                        </div>\n                        <div className=\"slider-dots\">\n                            {dots}\n                        </div>\n                        {addAndDeleteButtonGroup}\n\n                    </div>\n                </FileDropWrapper>\n            </div>\n        );\n    }\n}\n\nconst SlideView = ({ path }) => {\n\n    return (\n        <div className=\"slider-item\">\n            <img src={path} alt=\"slider\" />\n        </div>\n    )\n}\n\nconst DotView = ({ isActive, id, onClick }) => {\n    const className = \"dot\" + (isActive ? \" dot-active\" : \"\")\n    return (\n        <div className={className} onClick={() => onClick(id)}></div>\n    )\n}","import * as React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\n\nconst EditorContext = (props) =>\n  <div className=\"editor\">\n    <DragDropContext onDragEnd={props.onDragEnd} {...props} />\n  </div>\n\nexport default EditorContext","import * as React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst DroppableWrapper = ({droppableId,className,children}) =>\n{\n  return (\n  <Droppable droppableId={droppableId}>\n    {({innerRef,droppableProps,droppablePlaceholder}) => (\n       <div className={className}\n            ref={innerRef}\n            {...droppableProps}\n            {...droppablePlaceholder}>\n          {children}\n        </div>\n    )}\n  </Droppable>)\n}\n\nexport default DroppableWrapper","import * as React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\n\nconst DraggableItemWrapper = ({ draggableId, index, className, children }) =>\n  <Draggable draggableId={draggableId} index={index}>\n    {({innerRef,draggableProps,dragHandleProps}) => (\n      <div className={className} ref={innerRef} {...draggableProps} {...dragHandleProps}>\n        {children}\n      </div>\n    )}\n  </Draggable>\n\nexport default DraggableItemWrapper","import React from 'react';\nimport './wrapper-card.css'\n\nconst WrapperCard = ({children,header}) => {\n\n    return (\n        <div className=\"card wrapper-card\">\n            {(header) ? header : (<div className=\"mb-4\"></div>)}\n            <div className=\"wrapper-card-content\">\n                {children}\n            </div>\n        </div>)\n}\n\nexport default WrapperCard","import * as React from 'react';\nimport DraggableItemWrapper from '../drag-n-drop/draggable-item-wrapper';\nimport './draggable-box.css'\nimport WrapperCard from '../wrapper-card/wrapper-card';\n\nconst DraggableBox = ({content,value,itemPosition, onItemDeleted}) => {\n  const closeButton = (\n    <div className=\"delete-item-button\">\n      <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => onItemDeleted(value)}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>)\n  return (\n    <DraggableItemWrapper draggableId={value} index={itemPosition}>\n      \n      <div className=\"draggable-box\">\n        \n        <WrapperCard header={closeButton}>\n          \n          <div>{content}</div>\n        </WrapperCard>\n      </div>\n\n    </DraggableItemWrapper>\n  )\n}\n\nexport default DraggableBox","import * as React from 'react';\nimport DraggableBox from '../draggable-box/draggable-box';\n\n\nconst DraggableListItems = ({items,onItemDeleted}) =>{\n  \n  return <div> {items.map((item,position)=>toBox(item,position,onItemDeleted))} </div>\n}\n\nfunction toBox(item, position,onItemDeleted) {\n  \n  return <DraggableBox onItemDeleted={onItemDeleted} key={item.props.id} className=\"box\" itemPosition={position} value={item.props.id} content={item} />\n}\n\nexport default DraggableListItems","import * as React from 'react';\nimport DroppableWrapper from '../drag-n-drop/droppable-wrapper';\nimport DraggableListItems from '../drag-n-drop/draggable-list-items';\n\nconst VerticalColumn = ({id,items, onItemDeleted}) =>\n{\n  id = String(id)\n  return (\n  <DroppableWrapper droppableId={id} className=\"source\">\n    <DraggableListItems items={items} onItemDeleted={onItemDeleted}  />\n  </DroppableWrapper>)\n}\n\nexport default VerticalColumn","import React, { Component } from 'react';\nimport './videoset-description.css'\nclass VideosetDescription extends Component{\n\n    state = {\n        text:\"\",\n        editable:false,\n        editableText:\"\",\n        editStatus:false\n    }\n\n    getText = () => {\n        return this.state.text\n    }\n\n    componentDidMount = () => {\n        const {text, editable} = this.props\n\n        this.setState({text:(text)?text:'',editable:(editable)?editable:false})\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if(this.props.text !== prevProps.text){\n            this.setState({text:this.props.text})\n        }\n    }\n\n    onSaveClick = () => {\n        const {editableText} = this.state\n        this.setState({text:editableText,editStatus:false})\n        this.props.saveDescription(this.props.id, editableText)\n    }\n\n    onChangeClick = () => {\n        const {editStatus,text} = this.state\n        const newStatus = !editStatus\n        this.setState({editStatus:newStatus, editableText:text})\n    }\n    render() {\n        const { editable, editableText, editStatus, text } = this.state\n        const title = <h3 className=\"text-success\"> Description: </h3>\n        const textField = (\n        <div className=\"form-group\">\n                <textarea className=\"form-control edit-text-area\" rows=\"3\" onChange={({target})=>{this.setState({editableText:target.value})}} value={editableText}></textarea>\n                <div className=\"btn-group\">\n                    <button type=\"button\" className=\"btn btn-success save-btn\" onClick={()=>{this.onSaveClick()}}>Save changes</button>\n                    <button type=\"button\" className=\"btn btn-secondary save-btn\" data-dismiss=\"modal\" onClick={()=>this.setState({editStatus:!this.state.editStatus})}>Close</button>\n                </div>\n        </div>)\n\n        const changeButton = (editable) ? (\n            <div className=\"change-btn\">\n                <button type=\"button\" className=\"btn btn-outline-success btn-lg\" onClick={() => { this.onChangeClick() }}>Change</button>\n            </div>) : null\n\n        const linesOfDescription = text.split('\\n').map((item,index)=><h4 key={`description-line${index}`} className=\"description\">{item}</h4>);\n        \n        const description = (\n            <div className=\"card-body\">\n                {(editStatus)?textField:(linesOfDescription)}\n            </div>)\n\n\n        return (\n            <div className=\"videoset-description\">\n                <Row left={title} right={description} />\n                <div>\n                {(!editStatus)?changeButton:null}\n                </div>\n            </div>)\n    }\n}\nconst Row = ({ left, right }) => {\n    const width = `row-item`;\n    return (\n        <div className=\"row mb2\">\n            <div className={width}>\n                {left}\n            </div>\n            <div className=\"col-md-9\">\n                {right}\n            </div>\n        </div>\n    )\n}\n\nexport default VideosetDescription","import React, { Component } from 'react';\nimport './editor-bar.css'\nimport { useHistory } from 'react-router-dom';\nimport WebStorageService from '../../services/web-storage-service';\nclass EditorBar extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        isDropdownMenuOpened: false,\n        videosetItems: {\n            PictureSlider: 'Slider',\n            VideosetDescription: 'Description',\n            Videos: 'Videos'\n        },\n        isDropdownSubcategoryMenuOpened:false,\n        subcategories:[],\n        videoset:null\n    }\n\n    componentDidMount = async() => {\n        const {videoset} = this.props\n        const subcategories = await this.webStorageService.getAllSubcategories()\n        this.setState({subcategories,videoset})\n    }\n\n\n    onDropdownMenuClick = () => {\n        const { isDropdownMenuOpened } = this.state\n        const newStatus = !isDropdownMenuOpened;\n        this.setState({ isDropdownMenuOpened: newStatus })\n    }\n\n    onDropdownItemClick = (element) => {\n        this.props.onVideosetElementAdded(element)\n        this.onDropdownMenuClick()\n    }\n\n    onDropdownSubcategoryMenuClick = () => {\n        const { isDropdownSubcategoryMenuOpened } = this.state\n        const newStatus = !isDropdownSubcategoryMenuOpened;\n        this.setState({ isDropdownSubcategoryMenuOpened: newStatus })\n    }\n\n    onSubcategoryItemClick = async (id) => {\n        await this.props.changeSubcategory(id)\n        this.onDropdownSubcategoryMenuClick()\n    }\n\n    onSaveChangesButtonClick = async () => {\n        await this.props.saveChanges()\n    }\n    onCancelButtonClick = () => {\n        this.props.cancelAction()\n    }\n\n    onChangeTitleButtonClick = () => {\n        this.props.changeTitle()\n    }\n\n    onDeleteVideosetClickButton = async () => {\n        await this.props.deleteVideoset()\n    }\n\n    onChangeLogoButtonClick = async ({files}) => {\n        await this.props.changeLogo(files[0])\n        const { videoset } = this.state\n        videoset.hasLogo = true\n        this.setState({videoset})\n    }\n\n    onDeleteLogoButtonClick = async () => {\n        await this.webStorageService.deleteLogo(this.state.videoset.id)\n        const { videoset } = this.state\n        videoset.hasLogo = false\n        this.setState({videoset})\n    }\n\n    render() {\n\n        const { isDropdownMenuOpened, isDropdownSubcategoryMenuOpened, videosetItems, subcategories, videoset } = this.state\n        const dropdownMenuStyle = `dropdown-menu ${isDropdownMenuOpened ? 'show' : ''}`\n        const dropdownSubcategoryMenuStyle = `dropdown-menu ${isDropdownSubcategoryMenuOpened ? 'show' : ''}`\n        const SaveChangesButton = ({ id,onClick }) => {\n            const history = useHistory()\n            const onThisClick = async () => {\n                await onClick()\n                history.push(`/videosets/${id}`)\n            }\n            return (<button className=\"btn btn-outline-success\" onClick={onThisClick}>Save changes</button>)\n        }\n\n        const DeleteVideosetButton = ({onClick})=> {\n            const history = useHistory()\n            const onThisClick = async () => {\n                await onClick()\n                history.push(`/`)\n            }\n            return (<button className=\"change-title btn btn-danger\" onClick={onThisClick}>Delete videoset</button>)\n        }\n\n        const saveChanges = (<SaveChangesButton id={this.props.id} onClick={async()=>await this.onSaveChangesButtonClick()}/>)\n        const dropdownElements = Object.values(videosetItems).map((element) =>\n            (<div key={`add ${element}`}>\n                <span className={`dropdown-item`} onClick={() => this.onDropdownItemClick(element)}>{element}</span>\n            </div>))\n\n        const subcategoriesViews = (subcategories)?subcategories.map(({id, name})=>\n            (<div key={`add ${id}`}>\n                <span className={`dropdown-item ${this.state.videoset.owner === id ? 'text-info' : ''}`} onClick={() => this.onSubcategoryItemClick(id)}>{name}</span>\n            </div>\n        )):null\n        const changeTitle = <button type=\"button\" className=\"change-title btn btn-primary\" onClick={this.onChangeTitleButtonClick}>Change title</button>\n\n        const changeLogo = (\n            <div className=\"change-title\">\n                <label htmlFor=\"file-upload\" className=\"btn btn-warning custom-file\">Upload logo</label>\n                <input onChange={({ target }) => this.onChangeLogoButtonClick(target)} id=\"file-upload\" type=\"file\" className=\"custom-file-input\" />\n            </div>)\n\n        const deleteLogo = (<button type=\"button\" className=\"change-title btn btn-danger\" onClick={this.onDeleteLogoButtonClick}>Delete logo</button>)\n        const deleteVideosetButton = <DeleteVideosetButton id={this.props.id} onClick={async()=>await this.onDeleteVideosetClickButton()}/>\n        return (\n            <div className=\"editor-bar-container\">\n                <div className=\"card editor-bar\">\n                    <ul className=\"nav nav-pills\">\n                        <li className=\"nav-item dropdown add-dropdown\">\n                            <h4 className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                                onClick={() => this.onDropdownMenuClick()}>Add item</h4>\n                            <div className={dropdownMenuStyle} x-placement=\"bottom-start\">\n                                {dropdownElements}\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"btn-group\">\n                                {changeLogo}\n                                {(videoset && videoset.hasLogo)?deleteLogo:null}\n                                {changeTitle}\n                                {deleteVideosetButton}\n                            </div>\n                        </li>\n                        <li className=\"nav-item dropdown add-dropdown\">\n                            <h4 className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                                onClick={() => this.onDropdownSubcategoryMenuClick()}>Select subcategory</h4>\n                            <div className={dropdownSubcategoryMenuStyle} x-placement=\"bottom-start\">\n                                {subcategoriesViews}\n                            </div>\n                        </li>\n                        <li className=\"nav-item editor-bar-buttons\">\n                            <div className=\"btn-group\">\n                                {saveChanges}\n                                <button className=\"btn btn-outline-danger\" onClick={this.onCancelButtonClick}>Cancel</button>\n                            </div>\n                        </li>\n                        \n\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default EditorBar","import React from 'react';\nimport './modal.css'\nconst Modal = ({ onClose, show, title, children, footer }) => {\n\n    const modalClassName = `video-modal modal ${show?'in display-block':'display-none'}`\n    return (\n        <div className={modalClassName}  tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\">\n                <div className=\"modal-backdrop\" onClick={({target}) =>(target.className === \"modal-backdrop\")?onClose():''}>\n                <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\">{title}</h4>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" onClick={()=>onClose()}>&times;</button>\n\n                        </div>\n                        <div className=\"modal-body\">\n                            {children}\n                        </div>\n                        <div className=\"modal-footer\">\n                        {footer}\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={onClose}>Go back</button>\n                            \n                        </div>\n                    </div>\n                </div>\n                </div>\n        </div>\n    )\n}\n\nexport default Modal","import React, { Component } from 'react'\nimport FileDropWrapper from '../file-drop-wrapper/file-drop-wrapper'\nimport videoLogo from './pictures/videocam-dark.jpg'\nimport './videos-container.css'\nimport Modal from '../modal/modal'\nimport Url from 'url-parse'\nexport default class VideosContainer extends Component {\n\n    // webStorageService = new WebStorageService()\n    state = {\n        editable:false,\n        videos:[],\n        showModal:false,\n        inputFormURL:null\n    }\n\n    componentDidMount = async () => {\n        const {videos, editable} = this.props\n        \n        this.setState({ videos, editable: (editable) ? editable : false })\n    }\n\n    onVideoViewClick = (id) => {\n        const {videos} = this.state\n        const currentVideo = videos.find((video)=>video.id === id)\n        this.props.onVideoClick(currentVideo)\n    }\n\n\n    uploadingVideos = async ({files}) => {\n        const {id,uploadingVideo, updateContainer} = this.props\n        \n        for(let i=0;i<files.length;i++)\n            await uploadingVideo(id, files[i])\n\n        this.setState({showModal:false})\n        await updateContainer(id)\n        \n    }\n\n    showModal = () => {        \n        this.setState({ showModal: true })\n    }\n\n    uploadingURLVideo = async () => {\n        const {inputFormURL} = this.state\n        \n        const url = new Url(inputFormURL)\n        const hostname = url.hostname\n        if(hostname === 'www.youtube.com'){\n            const queryString = url.query\n            const queryParams = new URLSearchParams(queryString.slice(1))\n\n            const value = queryParams.get('v')\n            const newURL = `https://www.youtube.com/embed/${value}`\n            const name = prompt('Input video name: ', 'Video')\n            await this.props.uploadingURLVideo(this.props.id,name, newURL)\n            \n        }\n        else {\n            const name = prompt('Input video name: ', 'Video')\n            await this.props.uploadingURLVideo(this.props.id,name, inputFormURL)\n        }\n        this.setState({showModal:false})\n\n\n    }\n\n    render() {\n\n        const { videos, editable, showModal } = this.state\n        const { id } = this.props\n\n        const showVideoUploadingModalButton = (editable) ? (\n            <div>\n                <button type=\"button\" className=\"btn btn-outline-success\" onClick={this.showModal}>Upload more videos</button>\n            </div>\n        ) : null\n        const addVideosButton = (editable) ? (\n            <div className=\"add-videos-button\">\n                <label htmlFor=\"file-upload\" className=\"btn btn-outline-success custom-file\">\n                    Upload videos\n                </label>\n                <input multiple=\"multiple\" onChange={({ target }) => this.uploadingVideos(target)} id=\"file-upload\" type=\"file\" className=\"custom-file-input\" />\n            </div>\n        ) : null\n\n        const addAndDeleteButtonGroup = (editable) ? (\n            <div className=\"add-delete-btn-container\">\n                <div className=\"add-delete-btn-group btn-group\">\n                    {showVideoUploadingModalButton}\n                </div>\n            </div>) : null\n\n        const modal = (showModal) ? (\n            <Modal show={showModal} onClose={() => this.setState({ showModal: false })} title=\"Uploading video\">\n                <div className=\"d-flex list-group nav-pills\">\n                    <div className=\"video-modal-line\">\n                        <h2>Upload video from compatible services</h2>\n                    </div>\n                    \n                    <div className=\"video-modal-line input-group\">\n                        <input className=\"form-control form-control-lg\" onChange={({ target }) => this.setState({ inputFormURL: target.value })} />\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-primary\" type=\"button\" onClick={this.uploadingURLVideo}>Upload</button>\n                        </div>\n                    </div>\n                    \n                    <div className=\"video-modal-line\">\n                        <h2 style={{ textAlign: 'center' }}>OR</h2>\n                    </div>\n                   \n                    <div className=\"video-modal-line\">\n                        <h2>Upload your local videos</h2>\n                    </div>\n                    \n                    <div className=\"video-modal-line\">\n                        <FileDropWrapper extraClassName=\"border-light\" editable onFilesAdded={this.uploadingVideos}>\n                            <div>\n                                <div className=\"col-lg-12 video-uploading-modal-card\">\n                                    <div className=\"video-uploading-text card-body\">\n                                        <h4 className=\"\">Drop videos here</h4>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </FileDropWrapper>\n                        <div style={{ display: 'flex' }} className=\"btn-group\">\n                            {addVideosButton}\n                        </div>\n                    </div>\n                    {/* </li> */}\n                </div>\n            </Modal>\n        ) : null\n\n        if (!videos || videos.length === 0)\n            return (\n                <div>\n                {modal}\n                <FileDropWrapper editable={editable} key={id} onFilesAdded={this.uploadingVideos}>\n                    <h3 className=\"error-message\">There's no content</h3>\n                    {addAndDeleteButtonGroup}\n                </FileDropWrapper>\n                </div>\n                );\n\n        const videosViews = (videos.length === 0)?(<h4 className=\"no-content\">There's no content</h4>):videos.map(({name, id}, index) => (\n            <div key={`video${index}`} className=\"video-card card\" onClick={()=>this.onVideoViewClick(id)}>\n                <h5 className=\"card-header\">{name}</h5>\n                <div className=\"card-body\">\n                    <img src={videoLogo} alt=\"img\"/>\n                </div>\n            </div>\n        ))\n\n\n        \n\n        return (\n            <div>\n                {modal}\n                <FileDropWrapper editable={editable} key={id} onFilesAdded={this.uploadingVideos}>\n                    <h2 className=\"videos-module-title\">Videos</h2>\n                    <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            {videosViews}\n                        </div>\n                        </div>\n                        {addAndDeleteButtonGroup}\n                    </div>\n                </FileDropWrapper>\n            </div>\n        )\n    }\n}\n\n\n\n","import React from 'react';\n\nconst VideoPlayer = ({ url }) => {\n    return (\n        <div className=\"video-player\">\n            <div className=\"card\">\n                <div className=\"thumb-wrap\">\n                    <iframe title={url} width=\"560\" height=\"315\" src={url} frameBorder=\"0\" allowFullScreen></iframe>\n                </div>\n            </div>\n            <div id=\"grey\"></div>\n        </div>)\n}\n\nexport default VideoPlayer","import React, { Component } from 'react';\nimport PictureSlider from '../picture-slider/picture-slider';\nimport WebStorageService from '../../services/web-storage-service';\nimport EditorContext from '../drag-n-drop/editor-context';\nimport VerticalColumn from '../vertical-column/vertical-column';\nimport VideosetDescription from '../videoset-description/videoset-description';\nimport EditorBar from '../editor-bar/editor-bar'\nimport VideosContainer from '../videos-container/videos-container';\nimport VideoPlayer from '../video-player/video-player'\nimport './videoset-editor-page.css'\nimport Modal from '../modal/modal'\nimport Url from 'url-parse'\n\nexport default class VideosetEditorPage extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        data: null,\n        startData: null,\n        columnId: 0,\n        itemList: [],\n        videosetId: null,\n        counters: {\n\n        },\n        deleted: [],\n        added: [],\n        videoPlayer: null,\n        showModal: false,\n        showVideoUploadingModal:false\n    }\n\n    onDragEnd = async (result) => {\n        const { destination, source } = result;\n\n        if (!destination) { return }\n\n        const { itemList } = this.state;\n        const movedPart = itemList.splice(source.index, 1)[0];\n        itemList.splice(destination.index, 0, movedPart)\n       \n        this.setState({ itemList })\n        \n\n    }\n\n    async componentDidMount() {\n        const { id } = this.props\n        const { getVideoset, getSubcategory } = this.webStorageService\n        const videosetData = await getVideoset(id)\n        const subcategoryData = await getSubcategory(videosetData.owner)\n        this.setState({ videosetId: id, data: videosetData, startData: videosetData, subcategoryData })    \n        \n        this.initialAddingItems()\n    }\n\n    initialAddingItems = async () => {\n\n        const { data } = this.state\n        const { order } = data\n        \n\n        for (let i = 0; i < order.length; i++) {\n            const element = order[i]\n            \n            if (element.type === 'VideosetDescription' && element.value !== null) {\n                this.addItemToColumn(VideosetDescription, { text: element.value, saveDescription:this.saveDescription, editable: true })\n            }\n            else if (element.type === 'PictureSlider' && element.value) {\n                const dataURLs = await this.webStorageService.getPicturesOfSlider(element.value)\n                \n                this.addItemToColumn(PictureSlider, { id: element.value, dataURLs, editable: true, uploadingPicture: this.uploadingPicture, deletingPicture: this.deletingPicture })\n            }\n\n            else if (element.type === 'VideosContainer' && element.value) {\n                const videos = await this.webStorageService.getVideosOfVideosContainer(element.value)\n                await this.addItemToColumn(VideosContainer, { id: element.value, videos, uploadingURLVideo: this.uploadingURLVideo, updateContainer: this.updateContainer, editable: true, onVideoClick: this.onVideoClick, uploadingVideo: this.uploadingVideo })\n            }\n        }\n\n    }\n\n    uploadingPicture = async (id, slideIndex, picture) => {\n        const res = await this.webStorageService.postPicture(id, picture)\n        if (!res.ok) {\n            \n            return\n        }\n        // const dataURLs = await this.webStorageService.getPicturesOfSlider(this.props.id)\n        this.updateSlider(id, slideIndex)\n    }\n\n    deletingPicture = async (id, slideIndex, path) => {\n        let i = path.length - 1\n        while (path[i] !== '/') i--\n        const pictureId = path.substring(i + 1)\n\n        const res = await this.webStorageService.deletePhoto(pictureId)\n\n        if (res.error)\n            return\n\n        this.updateSlider(id, slideIndex)\n\n\n    }\n\n    deletingVideo = async ({ id, owner }) => {\n        const res = await this.webStorageService.deleteVideo(id)\n\n        if (res.error)\n            return\n\n        await this.updateContainer(owner)\n        this.setState({ showModal: false })\n\n\n    }\n\n    updateSlider = async (id, slideIndex) => {\n        const { itemList } = this.state\n        const dataURLs = await this.webStorageService.getPicturesOfSlider(id)\n\n        const indexOfElement = itemList.findIndex((item) => item.props.id === id);\n        const newSlider = <PictureSlider {...itemList[indexOfElement].props} dataURLs={dataURLs} slideIndex={(slideIndex > 0) ? slideIndex - 1 : null} />\n        itemList[indexOfElement] = newSlider\n\n        this.setState({ itemList })\n    }\n\n\n    addItemToColumn = (ReactComponent, props = {}) => {\n        const { itemList, counters } = this.state\n\n        if (!counters[ReactComponent.name])\n            counters[ReactComponent.name] = 0\n\n        const counter = counters[ReactComponent.name]\n\n        const newItem = <ReactComponent key={String(ReactComponent.name) + counter} id={String(ReactComponent.name) + counter} {...props} />\n        counters[ReactComponent.name] += 1\n        itemList.push(newItem)\n       \n        this.setState({\n            itemList,\n            counters\n        })\n    }\n\n    onVideosetElementAdded = async (element) => {\n        let ReactComponentName, props\n        switch (element) {\n            case 'Slider':\n                ReactComponentName = PictureSlider\n                const slider = await this.webStorageService.postSlider(this.props.id)\n                props = { id: slider.id, editable: true, uploadingPicture: this.uploadingPicture, deletingPicture: this.deletingPicture }\n                break\n\n            case 'Description':\n                ReactComponentName = VideosetDescription\n                props = { text: \"\", editable: true, saveDescription: this.saveDescription }\n                break\n\n            case 'Videos':\n                ReactComponentName = VideosContainer\n                const videosContainer = await this.webStorageService.postVideosContainer(this.props.id)\n                const videos = await this.webStorageService.getVideosOfVideosContainer(videosContainer.id)\n                props = { id: videosContainer.id, videos, updateContainer:this.updateContainer,uploadingURLVideo:this.uploadingURLVideo, uploadingVideo: this.uploadingVideo, onVideoClick: this.onVideoClick, editable: true }\n                break\n\n            default: return\n        }\n\n        this.addItemToColumn(ReactComponentName, props)\n        const { added, itemList } = this.state\n        added.push(itemList[itemList.length - 1])\n    }\n\n    uploadingVideo = async (id, video) => {\n        \n        const name = prompt(\"Input video name: \", \"Video\")\n        const res = await this.webStorageService.postVideo(id, name, video)\n        if (!res.ok) {\n            return\n        }\n    }\n\n    uploadingURLVideo =  (id,name, url) => {\n        this.webStorageService.postURLVideo(id,name, url).then(()=>{\n            this.updateContainer(id)\n        })\n    }\n\n\n    updateContainer = async (id) => {\n        \n        const {itemList} = this.state\n        const videos = await this.webStorageService.getVideosOfVideosContainer(id)\n        \n        const indexOfElement = itemList.findIndex((item) => item.props.id === id);\n        const newProps = {...itemList[indexOfElement].props,videos}\n        itemList.splice(indexOfElement,1)\n        this.setState({itemList})\n\n        \n        \n        this.addItemToColumn(VideosContainer,newProps)\n        const {itemList:itemList1} = this.state\n        const newItem = itemList1.pop()\n        itemList1.splice(indexOfElement,0,newItem)\n        this.setState({itemList:itemList1})\n    }\n\n    onVideoClick = async (video) => {\n        let {videoPlayer, showModal} = video\n        const { source, id } = video\n\n        if (source === 'local') {\n            videoPlayer = <VideoPlayer video={video} url={`${this.webStorageService._apiBase}/video/${id}`} />\n            showModal=true\n        }\n        else {\n            const videoURL = new Url(video.file)\n            if(videoURL.hostname === 'www.youtube.com'){\n                console.log(videoURL.hostname)\n                videoPlayer = <VideoPlayer video={video} url={video.file} />\n                showModal=true\n            }\n            else {\n                window.open(video.file);\n                showModal=false\n            }\n        }\n        this.setState({ videoPlayer, showModal })\n        \n    }\n\n    onVideosetItemDeleted = async (id) => {\n        const { itemList, deleted } = this.state\n        const index = itemList.indexOf(itemList.find((item) => item.props.id === id))\n        deleted.push(itemList.splice(index, 1)[0])\n\n        this.setState({ itemList, deleted })\n        \n    }\n\n    saveDescription = (id, text) => {\n        const { itemList, counters } = this.state\n        const index = itemList.indexOf(itemList.find((item) => item.props.id === id))\n        const key = String(VideosetDescription.name) + counters[VideosetDescription.name]++\n        itemList[index] = <VideosetDescription editable key={key} id={key} text={text} saveDescription={this.saveDescription} />\n        this.setState({ itemList, counters })\n    }\n\n    saveChanges = async () => {\n        const { data, itemList, deleted } = this.state\n       \n        const order = []\n        console.log(itemList)\n        for(let i=0;i<itemList.length;i++){\n            const item = itemList[i]\n            const newItem = { type: item.type.name }\n            switch (item.type.name) {\n                case 'PictureSlider':\n                case 'VideosContainer':\n                    newItem.value = item.props.id\n                    break\n\n                case 'VideosetDescription':\n                    newItem.value = item.props.text\n                    break\n\n                default: return\n            }\n            order.push(newItem)\n        }\n        data.order = order\n        console.log(order)\n        await this.webStorageService.patchVideoset(this.props.id, { order, name:data.name, owner:data.owner })\n\n        \n        if (deleted.length !== 0) {\n            \n            for (let i = 0; i < deleted.length; i++) {\n                if (deleted[i].type.name === 'PictureSlider') {\n                    await this.webStorageService.deleteSlider(deleted[i].props.id)\n                }\n                else if (deleted[i].type.name === 'VideosContainer') {\n                    await this.webStorageService.deleteVideosContainer(deleted[i].props.id)\n                }\n            }\n        }\n\n\n        this.setState({ data, deleted: [] })\n    }\n\n    cancelAction = async () => {\n        const { startData, added } = this.state\n        for (let i = 0; i < added.length; i++) {\n            if (added[i].type.name === 'PictureSlider') {\n                await this.webStorageService.deleteSlider(added[i].props.id)\n            }\n        }\n        this.setState({ data: startData, added: [], itemList: [] })\n        this.initialAddingItems()\n    }\n\n    changeTitle = () => {\n        const {data} = this.state\n        const newTitle = prompt(\"Input new title\", data.name)\n        if (newTitle && newTitle !== '') {\n            data.name = newTitle\n            this.setState(data)\n        }\n    }\n\n    changeLogo = async (logo) => {\n        await this.webStorageService.postLogo(this.state.data.id, logo)\n    }\n\n    changeSubcategory = (id) => {\n        const {data} = this.state\n        data.owner = id\n        this.setState({data})\n    }\n    \n    deleteVideoset = async () => {\n        await this.webStorageService.deleteVideoset(this.state.data.id)\n    }\n\n    render() {\n        const { data, columnId, itemList, videoPlayer, showModal } = this.state\n\n        if (!data)\n            return null\n        const { name } = data\n\n        const deleteVideoButton = (<button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => this.deletingVideo(videoPlayer.props.video)}>Delete video</button>)\n        const videoPlayerModal = (showModal) ? (\n            <Modal className=\"video-modal\" footer={deleteVideoButton} onClose={() => this.setState({ showModal: false })} show={showModal} title={videoPlayer.props.video.name}>\n                {videoPlayer}\n            </Modal>\n        ) : null\n\n        return (\n            <div className=\"videoset\">\n                {videoPlayerModal}\n\n                <h1 className=\" videoset-title\">\n                    {name}\n                </h1>\n\n                <EditorBar changeLogo={this.changeLogo} id={data.id} videoset={data} changeSubcategory={this.changeSubcategory} deleteVideoset={this.deleteVideoset} changeTitle={this.changeTitle} onVideosetElementAdded={this.onVideosetElementAdded} saveChanges={this.saveChanges} cancelAction={this.cancelAction} />\n                <EditorContext onDragEnd={this.onDragEnd}>\n                    <VerticalColumn id={columnId} items={itemList} onItemDeleted={this.onVideosetItemDeleted} />\n                </EditorContext>\n\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react';\nimport WebStorageService from '../../services/web-storage-service';\nimport VideosetDescription from '../videoset-description/videoset-description';\nimport VideosContainer from '../videos-container/videos-container'\nimport PictureSlider from '../picture-slider/picture-slider';\nimport WrapperCard from '../wrapper-card/wrapper-card'\nimport VideoPlayer from '../video-player/video-player';\nimport Modal from '../modal/modal';\nimport Url from 'url-parse'\nimport './videoset-page.css'\nimport { useHistory } from 'react-router-dom';\n\nexport default class VideosetPage extends Component {\n\n    webStorageService = new WebStorageService()\n    state = {\n        data:null,\n        showModal:false,\n        videoPlayer:null,\n        itemList:[],\n        counters:{\n\n        }\n    }\n\n    componentDidMount = async () => {\n        const { id } = this.props\n        const videoset = await this.webStorageService.getVideoset(id)\n\n        this.setState({ data: videoset })\n        this.initialAddingItems()\n    }\n\n    initialAddingItems = async () => {\n\n        const { data } = this.state\n        const { order } = data\n        // data.order = []\n        // this.setState({data})\n\n        for (let i = 0; i < order.length; i++) {\n            const element = order[i]\n            \n            if (element.type === 'VideosetDescription' && element.value !== null) {\n                await this.addItemToColumn(VideosetDescription, { text: element.value })\n            }\n            else if (element.type === 'PictureSlider' && element.value) {\n                const dataURLs = await this.webStorageService.getPicturesOfSlider(element.value)\n                await this.addItemToColumn(PictureSlider, { id: element.value, dataURLs})\n            }\n\n            else if (element.type === 'VideosContainer' && element.value) {\n                const videos = await this.webStorageService.getVideosOfVideosContainer(element.value)\n                await this.addItemToColumn(VideosContainer, { id: element.value, videos,onVideoClick: this.onVideoClick })\n            }\n        }\n\n    }\n\n    addItemToColumn = async (ReactComponent, props = {}) => {\n        const { itemList, counters } = this.state\n\n        if (!counters[ReactComponent.name])\n            counters[ReactComponent.name] = 0\n\n        const counter = counters[ReactComponent.name]\n\n        const newItem = <ReactComponent key={String(ReactComponent.name) + counter} id={String(ReactComponent.name) + counter} {...props} />\n        counters[ReactComponent.name] += 1\n        itemList.push(newItem)\n       \n        this.setState({\n            itemList,\n            counters\n        })\n\n    }\n\n    onVideoClick = async (video) => {\n        let {videoPlayer, showModal} = video\n        const { source, id } = video\n\n        if (source === 'local') {\n            videoPlayer = <VideoPlayer video={video} url={`${this.webStorageService._apiBase}/video/${id}`} />\n            showModal=true\n        }\n        else {\n            const videoURL = new Url(video.file)\n            if(videoURL.hostname === 'www.youtube.com'){\n                console.log(videoURL.hostname)\n                videoPlayer = <VideoPlayer video={video} url={video.file} />\n                showModal=true\n            }\n            else {\n                window.open(video.file);\n                showModal=false\n            }\n        }\n        this.setState({ videoPlayer, showModal })\n        \n    }\n\n\n\n\n    render() {\n        if(!this.state.data){\n        return <div></div>\n        }\n        const { data,itemList, showModal, videoPlayer } = this.state\n        const {name} = data\n        const pageItems =  itemList.map((item, index)=>\n                <WrapperCard key={item + '' + index}>\n                   {item}\n                </WrapperCard>)\n        const videoPlayerModal = (showModal) ? (\n            <Modal className=\"video-modal\" onClose={() => this.setState({ showModal: false })} show={showModal} title={videoPlayer.props.video.name}>\n                {videoPlayer}\n            </Modal>\n        ) : null\n\n        const EditPageButton = ({id}) => {\n            const history = useHistory()\n            const onClick = () => {\n                // history.goBack()\n                // history.goBack()\n                history.push(`/edit-videoset/${id}`)\n            }\n            return (\n                <div style={{ display: 'flex' }}>\n                    <button onClick={onClick} type=\"button\" className=\"edit-btn btn btn-lg btn-secondary\" data-dismiss=\"modal\" >Edit this page</button>\n                </div>\n            )\n        }\n        \n\n        const userString = localStorage.getItem('user')\n        const user = (userString && userString!=='undefined')?JSON.parse(userString):null;\n        return (\n            <div className=\"videoset\">\n                {videoPlayerModal}\n                {(user && user.status.endsWith('admin')) ? <EditPageButton id={data.id} /> : null}\n                <h1 className=\"videoset-title\">\n                    {name}\n                </h1>\n                {pageItems}\n            </div>)\n    }\n\n\n}\n\n","import React, { Component } from 'react';\n\nimport Spinner from '../spinner/spinner'\nimport './item-list.css';\n\nexport default class ItemList extends Component {\n\n  // swapiService = new SwapiService()\n\n  state = {\n    itemList: null\n  }\n\n  componentDidMount() {\n    this.updateList()\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.itemList !== this.props.itemList || this.props.maxNumber !== prevProps.maxNumber)\n      this.updateList()\n  }\n\n  updateList = () => {\n    const { itemList, maxNumber } = this.props\n    this.setState({ itemList, maxNumber })\n  }\n\n  onItemSelected = (item) => this.props.onItemSelected(item)\n\n\n  render() {\n\n    const { itemList, maxNumber } = this.state\n    const { renderItems, onItemSelected = () => { } } = this.props\n    if (!itemList)\n      return <Spinner />\n\n    const numberOfElements = maxNumber ? maxNumber : itemList.length\n\n    const currentItemList = itemList.slice(0,numberOfElements)\n    const itemViews = (!renderItems)? currentItemList.map((item) => {\n      const { name, id } = item\n      \n      return (\n        <li className=\"list-group-item\"\n          key={id}\n          onClick={() => onItemSelected(item)}>{name}\n        </li>\n      )\n    }):renderItems(currentItemList)\n    return (\n      <div>\n        <ul className=\"item-list list-group\">\n          {itemViews}\n        </ul>\n        <div style={{display:'flex'}}>\n          {(maxNumber && maxNumber < itemList.length) ? (<button type=\"button\" className=\"show-more-button btn btn-lg btn-outline-success\" onClick={this.props.showMore}>Show more</button>) : null}\n        </div>\n      </div>\n\n    );\n  }\n}\n","\nimport React, { Component } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport WebStorageService from '../../services/web-storage-service'\nimport ItemList from '../item-list/item-list'\nimport './category-page.css'\nexport default class CategoryPage extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        selectedCategory: null,\n        selectedSubcategory: null,\n        categories:null,\n        subcategories:null,\n        videosets:null,\n        numberOfVideosets:5,\n        last10Videosets:null\n    }\n\n    componentDidMount = async () => {\n        await this.updateCategories()\n    }\n\n    onCategorySelected = async (selectedCategory) => {\n        await this.updateSubcategories(selectedCategory)\n        this.webStorageService.getLast10Videosets(selectedCategory.id).then((last10Videosets)=>{\n            this.setState({last10Videosets})\n        })\n        \n    }\n\n    onSubcategorySelected = async (selectedSubcategory) => {\n        await this.updateVideosets(selectedSubcategory)\n    }\n\n    renderVideosets = (videosets) => {\n        const videosetsCards = videosets.map((props,index) => {\n            const key = `VideosetCard-${index}`\n            const logoURL = (props.hasLogo) ? `${this.webStorageService._apiBase}/logo?videosetId=${props.id}` : null\n            return (\n                <VideosetCard key={key} {...props} logoURL={logoURL}/>\n            )\n        })\n        return (\n            <div className=\"videosets-container container\">\n                {videosetsCards}\n            </div>\n        )\n    }\n\n    addCategory = async () => {\n        const name = prompt('Input name of category', '')\n        await this.webStorageService.postCategory(name)\n        await this.updateCategories()\n    }\n\n    addSubcategory = async () => {\n        const name = prompt('Input name of subcategory', '')\n        \n        await this.webStorageService.postSubcategory(name, this.state.selectedCategory.id)\n        await this.updateSubcategories(this.state.selectedCategory)\n    }\n\n    addVideoset = async () => {\n        const name = prompt('Input name of videoset', '')\n        await this.webStorageService.postVideoset(name, this.state.selectedSubcategory.id)\n        await this.updateVideosets(this.state.selectedSubcategory)\n    }\n\n    \n\n    deleteCategory = async () => {\n        await this.webStorageService.deleteCategory(this.state.selectedCategory.id)\n        this.setState({selectedCategory:null,selectedSubcategory:null})\n        await this.updateCategories()\n    }\n    deleteSubcategory = async () => {\n        await this.webStorageService.deleteSubcategory(this.state.selectedSubcategory.id)\n        await this.updateSubcategories(this.state.selectedCategory)\n    }\n\n\n    updateCategories = async () => {\n        const categories = await this.webStorageService.getAllCategories()\n        this.setState({categories})\n    }\n\n    updateSubcategories = async (selectedCategory) => {\n        // const {selectedCategory} = this.state\n\n        if (!selectedCategory)\n            return;\n\n        const subcategories = await this.webStorageService.getSubcategoriesOfCategory(selectedCategory.id)\n        this.setState({ subcategories, selectedCategory, selectedSubcategory: null })\n\n    }\n\n    updateVideosets = async (selectedSubcategory) => {\n        if (!selectedSubcategory)\n            return\n\n        const videosets = await this.webStorageService.getVideosetsOfSubcategory(selectedSubcategory.id)\n        this.setState({selectedSubcategory,videosets, numberOfVideosets:5})\n    }\n\n    showMoreVideosets = () => {\n        const {numberOfVideosets} = this.state\n        this.setState({numberOfVideosets:numberOfVideosets+5})\n    }\n\n    render () {\n        const { categories, subcategories, videosets, last10Videosets, selectedCategory, selectedSubcategory, numberOfVideosets } = this.state\n        \n        // const onNullText = <h4 className='select-message'>Select the category</h4>\n\n        const userString = localStorage.getItem('user')\n        \n\n        \n        const user = (userString && userString!=='undefined') ? JSON.parse(userString) : null\n        const ColorButton = ({className,children, onClick}) => (\n            // <div className=\"add-delete-btn-group btn-group\">\n                <button type=\"button\" className={`btn btn-outline-${className}`} onClick={onClick}>{children}</button>\n            // \n            )\n        const addCategoryButton = (user && user.status === 'main-admin')\n            ?<ColorButton className=\"success\" onClick={() => this.addCategory()}>Add category</ColorButton>:null\n\n        const addSubcategoryButton = (user && user.status === 'main-admin')\n            ?<ColorButton className=\"success\" onClick={() => this.addSubcategory()}>Add subcategory</ColorButton>:null\n\n        const deleteCategoryButton = (user && user.status === 'main-admin')\n            ?<ColorButton className=\"danger\" onClick={() => this.deleteCategory()}>Delete this category</ColorButton>:null\n\n        const addVideosetButton = (user && user.status.endsWith('admin'))\n            ?<ColorButton className=\"success\" onClick={() => this.addVideoset()}>Add videoset</ColorButton>:null\n\n        const deleteSubcategoryButton = (user && user.status.endsWith('admin'))\n            ?<ColorButton className=\"danger\" onClick={() => this.deleteSubcategory()}>Delete this subcategory</ColorButton>:null\n\n        \n        const categoriesList = (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h4 className=\"all-categories-title\">All Categories</h4>\n                    <ItemList onItemSelected={this.onCategorySelected} itemList={categories} />\n                    {(!categories || categories.length === 0)?<h3 className='no-content-message'>Oops, there's no content</h3>:null}\n                    {addCategoryButton}\n                </div>\n            </div>)\n\n        \n        const renderCategoryTitle = (name) => <h4 className=\"all-categories-title\">Subcategories of category \"{name}\"</h4>\n        const categoryDetails = (!this.state.selectedCategory) ? null : (\n            // <div>\n            //     <ItemDetails renderTitle={renderCategoryTitle} renderSubitems={this.renderSubcategories} onSubitemSelected={this.onSubcategorySelected} onNullText={onNullText} itemId={this.state.selectedCategory} getData={this.webStorageService.getCategory} getSubitems={this.webStorageService.getSubcategoriesOfCategory} />\n            // </div>)\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    {renderCategoryTitle(selectedCategory.name)}\n                    <ItemList onItemSelected={this.onSubcategorySelected} itemList={subcategories} />\n                    {(!subcategories || subcategories.length === 0)?<h3 className='no-content-message'>Oops, there's no content</h3>:null}\n                    <div className=\"category-details-buttons btn-group\">\n                    {addSubcategoryButton}\n                    {deleteCategoryButton}\n                    </div>\n                </div>\n            </div>\n            )\n\n        const renderSubcategoryTitle = (name) => <h3 className=\"subcategory-title\">Videosets of subcategory \"{name}\"</h3>\n        const renderLast10VideosetsTitle = (name) => <h3 className=\"subcategory-title\">Last 10 videosets of category \"{name}\"</h3>\n        const videosetViews = (selectedSubcategory || selectedCategory) ? (\n            <div className=\"card\">\n                <div className=\"videoset-views card-body\">\n                    {(selectedSubcategory)?renderSubcategoryTitle(selectedSubcategory.name):renderLast10VideosetsTitle(selectedCategory.name)}\n                    { (selectedSubcategory)?(\n                    <div style={{display:'flex'}}>\n                        <div className=\"btn-group add-videoset-button\">\n                            {addVideosetButton}\n                            {deleteSubcategoryButton}\n                        </div>\n                    </div>\n                    ):null}\n                    {(selectedSubcategory)?<ItemList showMore={()=>this.showMoreVideosets()} maxNumber={numberOfVideosets} itemList={videosets} renderItems={this.renderVideosets}/>\n                    :<ItemList itemList={last10Videosets} renderItems={this.renderVideosets}/>}\n                    \n                </div>\n            </div>) : null\n        return (\n            <div>\n\n                <div>\n                    <h3 className=\"categories-title\">Categories</h3>\n                    <Row left={categoriesList} right={categoryDetails} />\n                </div>\n                <div className=\"videoset-views\">\n                    {videosetViews}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst Row = ({ left, right }) => {\n    const width = `row-item col-md-${(right) ? 6 : 12}`;\n    return (\n        <div className=\"row mb2\">\n            <div className={width}>\n                {left}\n            </div>\n            <div className=\"col-md-6\">\n                {right}\n            </div>\n        </div>\n    )\n}\n\nconst VideosetCard = ({ id, name, order, logoURL, subcategoryName }) => {\n    const descriptionItem = (order)?order.find((item) => item.type === 'VideosetDescription'):null\n    const description = descriptionItem ? descriptionItem.value.split('\\n')[0] : null\n    const pathToVideoset = `/videosets/${id}`\n    const logo = (logoURL)?<img className='logo' src={logoURL} alt=\"\"/>:null\n    const history = useHistory()\n    return (\n        <div key={id} className=\"videoset-card card border-success\"\n            onClick={() => {\n                history.push(pathToVideoset)\n            }} >\n            <div className=\"card-header\">\n                <div style={{display:'flex'}} className=\"row\">\n                    <h4 className=\"videoset-preview-title\">\n                        <Link to={pathToVideoset}>{name}</Link>\n                    </h4>\n                    {(subcategoryName)?<h4 className=\"videoset-preview-subcategory-title\">Subcategory: {subcategoryName}</h4>:null}\n                </div>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    {logo}\n                    \n                    <div className=\"videoset-card-description col-9\">\n                        <h4 className=\"card-title\">Description:</h4>\n                        <p className=\"card-text\">{description ? description : 'No description'}</p>\n                    </div>\n                </div>\n            </div>\n        </div>)\n}","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport './login-page.css'\nimport WebStorageService from '../../services/web-storage-service';\nexport default class LoginPage extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        redirect:false,\n        registerEmail: '',\n        registerPassword: '',\n        registerName:'',\n        registerNickname:'',\n        signInEmail: '',\n        signInPassword: '',\n        onSignInErrorMessage:null,\n        onRegisterErrorMessage:null\n    }\n\n    onSignInButtonClick = async () => {\n        const { signInEmail, signInPassword } = this.state\n        const data = await this.webStorageService.signInByCredentials(signInEmail, signInPassword)\n        \n        if (!data.user) \n            return this.setState({onSignInErrorMessage:\"Incorrect e-mail or password!\"})\n        \n        this.setState({onRegisterErrorMessage:null})\n        const { user, token } = data\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n\n        this.setState({redirect:true})\n        this.props.onUserUpdate()\n        \n    }\n\n    onRegisterButtonClick = async () => {\n        const { registerName, registerNickname, registerEmail, registerPassword } = this.state\n\n        \n        const data = await this.webStorageService.registerByCredentials(registerName, registerNickname, registerEmail, registerPassword)\n        \n        if (data.error) {\n            return this.setState({onRegisterErrorMessage:data.error})\n        }\n        this.setState({onRegisterErrorMessage:null})\n        const { user, token } = data\n        \n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n\n        this.setState({redirect:true})\n        this.props.onUserUpdate()\n    }\n\n    renderRedirect = () => {\n        if(this.state.redirect)\n            return <Redirect to=\"/\" />\n    }\n\n    render() {\n\n        const {onRegisterErrorMessage, onSignInErrorMessage} = this.state\n        const registerCard = (<div className=\"login-card card\">\n            <div className=\"login\">\n            {this.renderRedirect()}\n                <h3 className=\"login-title\">Or if you don't</h3>\n                <h1 className=\"login-title-second\">Register</h1>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" aria-label=\"Name\" onChange={({target}) => this.setState({ registerName: target.value })} />\n                </div>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Nickname\" aria-label=\"Nickname\" onChange={({target}) => this.setState({ registerNickname: target.value })} />\n                </div>\n\n                <div className=\"input-group input-group-lg mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"E-mail\" aria-label=\"E-mail\" onChange={({target}) => this.setState({ registerEmail: target.value })} />\n                </div>\n                <div className=\"input-group input-group-lg mb-3\">\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" onChange={({target}) => this.setState({ registerPassword: target.value })} />\n                </div>\n                <h4 className=\"error-message text-danger\">{onRegisterErrorMessage}</h4>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-secondary login-button\" type=\"submit\" onClick={this.onRegisterButtonClick}>Register</button>\n                </div>\n            </div>\n        </div>)\n\n        const signInCard = (\n            <div className=\"login-card card\">\n                <div className=\"login\">\n\n                    <h3 className=\"login-title\">If you have an account</h3>\n                    <h1 className=\"login-title-second\">Sign in</h1>\n                    <div>\n                        <div className=\"input-group input-group-lg mb-3\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"E-mail\" aria-label=\"Username\" onChange={({target}) => this.setState({ signInEmail: target.value })} />\n\n                        </div>\n                        <div className=\"input-group input-group-lg mb-3\">\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" onChange={({target}) => this.setState({ signInPassword: target.value })} />\n                        </div>\n                        <h4 className=\"error-message text-danger\">{onSignInErrorMessage}</h4>\n                        <div className=\"form-group\">\n                            <button className=\"btn btn-secondary login-button\" type=\"submit\" onClick={this.onSignInButtonClick}>Sign in</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n\n        return (\n            <div className=\"login-page\">\n                <Row left={signInCard} right={registerCard} />\n            </div>\n        )\n    }\n}\n\nconst Row = ({ left, right }) => {\n    const width = `row-item col-md-${(right) ? 6 : 12}`;\n    return (\n        <div className=\"row mb2\">\n            <div className={width}>\n                {left}\n            </div>\n\n            <div className=\"col-md-6\">\n                {right}\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport WebStorageService from '../../services/web-storage-service';\nimport './edit-users-page.css'\nimport ItemList from '../item-list/item-list';\nexport default class EditUsersPage extends Component {\n\n    webStorageService = new WebStorageService()\n\n    state = {\n        admin:null,\n        allUsers:null,\n        numberOfUsers:20\n    }\n\n    componentDidMount = async () =>{\n        this.updateUsers()\n        // await this.updateUsers()\n    }\n\n    updateUsers = async () => {\n        const userString = localStorage.getItem('user')\n        if(!userString || userString==='undefined')\n        return\n        \n\n        const user = JSON.parse(userString)\n        if(user.status !== 'main-admin')\n        return\n        \n        const allUsers = await this.webStorageService.getAllUsers()\n        const updatedUsers = allUsers.filter((item) => item.id !== user.id).sort((user1, user2) => user2.status.length - user1.status.length)\n        \n        this.setState({admin:user, allUsers:updatedUsers})\n    }\n\n    changeUserStatus = async (id, changes) => {\n        await this.webStorageService.patchUserByMainAdmin(id, changes)\n        \n        await this.updateUsers()\n    }\n\n    renderUserViews = (users) => {\n        const usersCards = users.map((user,index) => {\n            const key = `User-Card-${index}`\n            const extraClassName=(user.status === 'main-admin')?'border-warning':null\n            return <UserCard extraClassName={extraClassName} key={key} user={user} changeStatus={this.changeUserStatus} />\n        })\n        return (\n            <div className=\"videosets-container container\">\n                {usersCards}\n            </div>\n        ) \n    }\n\n    render(){\n        const {allUsers, numberOfUsers} = this.state\n        return (\n            <div>\n                <h1 className=\"all-users-title\">All registered users</h1>\n                <ItemList showMore={() => this.setState({ numberOfUsers: numberOfUsers + 3 })} maxNumber={numberOfUsers} itemList={allUsers} renderItems={this.renderUserViews} />\n            </div>\n        )\n    }\n}\n\n\n\nconst UserCard = ({ user, changeStatus, extraClassName }) => {\n    const { id, name, nickname, status, ban, email } = user\n    const makeAdmin = () => changeStatus(id, { status: 'admin' })\n    const banUser = () => changeStatus(id, { ban: true })\n    const unbanUser = () => changeStatus(id, { ban: false })\n    const makeMainAdmin = () => changeStatus(id, { status: 'main-admin' })\n    const makeUser = () => changeStatus(id, {status: 'user'})\n\n    const colorButton = (title, onClick, extraClassName) => <button className={`btn btn-${extraClassName?extraClassName:null}`} onClick={onClick}>{title}</button>\n    \n    const makeAdminButton = (status !== 'admin' && !ban) ? colorButton('Make admin',makeAdmin,'primary') : null\n    const banUserButton = (!ban) ? colorButton('Ban user',banUser, 'danger'):null\n    const unbanUserButton = (ban) ? colorButton('Unban user',unbanUser, 'success'): null\n    const makeMainAdminButton = (status==='admin' && !ban) ? colorButton('Make main-admin',makeMainAdmin, 'info'): null\n    const makeUserButton = (status!=='user' && !ban) ? colorButton('Make user', makeUser, 'warning'):null\n    return (\n        <div className={`card border-primary ${extraClassName}`}>\n            <div className=\"card-body row d-flex\" >\n                <h4 className=\"user-card-title\">{name} @{nickname} {email}</h4>\n                <div className=\"user-view-btn-group btn-group\">\n                    {makeMainAdminButton}\n                    {makeAdminButton}\n                    {makeUserButton}\n                    {banUserButton}\n                    {unbanUserButton}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from '../header/header'\nimport VideosetEditorPage from '../videoset-editor-page/videoset-editor-page'\nimport VideosetPage from '../videoset-page/videoset-page.jsx'\nimport CategoryPage from '../category-page/category-page'\nimport LoginPage from '../login-page/login-page';\nimport EditUsersPage from '../edit-users-page/edit-users-page';\n\nclass App extends Component {\n\n    state = {\n        user: null\n    }\n\n    componentDidMount = () => {\n        this.updateUser()\n    }\n\n    updateUser = () => {\n        try {\n            const user = JSON.parse(localStorage.getItem('user'))\n            this.setState({ user })\n        }\n        catch (error) {\n            this.setState({ user: null })\n        }\n    }\n\n\n    render() {\n        const { user } = this.state\n        return (\n            <div>\n                <Router>\n                    <Header user={user} onUserUpdate={()=>this.updateUser()}/>\n                    <Route path=\"/\" component={CategoryPage} exact={true} />\n                    <Route path=\"/users\" exact={true} component={EditUsersPage}/>\n                    <Route path=\"/login\"  exact={true} \n                    render={()=>{\n                        return <LoginPage onUserUpdate={()=>this.updateUser()}/>\n                    }}/>\n                    <Route path=\"/videosets/:id\"\n                        render={({ match }) => {\n\n                            return <VideosetPage id={match.params.id} /> //TODO\n                        }} />\n                    <Route path=\"/edit-videoset/:id\"\n                        render={({ match }) => {\n\n                            return <VideosetEditorPage id={match.params.id} /> //TODO\n                        }} />\n\n                </Router>\n            </div>\n        )\n    }\n\n\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport App from './components/app/app'\n\n// import WebStorageService from './services/web-storage-service'\n\n// const webStorageService = new WebStorageService()\n\n// webStorageService.getSubcategoriesOfCaterogy('5e6e267f778aa7368426d5b8')\n// .then((categories)=>console.log(categories))\n// .catch((error)=>console.log(error))\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n\n"],"sourceRoot":""}